600A "Extract Numbers" "implementation, strings" "You are given string s. Let\'s call word any largest sequence of consecutive symbols without symbols \',\' (comma) and \';\' (semicolon). For example, there are four words in string ""aba,123;1a;0"": ""aba"", ""123"", ""1a"", ""0"". A word can be empty: for example, the string s="";;"" contains three empty words separated by \';\'.
You should find all words in the given string that are nonnegative INTEGER numbers without leading zeroes and build by them new string a. String a should contain all words that are numbers separating them by \',\' (the order of numbers should remain the same as in the string s). By all other words you should build string b in the same way (the order of numbers should remain the same as in the string s).
Here strings ""101"", ""0"" are INTEGER numbers, but ""01"" and ""1.0"" are not.
For example, for the string aba,123;1a;0 the string a would be equal to ""123,0"" and string b would be equal to ""aba,1a"".
The only line of input contains the string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105). The string contains only symbols \'.\' (ASCII 46), \',\' (ASCII 44), \';\' (ASCII 59), digits, lowercase and uppercase latin letters.
Print the string a to the first line and string b to the second line. Each string should be surrounded by quotes (ASCII 34).
If there are no words that are numbers print dash (ASCII 45) on the first line. If all words are numbers print dash on the second line.
In the second example the string s contains five words: ""1"", """", ""01"", ""a0"", """"." "1600  x5327"
599E "Sandy and Nuts" "bitmasks, dp, trees" "Rooted tree is a connected graph without any simple cycles with one vertex selected as a root. In this problem the vertex number 1 will always serve as a root.
Lowest common ancestor of two vertices u and v is the farthest from the root vertex that lies on both the path from u to the root and on path from v to the root. We will denote it as LCA(u,\xe2\x80\x89v).
Sandy had a rooted tree consisting of n vertices that she used to store her nuts. Unfortunately, the underwater storm broke her tree and she doesn\'t remember all it\'s edges. She only managed to restore m edges of the initial tree and q triples ai, bi and ci, for which she supposes LCA(ai,\xe2\x80\x89bi)\xe2\x80\x89=\xe2\x80\x89ci.
Help Sandy count the number of trees of size n with vertex 1 as a root, that match all the information she remembered. If she made a mess and there are no such trees then print 0. Two rooted trees are considered to be distinct if there exists an edge that occur in one of them and doesn\'t occur in the other one.
The first line of the input contains three integers n, m and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8913,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89<\xe2\x80\x89n,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of vertices, the number of edges and LCA triples remembered by Sandy respectively.
Each of the next m lines contains two integers ui and vi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ui,\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89ui\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89vi) \xe2\x80\x94 the numbers of vertices connected by the i-th edge. It\'s guaranteed that this set of edges is a subset of edges of some tree.
The last q lines contain the triplets of numbers ai, bi, ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi,\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). Each of these triples define LCA(ai,\xe2\x80\x89bi)\xe2\x80\x89=\xe2\x80\x89ci. It\'s not guaranteed that there exists a tree that satisfy all the given LCA conditions.
Print a single integer \xe2\x80\x94 the number of trees of size n that satisfy all the conditions.
In the second sample correct answer looks like this:
In the third sample there are two possible trees:
In the fourth sample the answer is 0 because the information about LCA is inconsistent." "2600  x671"
599D "Spongebob and Squares" "brute force, math" "Spongebob is already tired trying to reason his weird actions and calculations, so he simply asked you to find all pairs of n and m, such that there are exactly x distinct squares in the table consisting of n rows and m columns. For example, in a 3\xe2\x80\x89\xc3\x97\xe2\x80\x895 table there are 15 squares with side one, 8 squares with side two and 3 squares with side three. The total number of distinct squares in a 3\xe2\x80\x89\xc3\x97\xe2\x80\x895 table is 15\xe2\x80\x89+\xe2\x80\x898\xe2\x80\x89+\xe2\x80\x893\xe2\x80\x89=\xe2\x80\x8926.
The first line of the input contains a single integer x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018) \xe2\x80\x94 the number of squares inside the tables Spongebob is interested in.
First print a single integer k \xe2\x80\x94 the number of tables with exactly x distinct squares inside.
Then print k pairs of integers describing the tables. Print the pairs in the order of increasing n, and in case of equality \xe2\x80\x94 in the order of increasing m.
In a 1\xe2\x80\x89\xc3\x97\xe2\x80\x892 table there are 2 1\xe2\x80\x89\xc3\x97\xe2\x80\x891 squares. So, 2 distinct squares in total.
In a 2\xe2\x80\x89\xc3\x97\xe2\x80\x893 table there are 6 1\xe2\x80\x89\xc3\x97\xe2\x80\x891 squares and 2 2\xe2\x80\x89\xc3\x97\xe2\x80\x892 squares. That is equal to 8 squares in total." "1900  x2591"
599C "Day at the Beach" sortings "One day Squidward, Spongebob and Patrick decided to go to the beach. Unfortunately, the weather was bad, so the friends were unable to ride waves. However, they decided to spent their time building sand castles.
At the end of the day there were n castles built by friends. Castles are numbered from 1 to n, and the height of the i-th castle is equal to hi. When friends were about to leave, Squidward noticed, that castles are not ordered by their height, and this looks ugly. Now friends are going to reorder the castles in a way to obtain that condition hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89+\xe2\x80\x891 holds for all i from 1 to n\xe2\x80\x89-\xe2\x80\x891.
Squidward suggested the following process of sorting castles: 
Even Patrick understands that increasing the number of blocks in partitioning will ease the sorting process. Now friends ask you to count the maximum possible number of blocks in a partitioning that satisfies all the above requirements.
The first line of the input contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of castles Spongebob, Patrick and Squidward made from sand during the day.
The next line contains n integers hi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). The i-th of these integers corresponds to the height of the i-th castle.
Print the maximum possible number of blocks in a valid partitioning.
In the first sample the partitioning looks like that: [1][2][3].
In the second sample the partitioning is: [2, 1][3, 2]" "1600  x4669"
599B "Spongebob and Joke" implementation "While Patrick was gone shopping, Spongebob decided to play a little trick on his friend. The naughty Sponge browsed through Patrick\'s personal stuff and found a sequence a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89am of length m, consisting of integers from 1 to n, not necessarily distinct. Then he picked some sequence f1,\xe2\x80\x89f2,\xe2\x80\x89...,\xe2\x80\x89fn of length n and for each number ai got number bi\xe2\x80\x89=\xe2\x80\x89fai. To finish the prank he erased the initial sequence ai.
It\'s hard to express how sad Patrick was when he returned home from shopping! We will just say that Spongebob immediately got really sorry about what he has done and he is now trying to restore the original sequence. Help him do this or determine that this is impossible.
The first line of the input contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the lengths of sequences fi and bi respectively.
The second line contains n integers, determining sequence f1,\xe2\x80\x89f2,\xe2\x80\x89...,\xe2\x80\x89fn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89fi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
The last line contains m integers, determining sequence b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bm (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
Print ""Possible"" if there is exactly one sequence ai, such that bi\xe2\x80\x89=\xe2\x80\x89fai for all i from 1 to m. Then print m integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89am.
If there are multiple suitable sequences ai, print ""Ambiguity"".
If Spongebob has made a mistake in his calculations and no suitable sequence ai exists, print ""Impossible"".
In the first sample 3 is replaced by 1 and vice versa, while 2 never changes. The answer exists and is unique.
In the second sample all numbers are replaced by 1, so it is impossible to unambiguously restore the original sequence.
In the third sample fi\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x893 for all i, so no sequence ai transforms into such bi and we can say for sure that Spongebob has made a mistake." "1500  x4412"
599A "Patrick and Shopping" implementation "Today Patrick waits for a visit from his friend Spongebob. To prepare for the visit, Patrick needs to buy some goodies in two stores located near his house. There is a d1 meter long road between his house and the first shop and a d2 meter long road between his house and the second shop. Also, there is a road of length d3 directly connecting these two shops to each other. Help Patrick calculate the minimum distance that he needs to walk in order to go to both shops and return to his house.
Patrick always starts at his house. He should visit both shops moving only along the three existing roads and return back to his house. He doesn\'t mind visiting the same shop or passing the same road multiple times. The only goal is to minimize the total distance traveled.
The first line of the input contains three integers d1, d2, d3 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89d1,\xe2\x80\x89d2,\xe2\x80\x89d3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108) \xe2\x80\x94 the lengths of the paths. 
Print the minimum distance that Patrick will have to walk in order to visit both shops and return to his house.
The first sample is shown on the picture in the problem statement. One of the optimal routes is: house  first shop  second shop  house.
In the second sample one of the optimal routes is: house  first shop  house  second shop  house." "800  x29193"
598F "Cut Length" geometry "Given simple (without self-intersections) n-gon. It is not necessary convex. Also you are given m lines. For each line find the length of common part of the line and the n-gon.
The boundary of n-gon belongs to polygon. It is possible that n-gon contains 180-degree angles.
The first line contains integers n and m (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000;1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100). The following n lines contain coordinates of polygon vertices (in clockwise or counterclockwise direction). All vertices are distinct.
The following m lines contain line descriptions. Each of them contains two distict points of a line by their coordinates.
All given in the input coordinates are real numbers, given with at most two digits after decimal point. They do not exceed 105 by absolute values.
Print m lines, the i-th line should contain the length of common part of the given n-gon and the i-th line. The answer will be considered correct if the absolute or relative error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x896." "2900  x380"
598E "Chocolate Bar" "brute force, dp" "You have a rectangular chocolate bar consisting of n\xe2\x80\x89\xc3\x97\xe2\x80\x89m single squares. You want to eat exactly k squares, so you may need to break the chocolate bar. 
In one move you can break any single rectangular piece of chocolate in two rectangular pieces. You can break only by lines between squares: horizontally or vertically. The cost of breaking is equal to square of the break length.
For example, if you have a chocolate bar consisting of 2\xe2\x80\x89\xc3\x97\xe2\x80\x893 unit squares then you can break it horizontally and get two 1\xe2\x80\x89\xc3\x97\xe2\x80\x893 pieces (the cost of such breaking is 32\xe2\x80\x89=\xe2\x80\x899), or you can break it vertically in two ways and get two pieces: 2\xe2\x80\x89\xc3\x97\xe2\x80\x891 and 2\xe2\x80\x89\xc3\x97\xe2\x80\x892 (the cost of such breaking is 22\xe2\x80\x89=\xe2\x80\x894).
For several given values n, m and k find the minimum total cost of breaking. You can eat exactly k squares of chocolate if after all operations of breaking there is a set of rectangular pieces of chocolate with the total size equal to k squares. The remaining n\xc2\xb7m\xe2\x80\x89-\xe2\x80\x89k squares are not necessarily form a single rectangular piece.
The first line of the input contains a single integer t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8940910) \xe2\x80\x94 the number of values n, m and k to process.
Each of the next t lines contains three integers n, m and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(n\xc2\xb7m,\xe2\x80\x8950)) \xe2\x80\x94 the dimensions of the chocolate bar and the number of squares you want to eat respectively.
For each n, m and k print the minimum total cost needed to break the chocolate bar, in order to make it possible to eat exactly k squares.
In the first query of the sample one needs to perform two breaks:
In the second query of the sample one wants to eat 3 unit squares. One can use exactly the same strategy as in the first query of the sample." "2000  x5088"
598D "Igor In the Museum" "dfs and similar, graphs, shortest paths" "Igor is in the museum and he wants to see as many pictures as possible.
Museum can be represented as a rectangular field of n\xe2\x80\x89\xc3\x97\xe2\x80\x89m cells. Each cell is either empty or impassable. Empty cells are marked with \'.\', impassable cells are marked with \'*\'. Every two adjacent cells of different types (one empty and one impassable) are divided by a wall containing one picture.
At the beginning Igor is in some empty cell. At every moment he can move to any empty cell that share a side with the current one.
For several starting positions you should calculate the maximum number of pictures that Igor can see. Igor is able to see the picture only if he is in the cell adjacent to the wall with this picture. Igor have a lot of time, so he will examine every picture he can see.
First line of the input contains three integers n, m and k (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(n\xc2\xb7m,\xe2\x80\x89100\xe2\x80\x89000)) \xe2\x80\x94 the museum dimensions and the number of starting positions to process.
Each of the next n lines contains m symbols \'.\', \'*\' \xe2\x80\x94 the description of the museum. It is guaranteed that all border cells are impassable, so Igor can\'t go out from the museum.
Each of the last k lines contains two integers x and y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) \xe2\x80\x94 the row and the column of one of Igor\'s starting positions respectively. Rows are numbered from top to bottom, columns \xe2\x80\x94 from left to right. It is guaranteed that all starting positions are empty cells.
Print k integers \xe2\x80\x94 the maximum number of pictures, that Igor can see if he starts in corresponding position." "1700  x11226"
598C "Nearest vectors" "geometry, sortings" "You are given the set of vectors on the plane, each of them starting at the origin. Your task is to find a pair of vectors with the minimal non-oriented angle between them.
Non-oriented angle is non-negative value, minimal between clockwise and counterclockwise direction angles. Non-oriented angle is always between 0 and \xcf\x80. For example, opposite directions vectors have angle equals to \xcf\x80.
First line of the input contains a single integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of vectors.
The i-th of the following n lines contains two integers xi and yi (|x|,\xe2\x80\x89|y|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910\xe2\x80\x89000,\xe2\x80\x89x2\xe2\x80\x89+\xe2\x80\x89y2\xe2\x80\x89>\xe2\x80\x890) \xe2\x80\x94 the coordinates of the i-th vector. Vectors are numbered from 1 to n in order of appearing in the input. It is guaranteed that no two vectors in the input share the same direction (but they still can have opposite directions).
Print two integer numbers a and b (a\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89b) \xe2\x80\x94 a pair of indices of vectors with the minimal non-oriented angle. You can print the numbers in any order. If there are many possible answers, print any." "2300  x4488"
598B "Queries on a String" "implementation, strings" "You are given a string s and should process m queries. Each query is described by two 1-based indices li, ri and integer ki. It means that you should cyclically shift the substring s[li... ri] ki times. The queries should be processed one after another in the order they are given.
One operation of a cyclic shift (rotation) is equivalent to moving the last character to the position of the first character and shifting all other characters one position to the right.
For example, if the string s is abacaba and the query is l1\xe2\x80\x89=\xe2\x80\x893,\xe2\x80\x89r1\xe2\x80\x89=\xe2\x80\x896,\xe2\x80\x89k1\xe2\x80\x89=\xe2\x80\x891 then the answer is abbacaa. If after that we would process the query l2\xe2\x80\x89=\xe2\x80\x891,\xe2\x80\x89r2\xe2\x80\x89=\xe2\x80\x894,\xe2\x80\x89k2\xe2\x80\x89=\xe2\x80\x892 then we would get the string baabcaa.
The first line of the input contains the string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910\xe2\x80\x89000) in its initial state, where |s| stands for the length of s. It contains only lowercase English letters.
Second line contains a single integer m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300) \xe2\x80\x94 the number of queries.
The i-th of the next m lines contains three integers li, ri and ki (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ki\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000) \xe2\x80\x94 the description of the i-th query.
Print the resulting string s after processing all m queries.
The sample is described in problem statement." "1300  x11223"
598A "Tricky Sum" math "In this problem you are to calculate the sum of all integers from 1 to n, but you should take all powers of two with minus in the sum.
For example, for n\xe2\x80\x89=\xe2\x80\x894 the sum is equal to \xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89-\xe2\x80\x892\xe2\x80\x89+\xe2\x80\x893\xe2\x80\x89-\xe2\x80\x894\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x894, because 1, 2 and 4 are 20, 21 and 22 respectively.
Calculate the answer for t values of n.
The first line of the input contains a single integer t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of values of n to be processed.
Each of next t lines contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the requested sum for each of t integers n given in the input.
The answer for the first sample is explained in the statement." "900  x26800"
597C Subsequences "data structures, dp" "For the given sequence with n different elements find the number of increasing subsequences with k\xe2\x80\x89+\xe2\x80\x891 elements. It is guaranteed that the answer is not greater than 8\xc2\xb71018.
First line contain two integer values n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910) \xe2\x80\x94 the length of sequence and the number of elements in increasing subsequences.
Next n lines contains one integer ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) each \xe2\x80\x94 elements of sequence. All values ai are different.
Print one integer \xe2\x80\x94 the answer to the problem." "1900  x5066"
597B Restaurant "dp, greedy, sortings" "A restaurant received n orders for the rental. Each rental order reserve the restaurant for a continuous period of time, the i-th order is characterized by two time values \xe2\x80\x94 the start time li and the finish time ri (li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri).
Restaurant management can accept and reject orders. What is the maximal number of orders the restaurant can accept?
No two accepted orders can intersect, i.e. they can\'t share even a moment of time. If one order ends in the moment other starts, they can\'t be accepted both.
The first line contains integer number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105) \xe2\x80\x94 number of orders. The following n lines contain integer values li and ri each (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the maximal number of orders that can be accepted." "1600  x4871"
597A Divisibility math "Find the number of k-divisible numbers on the segment [a,\xe2\x80\x89b]. In other words you need to find the number of such integer values x that a\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b and x is divisible by k.
The only line contains three space-separated integers k, a and b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018;\xe2\x80\x89-\xe2\x80\x891018\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018).
Print the required number." "1600  x4539"
596E "Wilbur and Strings" "dfs and similar, dp, graphs, strings" "Wilbur the pig now wants to play with strings. He has found an n by m table consisting only of the digits from 0 to 9 where the rows are numbered 1 to n and the columns are numbered 1 to m. Wilbur starts at some square and makes certain moves. If he is at square (x, y) and the digit d (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x899) is written at position (x, y), then he must move to the square (x\xe2\x80\x89+\xe2\x80\x89ad, y\xe2\x80\x89+\xe2\x80\x89bd), if that square lies within the table, and he stays in the square (x, y) otherwise. Before Wilbur makes a move, he can choose whether or not to write the digit written in this square on the white board. All digits written on the whiteboard form some string. Every time a new digit is written, it goes to the end of the current string.
Wilbur has q strings that he is worried about. For each string si, Wilbur wants to know whether there exists a starting position (x, y) so that by making finitely many moves, Wilbur can end up with the string si written on the white board.
The first line of the input consists of three integers n, m, and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200) \xe2\x80\x94 the dimensions of the table and the number of strings to process, respectively.
Each of the next n lines contains m digits from 0 and 9 giving the table itself.
Then follow 10 lines. The i-th of them contains the values ai\xe2\x80\x89-\xe2\x80\x891 and bi\xe2\x80\x89-\xe2\x80\x891 (\xe2\x80\x89-\xe2\x80\x89200\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200), i.e. the vector that Wilbur uses to make a move from the square with a digit i\xe2\x80\x89-\xe2\x80\x891 in it.
There are q lines that follow. The i-th of them will contain a string si consisting only of digits from 0 to 9. It is guaranteed that the total length of these q strings won\'t exceed 1\xe2\x80\x89000\xe2\x80\x89000.
For each of the q strings, print ""YES"" if Wilbur can choose x and y in order to finish with this string after some finite number of moves. If it\'s impossible, than print ""NO"" for the corresponding string.
In the first sample, there is a 1 by 1 table consisting of the only digit 0. The only move that can be made is staying on the square. The first string can be written on the white board by writing 0 repeatedly. The second string cannot be written as there is no 2 on the table." "2500  x393"
596D "Wilbur and Trees" "dp, math, probabilities, sortings" "Wilbur the pig really wants to be a beaver, so he decided today to pretend he is a beaver and bite at trees to cut them down.
There are n trees located at various positions on a line. Tree i is located at position xi. All the given positions of the trees are distinct.
The trees are equal, i.e. each tree has height h. Due to the wind, when a tree is cut down, it either falls left with probability p, or falls right with probability 1\xe2\x80\x89-\xe2\x80\x89p. If a tree hits another tree while falling, that tree will fall in the same direction as the tree that hit it. A tree can hit another tree only if the distance between them is strictly less than h. 
For example, imagine there are 4 trees located at positions 1, 3, 5 and 8, while h\xe2\x80\x89=\xe2\x80\x893 and the tree at position 1 falls right. It hits the tree at position 3 and it starts to fall too. In it\'s turn it hits the tree at position 5 and it also starts to fall. The distance between 8 and 5 is exactly 3, so the tree at position 8 will not fall.
As long as there are still trees standing, Wilbur will select either the leftmost standing tree with probability 0.5 or the rightmost standing tree with probability 0.5. Selected tree is then cut down. If there is only one tree remaining, Wilbur always selects it. As the ground is covered with grass, Wilbur wants to know the expected total length of the ground covered with fallen trees after he cuts them all down because he is concerned about his grass-eating cow friends. Please help Wilbur.
The first line of the input contains two integers, n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000) and h (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89h\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108) and a real number p (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891), given with no more than six decimal places.
The second line of the input contains n integers, x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn (\xe2\x80\x89-\xe2\x80\x89108\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108) in no particular order.
Print a single real number \xe2\x80\x94 the expected total length of the ground covered by trees when they have all fallen down. Your answer will be considered correct if its absolute or relative error does not exceed 10\xe2\x80\x89-\xe2\x80\x896. 
Namely: let\'s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .
Consider the first example, we have 2 trees with height 2. 
 1. Both trees falls left. This can either happen with the right tree falling left first, which has  probability (also knocking down the left tree), or the left tree can fall left and then the right tree can fall left, which has  probability. Total probability is . 
 2. Both trees fall right. This is analogous to (1), so the probability of this happening is . 
 3. The left tree fall left and the right tree falls right. This is the only remaining scenario so it must have  probability. 
 Cases 1 and 2 lead to a total of 3 units of ground covered, while case 3 leads to a total of 4 units of ground covered. Thus, the expected value is ." "2300  x685"
596C "Wilbur and Points" "combinatorics, greedy, sortings" "Wilbur is playing with a set of n points on the coordinate plane. All points have non-negative integer coordinates. Moreover, if some point (x, y) belongs to the set, then all points (x\', y\'), such that 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\'\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x and 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\'\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y also belong to this set.
Now Wilbur wants to number the points in the set he has, that is assign them distinct integer numbers from 1 to n. In order to make the numbering aesthetically pleasing, Wilbur imposes the condition that if some point (x, y) gets number i, then all (x\',y\') from the set, such that x\'\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89x and y\'\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89y must be assigned a number not less than i. For example, for a set of four points (0, 0), (0, 1), (1, 0) and (1, 1), there are two aesthetically pleasing numberings. One is 1, 2, 3, 4 and another one is 1, 3, 2, 4.
Wilbur\'s friend comes along and challenges Wilbur. For any point he defines it\'s special value as s(x,\xe2\x80\x89y)\xe2\x80\x89=\xe2\x80\x89y\xe2\x80\x89-\xe2\x80\x89x. Now he gives Wilbur some w1, w2,..., wn, and asks him to find an aesthetically pleasing numbering of the points in the set, such that the point that gets number i has it\'s special value equal to wi, that is s(xi,\xe2\x80\x89yi)\xe2\x80\x89=\xe2\x80\x89yi\xe2\x80\x89-\xe2\x80\x89xi\xe2\x80\x89=\xe2\x80\x89wi.
Now Wilbur asks you to help him with this challenge.
The first line of the input consists of a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of points in the set Wilbur is playing with.
Next follow n lines with points descriptions. Each line contains two integers x and y (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000), that give one point in Wilbur\'s set. It\'s guaranteed that all points are distinct. Also, it is guaranteed that if some point (x, y) is present in the input, then all points (x\', y\'), such that 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\'\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x and 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\'\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y, are also present in the input.
The last line of the input contains n integers. The i-th of them is wi (\xe2\x80\x89-\xe2\x80\x89100\xe2\x80\x89000\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the required special value of the point that gets number i in any aesthetically pleasing numbering.
If there exists an aesthetically pleasant numbering of points in the set, such that s(xi,\xe2\x80\x89yi)\xe2\x80\x89=\xe2\x80\x89yi\xe2\x80\x89-\xe2\x80\x89xi\xe2\x80\x89=\xe2\x80\x89wi, then print ""YES"" on the first line of the output. Otherwise, print ""NO"".
If a solution exists, proceed output with n lines. On the i-th of these lines print the point of the set that gets number i. If there are multiple solutions, print any of them.
In the first sample, point (2, 0) gets number 3, point (0, 0) gets number one, point (1, 0) gets number 2, point (1, 1) gets number 5 and point (0, 1) gets number 4. One can easily check that this numbering is aesthetically pleasing and yi\xe2\x80\x89-\xe2\x80\x89xi\xe2\x80\x89=\xe2\x80\x89wi.
In the second sample, the special values of the points in the set are 0, \xe2\x80\x89-\xe2\x80\x891, and \xe2\x80\x89-\xe2\x80\x892 while the sequence that the friend gives to Wilbur is 0, 1, 2. Therefore, the answer does not exist." "1700  x2258"
596B "Wilbur and Array" "greedy, implementation" "Wilbur the pig is tinkering with arrays again. He has the array a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an initially consisting of n zeros. At one step, he can choose any index i and either add 1 to all elements ai,\xe2\x80\x89ai\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89... ,\xe2\x80\x89an or subtract 1 from all elements ai,\xe2\x80\x89ai\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89an. His goal is to end up with the array b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn. 
Of course, Wilbur wants to achieve this goal in the minimum number of steps and asks you to compute this value.
The first line of the input contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the length of the array ai. Initially ai\xe2\x80\x89=\xe2\x80\x890 for every position i, so this array is not given in the input.
The second line of the input contains n integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the minimum number of steps that Wilbur needs to make in order to achieve ai\xe2\x80\x89=\xe2\x80\x89bi for all i.
In the first sample, Wilbur may successively choose indices 1, 2, 3, 4, and 5, and add 1 to corresponding suffixes.
In the second sample, Wilbur first chooses indices 1 and 2 and adds 1 to corresponding suffixes, then he chooses index 4 and subtract 1." "1100  x10374"
596A "Wilbur and Swimming Pool" "geometry, implementation" "After making bad dives into swimming pools, Wilbur wants to build a swimming pool in the shape of a rectangle in his backyard. He has set up coordinate axes, and he wants the sides of the rectangle to be parallel to them. Of course, the area of the rectangle must be positive. Wilbur had all four vertices of the planned pool written on a paper, until his friend came along and erased some of the vertices.
Now Wilbur is wondering, if the remaining n vertices of the initial rectangle give enough information to restore the area of the planned swimming pool.
The first line of the input contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894) \xe2\x80\x94 the number of vertices that were not erased by Wilbur\'s friend.
Each of the following n lines contains two integers xi and yi (\xe2\x80\x89-\xe2\x80\x891000\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94the coordinates of the i-th vertex that remains. Vertices are given in an arbitrary order.
It\'s guaranteed that these points are distinct vertices of some rectangle, that has positive area and which sides are parallel to the coordinate axes.
Print the area of the initial rectangle if it could be uniquely determined by the points remaining. Otherwise, print \xe2\x80\x89-\xe2\x80\x891. 
In the first sample, two opposite corners of the initial rectangle are given, and that gives enough information to say that the rectangle is actually a unit square.
In the second sample there is only one vertex left and this is definitely not enough to uniquely define the area." "1100  x7758"
595B "Pasha and Phone" "binary search, math" "Pasha has recently bought a new phone jPager and started adding his friends\' phone numbers there. Each phone number consists of exactly n digits.
Also Pasha has a number k and two sequences of length n\xe2\x80\x89/\xe2\x80\x89k (n is divisible by k) a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89/\xe2\x80\x89k and b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn\xe2\x80\x89/\xe2\x80\x89k. Let\'s split the phone number into blocks of length k. The first block will be formed by digits from the phone number that are on positions 1, 2,..., k, the second block will be formed by digits from the phone number that are on positions k\xe2\x80\x89+\xe2\x80\x891, k\xe2\x80\x89+\xe2\x80\x892, ..., 2\xc2\xb7k and so on. Pasha considers a phone number good, if the i-th block doesn\'t start from the digit bi and is divisible by ai if represented as an integer. 
To represent the block of length k as an integer, let\'s write it out as a sequence c1, c2,...,ck. Then the integer is calculated as the result of the expression c1\xc2\xb710k\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x89c2\xc2\xb710k\xe2\x80\x89-\xe2\x80\x892\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89ck.
Pasha asks you to calculate the number of good phone numbers of length n, for the given k, ai and bi. As this number can be too big, print it modulo 109\xe2\x80\x89+\xe2\x80\x897. 
The first line of the input contains two integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(n,\xe2\x80\x899)) \xe2\x80\x94 the length of all phone numbers and the length of each block, respectively. It is guaranteed that n is divisible by k.
The second line of the input contains n\xe2\x80\x89/\xe2\x80\x89k space-separated positive integers \xe2\x80\x94 sequence a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89/\xe2\x80\x89k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89<\xe2\x80\x8910k).
The third line of the input contains n\xe2\x80\x89/\xe2\x80\x89k space-separated positive integers \xe2\x80\x94 sequence b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn\xe2\x80\x89/\xe2\x80\x89k (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x899). 
Print a single integer \xe2\x80\x94 the number of good phone numbers of length n modulo 109\xe2\x80\x89+\xe2\x80\x897.
In the first test sample good phone numbers are: 000000, 000098, 005600, 005698, 380000, 380098, 385600, 385698." "1600  x2926"
595A "Vitaly and Night" "constructive algorithms, implementation" "One day Vitaly was going home late at night and wondering: how many people aren\'t sleeping at that moment? To estimate, Vitaly decided to look which windows are lit in the house he was passing by at that moment.
Vitaly sees a building of n floors and 2\xc2\xb7m windows on each floor. On each floor there are m flats numbered from 1 to m, and two consecutive windows correspond to each flat. If we number the windows from 1 to 2\xc2\xb7m from left to right, then the j-th flat of the i-th floor has windows 2\xc2\xb7j\xe2\x80\x89-\xe2\x80\x891 and 2\xc2\xb7j in the corresponding row of windows (as usual, floors are enumerated from the bottom). Vitaly thinks that people in the flat aren\'t sleeping at that moment if at least one of the windows corresponding to this flat has lights on.
Given the information about the windows of the given house, your task is to calculate the number of flats where, according to Vitaly, people aren\'t sleeping.
The first line of the input contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of floors in the house and the number of flats on each floor respectively.
Next n lines describe the floors from top to bottom and contain 2\xc2\xb7m characters each. If the i-th window of the given floor has lights on, then the i-th character of this line is \'1\', otherwise it is \'0\'.
Print a single integer \xe2\x80\x94 the number of flats that have lights on in at least one window, that is, the flats where, according to Vitaly, people aren\'t sleeping.
In the first test case the house has two floors, two flats on each floor. That is, in total there are 4 flats. The light isn\'t on only on the second floor in the left flat. That is, in both rooms of the flat the light is off.
In the second test case the house has one floor and the first floor has three flats. The light is on in the leftmost flat (in both windows) and in the middle flat (in one window). In the right flat the light is off." "800  x14556"
594E "Cutting the Line" "string suffix structures, strings" "You are given a non-empty line s and an integer k. The following operation is performed with this line exactly once:
Your task is to determine the lexicographically smallest string that could be the result of applying the given operation to the string s.
The first line of the input contains string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xe2\x80\x89000\xe2\x80\x89000), consisting of lowercase English letters. The second line contains integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|) \xe2\x80\x94 the maximum number of parts in the partition.
In the single line print the lexicographically minimum string s\' which can be obtained as a result of performing the described operation. " "3100  x162"
594D REQ "data structures, number theory" "Today on a math lesson the teacher told Vovochka that the Euler function of a positive integer \xcf\x86(n) is an arithmetic function that counts the positive integers less than or equal to n that are relatively prime to n. The number 1 is coprime to all the positive integers and \xcf\x86(1)\xe2\x80\x89=\xe2\x80\x891.
Now the teacher gave Vovochka an array of n positive integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an and a task to process q queries li ri \xe2\x80\x94 to calculate and print  modulo 109\xe2\x80\x89+\xe2\x80\x897. As it is too hard for a second grade school student, you\'ve decided to help Vovochka.
The first line of the input contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the length of the array given to Vovochka. The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
The third line contains integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the number of queries. Next q lines contain the queries, one per line. Each query is defined by the boundaries of the segment li and ri (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
Print q numbers \xe2\x80\x94 the value of the Euler function for each query, calculated modulo 109\xe2\x80\x89+\xe2\x80\x897.
In the second sample the values are calculated like that:" "2500  x1634"
594C "Edo and Magnets" "brute force, greedy, implementation, two pointers" "Edo has got a collection of n refrigerator magnets!
He decided to buy a refrigerator and hang the magnets on the door. The shop can make the refrigerator with any size of the door that meets the following restrictions: the refrigerator door must be rectangle, and both the length and the width of the door must be positive integers.
Edo figured out how he wants to place the magnets on the refrigerator. He introduced a system of coordinates on the plane, where each magnet is represented as a rectangle with sides parallel to the coordinate axes.
Now he wants to remove no more than k magnets (he may choose to keep all of them) and attach all remaining magnets to the refrigerator door, and the area of \xe2\x80\x8b\xe2\x80\x8bthe door should be as small as possible. A magnet is considered to be attached to the refrigerator door if its center lies on the door or on its boundary. The relative positions of all the remaining magnets must correspond to the plan.
Let us explain the last two sentences. Let\'s suppose we want to hang two magnets on the refrigerator. If the magnet in the plan has coordinates of the lower left corner (x1, y1) and the upper right corner (x2, y2), then its center is located at (, ) (may not be integers). By saying the relative position should correspond to the plan we mean that the only available operation is translation, i.e. the vector connecting the centers of two magnets in the original plan, must be equal to the vector connecting the centers of these two magnets on the refrigerator.
The sides of the refrigerator door must also be parallel to coordinate axes.
The first line contains two integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(10,\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891)) \xe2\x80\x94 the number of magnets that Edo has and the maximum number of magnets Edo may not place on the refrigerator.
Next n lines describe the initial plan of placing magnets. Each line contains four integers x1,\xe2\x80\x89y1,\xe2\x80\x89x2,\xe2\x80\x89y2 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x1\xe2\x80\x89<\xe2\x80\x89x2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y1\xe2\x80\x89<\xe2\x80\x89y2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the coordinates of the lower left and upper right corners of the current magnet. The magnets can partially overlap or even fully coincide.
Print a single integer \xe2\x80\x94 the minimum area of the door of refrigerator, which can be used to place at least n\xe2\x80\x89-\xe2\x80\x89k magnets, preserving the relative positions. 
In the first test sample it is optimal to remove either the first or the third magnet. If we remove the first magnet, the centers of two others will lie at points (2.5, 2.5) and (3.5, 3.5). Thus, it is enough to buy a fridge with door width 1 and door height 1, the area of the door also equals one, correspondingly.
In the second test sample it doesn\'t matter which magnet to remove, the answer will not change \xe2\x80\x94 we need a fridge with door width 8 and door height 8.
In the third sample you cannot remove anything as k\xe2\x80\x89=\xe2\x80\x890." "2300  x690"
594B "Max and Bike" "binary search, geometry" "For months Maxim has been coming to work on his favorite bicycle. And quite recently he decided that he is ready to take part in a cyclists\' competitions.
He knows that this year n competitions will take place. During the i-th competition the participant must as quickly as possible complete a ride along a straight line from point si to point fi (si\xe2\x80\x89<\xe2\x80\x89fi).
Measuring time is a complex process related to usage of a special sensor and a time counter. Think of the front wheel of a bicycle as a circle of radius r. Let\'s neglect the thickness of a tire, the size of the sensor, and all physical effects. The sensor is placed on the rim of the wheel, that is, on some fixed point on a circle of radius r. After that the counter moves just like the chosen point of the circle, i.e. moves forward and rotates around the center of the circle.
At the beginning each participant can choose any point bi, such that his bike is fully behind the starting line, that is, bi\xe2\x80\x89<\xe2\x80\x89si\xe2\x80\x89-\xe2\x80\x89r. After that, he starts the movement, instantly accelerates to his maximum speed and at time tsi, when the coordinate of the sensor is equal to the coordinate of the start, the time counter starts. The cyclist makes a complete ride, moving with his maximum speed and at the moment the sensor\'s coordinate is equal to the coordinate of the finish (moment of time tfi), the time counter deactivates and records the final time. Thus, the counter records that the participant made a complete ride in time tfi\xe2\x80\x89-\xe2\x80\x89tsi.
Maxim is good at math and he suspects that the total result doesn\'t only depend on his maximum speed v, but also on his choice of the initial point bi. Now Maxim is asking you to calculate for each of n competitions the minimum possible time that can be measured by the time counter. The radius of the wheel of his bike is equal to r.
The first line contains three integers n, r and v (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r,\xe2\x80\x89v\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of competitions, the radius of the front wheel of Max\'s bike and his maximum speed, respectively. 
Next n lines contain the descriptions of the contests. The i-th line contains two integers si and fi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89si\xe2\x80\x89<\xe2\x80\x89fi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the coordinate of the start and the coordinate of the finish on the i-th competition.
Print n real numbers, the i-th number should be equal to the minimum possible time measured by the time counter. Your answer will be considered correct if its absolute or relative error will not exceed 10\xe2\x80\x89-\xe2\x80\x896. 
Namely: let\'s assume that your answer equals a, and the answer of the jury is b. The checker program will consider your answer correct if ." "2500  x500"
594A "Warrior and Archer" games "In the official contest this problem has a different statement, for which jury\'s solution was working incorrectly, and for this reason it was excluded from the contest. This mistake have been fixed and the current given problem statement and model solution corresponds to what jury wanted it to be during the contest.
Vova and Lesha are friends. They often meet at Vova\'s place and compete against each other in a computer game named The Ancient Papyri: Swordsink. Vova always chooses a warrior as his fighter and Leshac chooses an archer. After that they should choose initial positions for their characters and start the fight. A warrior is good at melee combat, so Vova will try to make the distance between fighters as small as possible. An archer prefers to keep the enemy at a distance, so Lesha will try to make the initial distance as large as possible.
There are n (n is always even) possible starting positions for characters marked along the Ox axis. The positions are given by their distinct coordinates x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn, two characters cannot end up at the same position.
Vova and Lesha take turns banning available positions, Vova moves first. During each turn one of the guys bans exactly one of the remaining positions. Banned positions cannot be used by both Vova and Lesha. They continue to make moves until there are only two possible positions remaining (thus, the total number of moves will be n\xe2\x80\x89-\xe2\x80\x892). After that Vova\'s character takes the position with the lesser coordinate and Lesha\'s character takes the position with the bigger coordinate and the guys start fighting.
Vova and Lesha are already tired by the game of choosing positions, as they need to play it before every fight, so they asked you (the developer of the The Ancient Papyri: Swordsink) to write a module that would automatically determine the distance at which the warrior and the archer will start fighting if both Vova and Lesha play optimally.
The first line on the input contains a single integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000, n is even) \xe2\x80\x94 the number of positions available initially. The second line contains n distinct integers x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), giving the coordinates of the corresponding positions.
Print the distance between the warrior and the archer at the beginning of the fight, provided that both Vova and Lesha play optimally.
In the first sample one of the optimum behavior of the players looks like that:
After these actions only positions 0 and 7 will remain, and the distance between them is equal to 7.
In the second sample there are only two possible positions, so there will be no bans." "2300  x1733"
593E "Strange Calculation and Cats" "dp, matrices" "Gosha\'s universe is a table consisting of n rows and m columns. Both the rows and columns are numbered with consecutive integers starting with 1. We will use (r,\xe2\x80\x89c) to denote a cell located in the row r and column c.
Gosha is often invited somewhere. Every time he gets an invitation, he first calculates the number of ways to get to this place, and only then he goes. Gosha\'s house is located in the cell (1,\xe2\x80\x891).
At any moment of time, Gosha moves from the cell he is currently located in to a cell adjacent to it (two cells are adjacent if they share a common side). Of course, the movement is possible only if such a cell exists, i.e. Gosha will not go beyond the boundaries of the table. Thus, from the cell (r,\xe2\x80\x89c) he is able to make a move to one of the cells (r\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89c), (r,\xe2\x80\x89c\xe2\x80\x89-\xe2\x80\x891), (r\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89c), (r,\xe2\x80\x89c\xe2\x80\x89+\xe2\x80\x891). Also, Ghosha can skip a move and stay in the current cell (r,\xe2\x80\x89c).
Besides the love of strange calculations, Gosha is allergic to cats, so he never goes to the cell that has a cat in it. Gosha knows exactly where and when he will be invited and the schedule of cats travelling along the table. Formally, he has q records, the i-th of them has one of the following forms: 
Gosha plans to accept only one invitation, but he has not yet decided, which particular one. In order to make this decision, he asks you to calculate for each of the invitations i the number of ways to get to the cell (xi,\xe2\x80\x89yi) at the moment ti. For every invitation, assume that Gosha he starts moving from cell (1,\xe2\x80\x891) at the moment 1.
Moving between two neighboring cells takes Gosha exactly one unit of tim. In particular, this means that Gosha can come into the cell only if a cat sitting in it leaves the moment when Gosha begins his movement from the neighboring cell, and if none of the cats comes to the cell at the time when Gosha is in it.
Two ways to go from cell (1,\xe2\x80\x891) to cell (x,\xe2\x80\x89y) at time t are considered distinct if for at least one moment of time from 1 to t Gosha\'s positions are distinct for the two ways at this moment. Note, that during this travel Gosha is allowed to visit both (1,\xe2\x80\x891) and (x,\xe2\x80\x89y) multiple times. Since the number of ways can be quite large, print it modulo 109\xe2\x80\x89+\xe2\x80\x897.
The first line of the input contains three positive integers n, m and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xc2\xb7m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910\xe2\x80\x89000) \xe2\x80\x94 the number of rows and columns in the table and the number of events respectively.
Next q lines describe the events, each description contains four integers tpi, xi, yi and ti (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89tp\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m,\xe2\x80\x892\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the type of the event (1 if Gosha gets an invitation, 2 if a cat comes to the cell and 3 if a cat leaves the cell), the coordinates of the cell where the action takes place and the moment of time at which the action takes place respectively.
It is guaranteed that the queries are given in the chronological order, i.e. ti\xe2\x80\x89<\xe2\x80\x89ti\xe2\x80\x89+\xe2\x80\x891. 
For each invitation i (that is, tpi\xe2\x80\x89=\xe2\x80\x891) calculate the number of ways to get to cell (xi,\xe2\x80\x89yi) at the moment of time ti. Respond to the invitations chronologically, that is, in the order they appear in the input.
Explanation of the first sample. Each picture specifies the number of ways to arrive at the cell at the appropriate time. (X stands for a cell blocked at this particular moment of time)" "2400  x643"
593D "Happy Tree Party" "data structures, dfs and similar, graphs, math, trees" "Bogdan has a birthday today and mom gave him a tree consisting of n vertecies. For every edge of the tree i, some number xi was written on it. In case you forget, a tree is a connected non-directed graph without cycles. After the present was granted, m guests consecutively come to Bogdan\'s party. When the i-th guest comes, he performs exactly one of the two possible operations: 
As Bogdan cares about his guests, he decided to ease the process. Write a program that performs all the operations requested by guests and outputs the resulting value yi for each i of the first type.
The first line of the input contains integers, n and m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the number of vertecies in the tree granted to Bogdan by his mom and the number of guests that came to the party respectively.
Next n\xe2\x80\x89-\xe2\x80\x891 lines contain the description of the edges. The i-th of these lines contains three integers ui, vi and xi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ui,\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ui\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89vi, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018), denoting an edge that connects vertecies ui and vi, with the number xi initially written on it.
The following m lines describe operations, requested by Bogdan\'s guests. Each description contains three or four integers and has one of the two possible forms: 
For each guest who chooses the operation of the first type, print the result of processing the value yi through the path from ai to bi.
Initially the tree looks like this: 
The response to the first query is:  = 2
After the third edge is changed, the tree looks like this: 
The response to the second query is:  = 4
In the third query the initial and final vertex coincide, that is, the answer will be the initial number 20.
After the change in the fourth edge the tree looks like this: 
In the last query the answer will be:  = 3" "2400  x1264"
593C "Beautiful Function" "constructive algorithms, math" "Every day Ruslan tried to count sheep to fall asleep, but this didn\'t help. Now he has found a more interesting thing to do. First, he thinks of some set of circles on a plane, and then tries to choose a beautiful set of points, such that there is at least one point from the set inside or on the border of each of the imagined circles.
Yesterday Ruslan tried to solve this problem for the case when the set of points is considered beautiful if it is given as (xt\xe2\x80\x89=\xe2\x80\x89f(t),\xe2\x80\x89yt\xe2\x80\x89=\xe2\x80\x89g(t)), where argument t takes all integer values from 0 to 50. Moreover, f(t) and g(t) should be correct functions.
Assume that w(t) and h(t) are some correct functions, and c is an integer ranging from 0 to 50. The function s(t) is correct if it\'s obtained by one of the following rules: 
Yesterday Ruslan thought on and on, but he could not cope with the task. Now he asks you to write a program that computes the appropriate f(t) and g(t) for any set of at most 50 circles.
In each of the functions f(t) and g(t) you are allowed to use no more than 50 multiplications. The length of any function should not exceed 100\xc2\xb7n characters. The function should not contain spaces.
Ruslan can\'t keep big numbers in his memory, so you should choose f(t) and g(t), such that for all integer t from 0 to 50 value of f(t) and g(t) and all the intermediate calculations won\'t exceed 109 by their absolute value.
The first line of the input contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) \xe2\x80\x94 the number of circles Ruslan thinks of. Next follow n lines, each of them containing three integers xi, yi and ri (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) \xe2\x80\x94 the coordinates of the center and the raduis of the i-th circle.
In the first line print a correct function f(t). In the second line print a correct function g(t). The set of the points (xt\xe2\x80\x89=\xe2\x80\x89f(t),\xe2\x80\x89yt\xe2\x80\x89=\xe2\x80\x89g(t)) (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) must satisfy the condition, that there is at least one point inside or on the border of each of the circles, Ruslan thinks of at the beginning.
Correct functions:
Incorrect functions:" "2200  x284"
593B "Anton and Lines" "geometry, sortings" "The teacher gave Anton a large geometry homework, but he didn\'t do it (as usual) as he participated in a regular round on Codeforces. In the task he was given a set of n lines defined by the equations y\xe2\x80\x89=\xe2\x80\x89ki\xc2\xb7x\xe2\x80\x89+\xe2\x80\x89bi. It was necessary to determine whether there is at least one point of intersection of two of these lines, that lays strictly inside the strip between x1\xe2\x80\x89<\xe2\x80\x89x2. In other words, is it true that there are 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89<\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and x\',\xe2\x80\x89y\', such that: 
You can\'t leave Anton in trouble, can you? Write a program that solves the given task.
The first line of the input contains an integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of lines in the task given to Anton. The second line contains integers x1 and x2 (\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x1\xe2\x80\x89<\xe2\x80\x89x2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000) defining the strip inside which you need to find a point of intersection of at least two lines.
The following n lines contain integers ki, bi (\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ki,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000) \xe2\x80\x94 the descriptions of the lines. It is guaranteed that all lines are pairwise distinct, that is, for any two i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j it is true that either ki\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89kj, or bi\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bj.
Print ""Yes"" (without quotes), if there is at least one intersection of two distinct lines, located strictly inside the strip. Otherwise print ""No"" (without quotes).
In the first sample there are intersections located on the border of the strip, but there are no intersections located strictly inside it." "1600  x4058"
593A 2Char "brute force, implementation" "Andrew often reads articles in his favorite magazine 2Char. The main feature of these articles is that each of them uses at most two distinct letters. Andrew decided to send an article to the magazine, but as he hasn\'t written any article, he just decided to take a random one from magazine 26Char. However, before sending it to the magazine 2Char, he needs to adapt the text to the format of the journal. To do so, he removes some words from the chosen article, in such a way that the remaining text can be written using no more than two distinct letters.
Since the payment depends from the number of non-space characters in the article, Andrew wants to keep the words with the maximum total length.
The first line of the input contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of words in the article chosen by Andrew. Following are n lines, each of them contains one word. All the words consist only of small English letters and their total length doesn\'t exceed 1000. The words are not guaranteed to be distinct, in this case you are allowed to use a word in the article as many times as it appears in the input.
Print a single integer \xe2\x80\x94 the maximum possible total length of words in Andrew\'s article.
In the first sample the optimal way to choose words is {\'abb\', \'aaa\', \'bbb\'}.
In the second sample the word \'cdecdecdecdecdecde\' consists of three distinct letters, and thus cannot be used in the article. The optimal answer is {\'a\', \'a\', \'aaaa\'}." "1200  x5796"
592E BCPC "binary search, geometry, two pointers" "BCPC stands for Byteforces Collegiate Programming Contest, and is the most famous competition in Byteforces.
BCPC is a team competition. Each team is composed by a coach and three contestants. Blenda is the coach of the Bit State University(BSU), and she is very strict selecting the members of her team.
In BSU there are n students numbered from 1 to n. Since all BSU students are infinitely smart, the only important parameters for Blenda are their reading and writing speed. After a careful measuring, Blenda have found that the i-th student have a reading speed equal to ri (words per minute), and a writing speed of wi (symbols per minute). Since BSU students are very smart, the measured speeds are sometimes very big and Blenda have decided to subtract some constant value c from all the values of reading speed and some value d from all the values of writing speed. Therefore she considers ri\'\xe2\x80\x89=\xe2\x80\x89ri\xe2\x80\x89-\xe2\x80\x89c and wi\'\xe2\x80\x89=\xe2\x80\x89wi\xe2\x80\x89-\xe2\x80\x89d. 
The student i is said to overwhelm the student j if and only if ri\'\xc2\xb7wj\'\xe2\x80\x89>\xe2\x80\x89rj\'\xc2\xb7wi\'. Blenda doesn\xe2\x80\x99t like fights in teams, so she thinks that a team consisting of three distinct students i,\xe2\x80\x89j and k is good if i overwhelms j, j overwhelms k, and k overwhelms i. Yes, the relation of overwhelming is not transitive as it often happens in real life.
Since Blenda is busy preparing a training camp in Codeforces, you are given a task to calculate the number of different good teams in BSU. Two teams are considered to be different if there is at least one student that is present in one team but is not present in the other. In other words, two teams are different if the sets of students that form these teams are different.
In the first line of the input three integers n, c and d (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89345678,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c,\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) are written. They denote the number of students Blenda can use to form teams, the value subtracted from all reading speeds and the value subtracted from all writing speeds respectively.
Each of the next n lines contains two integers ri and wi (0\xe2\x80\x89<\xe2\x80\x89ri,\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109,\xe2\x80\x89|ri\xe2\x80\x89-\xe2\x80\x89c|\xe2\x80\x89+\xe2\x80\x89|wi\xe2\x80\x89-\xe2\x80\x89d|\xe2\x80\x89>\xe2\x80\x890). There are no two students, such that both their reading and writing speeds coincide, i.e. for every i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j condition |ri\xe2\x80\x89-\xe2\x80\x89rj|\xe2\x80\x89+\xe2\x80\x89|wi\xe2\x80\x89-\xe2\x80\x89wj|\xe2\x80\x89>\xe2\x80\x890 holds.
Print the number of different teams in BSU, that are good according to Blenda\'s definition.
In the first sample the following teams are good: (i\xe2\x80\x89=\xe2\x80\x891,\xe2\x80\x89j\xe2\x80\x89=\xe2\x80\x892,\xe2\x80\x89k\xe2\x80\x89=\xe2\x80\x893), (i\xe2\x80\x89=\xe2\x80\x892,\xe2\x80\x89j\xe2\x80\x89=\xe2\x80\x895,\xe2\x80\x89k\xe2\x80\x89=\xe2\x80\x891), (i\xe2\x80\x89=\xe2\x80\x891,\xe2\x80\x89j\xe2\x80\x89=\xe2\x80\x894,\xe2\x80\x89k\xe2\x80\x89=\xe2\x80\x893), (i\xe2\x80\x89=\xe2\x80\x895,\xe2\x80\x89j\xe2\x80\x89=\xe2\x80\x891,\xe2\x80\x89k\xe2\x80\x89=\xe2\x80\x894).
Note, that for example the team (i\xe2\x80\x89=\xe2\x80\x893,\xe2\x80\x89j\xe2\x80\x89=\xe2\x80\x891,\xe2\x80\x89k\xe2\x80\x89=\xe2\x80\x892) is also good, but is considered to be the same as the team (i\xe2\x80\x89=\xe2\x80\x891,\xe2\x80\x89j\xe2\x80\x89=\xe2\x80\x892,\xe2\x80\x89k\xe2\x80\x89=\xe2\x80\x893)." "2700  x214"
592D "Super M" "dfs and similar, dp, graphs, trees" "Ari the monster is not an ordinary monster. She is the hidden identity of Super M, the Byteforces\xe2\x80\x99 superhero. Byteforces is a country that consists of n cities, connected by n\xe2\x80\x89-\xe2\x80\x891 bidirectional roads. Every road connects exactly two distinct cities, and the whole road system is designed in a way that one is able to go from any city to any other city using only the given roads. There are m cities being attacked by humans. So Ari... we meant Super M have to immediately go to each of the cities being attacked to scare those bad humans. Super M can pass from one city to another only using the given roads. Moreover, passing through one road takes her exactly one kron - the time unit used in Byteforces. 
However, Super M is not on Byteforces now - she is attending a training camp located in a nearby country Codeforces. Fortunately, there is a special device in Codeforces that allows her to instantly teleport from Codeforces to any city of Byteforces. The way back is too long, so for the purpose of this problem teleportation is used exactly once.
You are to help Super M, by calculating the city in which she should teleport at the beginning in order to end her job in the minimum time (measured in krons). Also, provide her with this time so she can plan her way back to Codeforces.
The first line of the input contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89123456) - the number of cities in Byteforces, and the number of cities being attacked respectively.
Then follow n\xe2\x80\x89-\xe2\x80\x891 lines, describing the road system. Each line contains two city numbers ui and vi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ui,\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) - the ends of the road i.
The last line contains m distinct integers - numbers of cities being attacked. These numbers are given in no particular order.
First print the number of the city Super M should teleport to. If there are many possible optimal answers, print the one with the lowest city number.
Then print the minimum possible time needed to scare all humans in cities being attacked, measured in Krons.
Note that the correct answer is always unique.
In the first sample, there are two possibilities to finish the Super M\'s job in 3 krons. They are:
 and .
However, you should choose the first one as it starts in the city with the lower number." "2200  x2641"
592C "The Big Race" math "Vector Willman and Array Bolt are the two most famous athletes of Byteforces. They are going to compete in a race with a distance of L meters today.
Willman and Bolt have exactly the same speed, so when they compete the result is always a tie. That is a problem for the organizers because they want a winner. 
While watching previous races the organizers have noticed that Willman can perform only steps of length equal to w meters, and Bolt can perform only steps of length equal to b meters. Organizers decided to slightly change the rules of the race. Now, at the end of the racetrack there will be an abyss, and the winner will be declared the athlete, who manages to run farther from the starting point of the the racetrack (which is not the subject to change by any of the athletes). 
Note that none of the athletes can run infinitely far, as they both will at some moment of time face the point, such that only one step further will cause them to fall in the abyss. In other words, the athlete will not fall into the abyss if the total length of all his steps will be less or equal to the chosen distance L.
Since the organizers are very fair, the are going to set the length of the racetrack as an integer chosen randomly and uniformly in range from 1 to t (both are included). What is the probability that Willman and Bolt tie again today?
The first line of the input contains three integers t, w and b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t,\xe2\x80\x89w,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb71018) \xe2\x80\x94 the maximum possible length of the racetrack, the length of Willman\'s steps and the length of Bolt\'s steps respectively.
Print the answer to the problem as an irreducible fraction . Follow the format of the samples output.
The fraction  (p and q are integers, and both p\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x890 and q\xe2\x80\x89>\xe2\x80\x890 holds) is called irreducible, if there is no such integer d\xe2\x80\x89>\xe2\x80\x891, that both p and q are divisible by d.
In the first sample Willman and Bolt will tie in case 1, 6 or 7 are chosen as the length of the racetrack." "1800  x3069"
592B "The Monster and the Squirrel" math "Ari the monster always wakes up very early with the first ray of the sun and the first thing she does is feeding her squirrel.
Ari draws a regular convex polygon on the floor and numbers it\'s vertices 1,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89n in clockwise order. Then starting from the vertex 1 she draws a ray in the direction of each other vertex. The ray stops when it reaches a vertex or intersects with another ray drawn before. Ari repeats this process for vertex 2,\xe2\x80\x893,\xe2\x80\x89...,\xe2\x80\x89n (in this particular order). And then she puts a walnut in each region inside the polygon.
Ada the squirrel wants to collect all the walnuts, but she is not allowed to step on the lines drawn by Ari. That means Ada have to perform a small jump if she wants to go from one region to another. Ada can jump from one region P to another region Q if and only if P and Q share a side or a corner.
Assuming that Ada starts from outside of the picture, what is the minimum number of jumps she has to perform in order to collect all the walnuts?
The first and only line of the input contains a single integer n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8954321) - the number of vertices of the regular polygon drawn by Ari.
Print the minimum number of jumps Ada should make to collect all the walnuts. Note, that she doesn\'t need to leave the polygon after.
One of the possible solutions for the first sample is shown on the picture above." "1100  x8639"
592A PawnChess implementation "Galois is one of the strongest chess players of Byteforces. He has even invented a new variant of chess, which he named \xc2\xabPawnChess\xc2\xbb.
This new game is played on a board consisting of 8 rows and 8 columns. At the beginning of every game some black and white pawns are placed on the board. The number of black pawns placed is not necessarily equal to the number of white pawns placed. 
Lets enumerate rows and columns with integers from 1 to 8. Rows are numbered from top to bottom, while columns are numbered from left to right. Now we denote as (r,\xe2\x80\x89c) the cell located at the row r and at the column c.
There are always two players A and B playing the game. Player A plays with white pawns, while player B plays with black ones. The goal of player A is to put any of his pawns to the row 1, while player B tries to put any of his pawns to the row 8. As soon as any of the players completes his goal the game finishes immediately and the succeeded player is declared a winner.
Player A moves first and then they alternate turns. On his move player A must choose exactly one white pawn and move it one step upward and player B (at his turn) must choose exactly one black pawn and move it one step down. Any move is possible only if the targeted cell is empty. It\'s guaranteed that for any scenario of the game there will always be at least one move available for any of the players.
Moving upward means that the pawn located in (r,\xe2\x80\x89c) will go to the cell (r\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89c), while moving down means the pawn located in (r,\xe2\x80\x89c) will go to the cell (r\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89c). Again, the corresponding cell must be empty, i.e. not occupied by any other pawn of any color.
Given the initial disposition of the board, determine who wins the game if both players play optimally. Note that there will always be a winner due to the restriction that for any game scenario both players will have some moves available.
The input consists of the board description given in eight lines, each line contains eight characters. Character \'B\' is used to denote a black pawn, and character \'W\' represents a white pawn. Empty cell is marked with \'.\'. 
It\'s guaranteed that there will not be white pawns on the first row neither black pawns on the last row.
Print \'A\' if player A wins the game on the given board, and \'B\' if player B will claim the victory. Again, it\'s guaranteed that there will always be a winner on the given board.
In the first sample player A is able to complete his goal in 3 steps by always moving a pawn initially located at (4,\xe2\x80\x895). Player B needs at least 5 steps for any of his pawns to reach the row 8. Hence, player A will be the winner." "1200  x6359"
591B Rebranding "implementation, strings" "The name of one small but proud corporation consists of n lowercase English letters. The Corporation has decided to try rebranding \xe2\x80\x94 an active marketing strategy, that includes a set of measures to change either the brand (both for the company and the goods it produces) or its components: the name, the logo, the slogan. They decided to start with the name.
For this purpose the corporation has consecutively hired m designers. Once a company hires the i-th designer, he immediately contributes to the creation of a new corporation name as follows: he takes the newest version of the name and replaces all the letters xi by yi, and all the letters yi by xi. This results in the new version. It is possible that some of these letters do no occur in the string. It may also happen that xi coincides with yi. The version of the name received after the work of the last designer becomes the new name of the corporation.
Manager Arkady has recently got a job in this company, but is already soaked in the spirit of teamwork and is very worried about the success of the rebranding. Naturally, he can\'t wait to find out what is the new name the Corporation will receive.
Satisfy Arkady\'s curiosity and tell him the final version of the name.
The first line of the input contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the length of the initial name and the number of designers hired, respectively.
The second line consists of n lowercase English letters and represents the original name of the corporation.
Next m lines contain the descriptions of the designers\' actions: the i-th of them contains two space-separated lowercase English letters xi and yi.
Print the new name of the corporation.
In the second sample the name of the corporation consecutively changes as follows:




" "1200  x8254"
591A "Wizards' Duel" "implementation, math" "Harry Potter and He-Who-Must-Not-Be-Named engaged in a fight to the death once again. This time they are located at opposite ends of the corridor of length l. Two opponents simultaneously charge a deadly spell in the enemy. We know that the impulse of Harry\'s magic spell flies at a speed of p meters per second, and the impulse of You-Know-Who\'s magic spell flies at a speed of q meters per second.
The impulses are moving through the corridor toward each other, and at the time of the collision they turn round and fly back to those who cast them without changing their original speeds. Then, as soon as the impulse gets back to it\'s caster, the wizard reflects it and sends again towards the enemy, without changing the original speed of the impulse.
Since Harry has perfectly mastered the basics of magic, he knows that after the second collision both impulses will disappear, and a powerful explosion will occur exactly in the place of their collision. However, the young wizard isn\'t good at math, so he asks you to calculate the distance from his position to the place of the second meeting of the spell impulses, provided that the opponents do not change positions during the whole fight.
The first line of the input contains a single integer l (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891\xe2\x80\x89000) \xe2\x80\x94 the length of the corridor where the fight takes place.
The second line contains integer p, the third line contains integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500) \xe2\x80\x94 the speeds of magical impulses for Harry Potter and He-Who-Must-Not-Be-Named, respectively.
Print a single real number \xe2\x80\x94 the distance from the end of the corridor, where Harry is located, to the place of the second meeting of the spell impulses. Your answer will be considered correct if its absolute or relative error will not exceed 10\xe2\x80\x89-\xe2\x80\x894. 
Namely: let\'s assume that your answer equals a, and the answer of the jury is b. The checker program will consider your answer correct if .
In the first sample the speeds of the impulses are equal, so both of their meetings occur exactly in the middle of the corridor." "900  x14578"
590E Birthday "graph matchings, strings" "Today is birthday of a Little Dasha \xe2\x80\x94 she is now 8 years old! On this occasion, each of her n friends and relatives gave her a ribbon with a greeting written on it, and, as it turned out, all the greetings are different. Dasha gathered all the ribbons and decided to throw away some of them in order to make the remaining set stylish. The birthday girl considers a set of ribbons stylish if no greeting written on some ribbon is a substring of another greeting written on some other ribbon. Let us recall that the substring of the string s is a continuous segment of s.
Help Dasha to keep as many ribbons as possible, so that she could brag about them to all of her friends. Dasha cannot rotate or flip ribbons, that is, each greeting can be read in a single way given in the input.
The first line of the input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89750) \xe2\x80\x94 the number of Dasha\'s relatives and friends.
Each of the next n lines contains exactly one greeting. Each greeting consists of characters \'a\' and \'b\' only.
The total length of all greetings won\'t exceed 10\xe2\x80\x89000\xe2\x80\x89000 characters.
In the first line print the maximum size of the stylish set. In the second line print the numbers of ribbons involved in it, assuming that they are numbered from 1 to n in the order they appear in the input. If there are several stylish sets of the maximum size, print any of them.
In the sample, the answer that keeps ribbons 3 and 4 is also considered correct." "3200  x789"
590D "Top Secret Task" dp "A top-secret military base under the command of Colonel Zuev is expecting an inspection from the Ministry of Defence. According to the charter, each top-secret military base must include a top-secret troop that should... well, we cannot tell you exactly what it should do, it is a top secret troop at the end. The problem is that Zuev\'s base is missing this top-secret troop for some reasons.
The colonel decided to deal with the problem immediately and ordered to line up in a single line all n soldiers of the base entrusted to him. Zuev knows that the loquacity of the i-th soldier from the left is equal to qi. Zuev wants to form the top-secret troop using k leftmost soldiers in the line, thus he wants their total loquacity to be as small as possible (as the troop should remain top-secret). To achieve this, he is going to choose a pair of consecutive soldiers and swap them. He intends to do so no more than s times. Note that any soldier can be a participant of such swaps for any number of times. The problem turned out to be unusual, and colonel Zuev asked you to help.
Determine, what is the minimum total loquacity of the first k soldiers in the line, that can be achieved by performing no more than s swaps of two consecutive soldiers.
The first line of the input contains three positive integers n, k, s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89150, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of soldiers in the line, the size of the top-secret troop to be formed and the maximum possible number of swap operations of the consecutive pair of soldiers, respectively.
The second line of the input contains n integer qi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89qi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000) \xe2\x80\x94 the values of loquacity of soldiers in order they follow in line from left to right.
Print a single integer \xe2\x80\x94 the minimum possible total loquacity of the top-secret troop.
In the first sample Colonel has to swap second and third soldiers, he doesn\'t really need the remaining swap. The resulting soldiers order is: (2, 1, 4). Minimum possible summary loquacity of the secret troop is 3. In the second sample Colonel will perform swaps in the following order:
The resulting soldiers order is (10, 1, 2, 5, 6). 
Minimum possible summary loquacity is equal to 18." "2300  x1214"
590C "Three States" "dfs and similar, graphs, shortest paths" "The famous global economic crisis is approaching rapidly, so the states of Berman, Berance and Bertaly formed an alliance and allowed the residents of all member states to freely pass through the territory of any of them. In addition, it was decided that a road between the states should be built to guarantee so that one could any point of any country can be reached from any point of any other State.
Since roads are always expensive, the governments of the states of the newly formed alliance asked you to help them assess the costs. To do this, you have been issued a map that can be represented as a rectangle table consisting of n rows and m columns. Any cell of the map either belongs to one of three states, or is an area where it is allowed to build a road, or is an area where the construction of the road is not allowed. A cell is called passable, if it belongs to one of the states, or the road was built in this cell. From any passable cells you can move up, down, right and left, if the cell that corresponds to the movement exists and is passable.
Your task is to construct a road inside a minimum number of cells, so that it would be possible to get from any cell of any state to any cell of any other state using only passable cells.
It is guaranteed that initially it is possible to reach any cell of any state from any cell of this state, moving only along its cells. It is also guaranteed that for any state there is at least one cell that belongs to it.
The first line of the input contains the dimensions of the map n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the number of rows and columns respectively.
Each of the next n lines contain m characters, describing the rows of the map. Digits from 1 to 3 represent the accessory to the corresponding state. The character \'.\' corresponds to the cell where it is allowed to build a road and the character \'#\' means no construction is allowed in this cell.
Print a single integer \xe2\x80\x94 the minimum number of cells you need to build a road inside in order to connect all the cells of all states. If such a goal is unachievable, print -1." "2200  x2817"
590B "Chip 'n Dale Rescue Rangers" "binary search, geometry, math" "A team of furry rescue rangers was sitting idle in their hollow tree when suddenly they received a signal of distress. In a few moments they were ready, and the dirigible of the rescue chipmunks hit the road.
We assume that the action takes place on a Cartesian plane. The headquarters of the rescuers is located at point (x1,\xe2\x80\x89y1), and the distress signal came from the point (x2,\xe2\x80\x89y2).
Due to Gadget\'s engineering talent, the rescuers\' dirigible can instantly change its current velocity and direction of movement at any moment and as many times as needed. The only limitation is: the speed of the aircraft relative to the air can not exceed  meters per second.
Of course, Gadget is a true rescuer and wants to reach the destination as soon as possible. The matter is complicated by the fact that the wind is blowing in the air and it affects the movement of the dirigible. According to the weather forecast, the wind will be defined by the vector (vx,\xe2\x80\x89vy) for the nearest t seconds, and then will change to (wx,\xe2\x80\x89wy). These vectors give both the direction and velocity of the wind. Formally, if a dirigible is located at the point (x,\xe2\x80\x89y), while its own velocity relative to the air is equal to zero and the wind (ux,\xe2\x80\x89uy) is blowing, then after  seconds the new position of the dirigible will be .
Gadget is busy piloting the aircraft, so she asked Chip to calculate how long will it take them to reach the destination if they fly optimally. He coped with the task easily, but Dale is convinced that Chip has given the random value, aiming only not to lose the face in front of Gadget. Dale has asked you to find the right answer.
It is guaranteed that the speed of the wind at any moment of time is strictly less than the maximum possible speed of the airship relative to the air.
The first line of the input contains four integers x1, y1, x2, y2 (|x1|,\xe2\x80\x89\xe2\x80\x89|y1|,\xe2\x80\x89\xe2\x80\x89|x2|,\xe2\x80\x89\xe2\x80\x89|y2|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910\xe2\x80\x89000) \xe2\x80\x94 the coordinates of the rescuers\' headquarters and the point, where signal of the distress came from, respectively. 
The second line contains two integers  and t (0\xe2\x80\x89<\xe2\x80\x89v,\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000), which are denoting the maximum speed of the chipmunk dirigible relative to the air and the moment of time when the wind changes according to the weather forecast, respectively. 
Next follow one per line two pairs of integer (vx,\xe2\x80\x89vy) and (wx,\xe2\x80\x89wy), describing the wind for the first t seconds and the wind that will blow at all the remaining time, respectively. It is guaranteed that  and .
Print a single real value \xe2\x80\x94 the minimum time the rescuers need to get to point (x2,\xe2\x80\x89y2). You answer will be considered correct if its absolute or relative error does not exceed 10\xe2\x80\x89-\xe2\x80\x896. 
Namely: let\'s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if ." "2100  x1917"
590A "Median Smoothing" implementation "A schoolboy named Vasya loves reading books on programming and mathematics. He has recently read an encyclopedia article that described the method of median smoothing (or median filter) and its many applications in science and engineering. Vasya liked the idea of the method very much, and he decided to try it in practice.
Applying the simplest variant of median smoothing to the sequence of numbers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an will result a new sequence b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn obtained by the following algorithm:
The median of a set of three numbers is the number that goes on the second place, when these three numbers are written in the non-decreasing order. For example, the median of the set 5, 1, 2 is number 2, and the median of set 1, 0, 1 is equal to 1.
In order to make the task easier, Vasya decided to apply the method to sequences consisting of zeros and ones only.
Having made the procedure once, Vasya looked at the resulting sequence and thought: what if I apply the algorithm to it once again, and then apply it to the next result, and so on? Vasya tried a couple of examples and found out that after some number of median smoothing algorithm applications the sequence can stop changing. We say that the sequence is stable, if it does not change when the median smoothing is applied to it.
Now Vasya wonders, whether the sequence always eventually becomes stable. He asks you to write a program that, given a sequence of zeros and ones, will determine whether it ever becomes stable. Moreover, if it ever becomes stable, then you should determine what will it look like and how many times one needs to apply the median smoothing algorithm to initial sequence in order to obtain a stable one.
The first input line of the input contains a single integer n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500\xe2\x80\x89000) \xe2\x80\x94 the length of the initial sequence.
The next line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (ai\xe2\x80\x89=\xe2\x80\x890 or ai\xe2\x80\x89=\xe2\x80\x891), giving the initial sequence itself.
If the sequence will never become stable, print a single number \xe2\x80\x89-\xe2\x80\x891.
Otherwise, first print a single integer \xe2\x80\x94 the minimum number of times one needs to apply the median smoothing algorithm to the initial sequence before it becomes is stable. In the second line print n numbers separated by a space  \xe2\x80\x94 the resulting sequence itself.
In the second sample the stabilization occurs in two steps: , and the sequence 00000 is obviously stable." "1700  x3981"
588B "Duff in Love" math "Duff is in love with lovely numbers! A positive integer x is called lovely if and only if there is no such positive integer a\xe2\x80\x89>\xe2\x80\x891 such that a2 is a divisor of x.
Malek has a number store! In his store, he has only divisors of positive integer n (and he has all of them). As a birthday present, Malek wants to give her a lovely number from his store. He wants this number to be as big as possible.
Malek always had issues in math, so he asked for your help. Please tell him what is the biggest lovely number in his store.
The first and only line of input contains one integer, n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891012).
Print the answer in one line.
In first sample case, there are numbers 1, 2, 5 and 10 in the shop. 10 isn\'t divisible by any perfect square, so 10 is lovely.
In second sample case, there are numbers 1, 2, 3, 4, 6 and 12 in the shop. 12 is divisible by 4\xe2\x80\x89=\xe2\x80\x8922, so 12 is not lovely, while 6 is indeed lovely." "1300  x14136"
588A "Duff and Meat" greedy "Duff is addicted to meat! Malek wants to keep her happy for n days. In order to be happy in i-th day, she needs to eat exactly ai kilograms of meat.
There is a big shop uptown and Malek wants to buy meat for her from there. In i-th day, they sell meat for pi dollars per kilogram. Malek knows all numbers a1,\xe2\x80\x89...,\xe2\x80\x89an and p1,\xe2\x80\x89...,\xe2\x80\x89pn. In each day, he can buy arbitrary amount of meat, also he can keep some meat he has for the future.
Malek is a little tired from cooking meat, so he asked for your help. Help him to minimize the total money he spends to keep Duff happy for n days. 
The first line of input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the number of days.
In the next n lines, i-th line contains two integers ai and pi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), the amount of meat Duff needs and the cost of meat in that day.
Print the minimum money needed to keep Duff happy for n days, in one line.
In the first sample case: An optimal way would be to buy 1 kg on the first day, 2 kg on the second day and 3 kg on the third day.
In the second sample case: An optimal way would be to buy 1 kg on the first day and 5 kg (needed meat for the second and third day) on the second day." "900  x22966"
587F "Duff is Mad" "data structures, strings" "Duff is mad at her friends. That\'s why she sometimes makes Malek to take candy from one of her friends for no reason!
She has n friends. Her i-th friend\'s name is si (their names are not necessarily unique). q times, she asks Malek to take candy from her friends. She\'s angry, but also she acts with rules. When she wants to ask Malek to take candy from one of her friends, like k, she chooses two numbers l and r and tells Malek to take exactly  candies from him/her, where occur(t,\xe2\x80\x89s) is the number of occurrences of string t in s.
Malek is not able to calculate how many candies to take in each request from Duff. That\'s why she asked for your help. Please tell him how many candies to take in each request.
The first line of input contains two integers n and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The next n lines contain the names. i-th of them contains an string si, consisting of lowercase English letters   ().
The next q lines contain the requests. Each of them contains three integers, l,\xe2\x80\x89r and k (says that Malek should take  candies from Duff\'s k-th friend).
Print the answer to each request in one line." "3000  x1062"
587E "Duff as a Queen" "data structures" "Duff is the queen of her country, Andarz Gu. She\'s a competitive programming fan. That\'s why, when he saw her minister, Malek, free, she gave her a sequence consisting of n non-negative integers, a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an and asked him to perform q queries for her on this sequence.
There are two types of queries:
Score of a sequence b1,\xe2\x80\x89...,\xe2\x80\x89bk is the number of its different Kheshtaks. A non-negative integer w is a Kheshtak of this sequence if and only if there exists a subsequence of b, let\'s denote it as bi1,\xe2\x80\x89bi2,\xe2\x80\x89... ,\xe2\x80\x89bix (possibly empty) such that  (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i1\xe2\x80\x89<\xe2\x80\x89i2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89ix\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k). If this subsequence is empty, then w\xe2\x80\x89=\xe2\x80\x890.
Unlike Duff, Malek is not a programmer. That\'s why he asked for your help. Please help him perform these queries.
The first line of input contains two integers, n and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105 and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894\xe2\x80\x89\xc3\x97\xe2\x80\x89104).
The second line of input contains n integers, a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an separated by spaces (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109 for each 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
The next q lines contain the queries. Each line starts with an integer t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892), type of the corresponding query. If t\xe2\x80\x89=\xe2\x80\x891, then there are three more integers in that line, l,\xe2\x80\x89r and k. Otherwise there are two more integers, l and r. (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109)
Print the answer of each query of the second type in one line.
In the first query, we want all Kheshtaks of sequence 1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894,\xe2\x80\x892 which are: 0,\xe2\x80\x891,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894,\xe2\x80\x895,\xe2\x80\x896,\xe2\x80\x897.
In the third query, we want all Khestaks of sequence 1,\xe2\x80\x8910,\xe2\x80\x893,\xe2\x80\x894,\xe2\x80\x892 which are: 0,\xe2\x80\x891,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894,\xe2\x80\x895,\xe2\x80\x896,\xe2\x80\x897,\xe2\x80\x898,\xe2\x80\x899,\xe2\x80\x8910,\xe2\x80\x8911,\xe2\x80\x8912,\xe2\x80\x8913,\xe2\x80\x8914,\xe2\x80\x8915.
In the fifth query, we want all Kheshtaks of sequence 0 which is 0." "2900  x721"
587D "Duff in Mafia" "2-sat, binary search" "Duff is one if the heads of Mafia in her country, Andarz Gu. Andarz Gu has n cities (numbered from 1 to n) connected by m bidirectional roads (numbered by 1 to m).
Each road has a destructing time, and a color. i-th road connects cities vi and ui and its color is ci and its destructing time is ti.
Mafia wants to destruct a matching in Andarz Gu. A matching is a subset of roads such that no two roads in this subset has common endpoint. They can destruct these roads in parallel, i. e. the total destruction time is a maximum over destruction times of all selected roads.
They want two conditions to be satisfied:
The remaining roads after destructing this matching form a proper coloring if and only if no two roads of the same color have same endpoint, or, in the other words, edges of each color should form a matching.
There is no programmer in Mafia. That\'s why Duff asked for your help. Please help her and determine which matching to destruct in order to satisfied those conditions (or state that this is not possible).
The first line of input contains two integers n and m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xe2\x80\x89\xc3\x97\xe2\x80\x89104 and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xe2\x80\x89\xc3\x97\xe2\x80\x89104), number of cities and number of roads in the country.
The next m lines contain the the roads. i\xe2\x80\x89-\xe2\x80\x89th of them contains four integers vi,\xe2\x80\x89ui,\xe2\x80\x89ci and ti (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89vi,\xe2\x80\x89ui\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, vi\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89ui and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci,\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109 for each 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m).
In the first line of input, print ""Yes"" (without quotes) if satisfying the first condition is possible and ""No"" (without quotes) otherwise.
If it is possible, then you have to print two integers t and k in the second line, the minimum destructing time and the number of roads in the matching ().
In the third line print k distinct integers separated by spaces, indices of the roads in the matching in any order. Roads are numbered starting from one in order of their appearance in the input.
If there\'s more than one solution, print any of them.
Graph of Andarz Gu in the first sample case is as follows:
A solution would be to destruct the roads with crosses.
Graph of Andarz Gu in the second sample case is as follows:" "3100  x758"
587C "Duff in the Army" "data structures, trees" "Recently Duff has been a soldier in the army. Malek is her commander.
Their country, Andarz Gu has n cities (numbered from 1 to n) and n\xe2\x80\x89-\xe2\x80\x891 bidirectional roads. Each road connects two different cities. There exist a unique path between any two cities.
There are also m people living in Andarz Gu (numbered from 1 to m). Each person has and ID number. ID number of i\xe2\x80\x89-\xe2\x80\x89th person is i and he/she lives in city number ci. Note that there may be more than one person in a city, also there may be no people living in the city.
Malek loves to order. That\'s why he asks Duff to answer to q queries. In each query, he gives her numbers v,\xe2\x80\x89u and a.
To answer a query:
Assume there are x people living in the cities lying on the path from city v to city u. Assume these people\'s IDs are p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89px in increasing order. 
If k\xe2\x80\x89=\xe2\x80\x89min(x,\xe2\x80\x89a), then Duff should tell Malek numbers k,\xe2\x80\x89p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pk in this order. In the other words, Malek wants to know a minimums on that path (or less, if there are less than a people).
Duff is very busy at the moment, so she asked you to help her and answer the queries.
The first line of input contains three integers, n,\xe2\x80\x89m and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The next n\xe2\x80\x89-\xe2\x80\x891 lines contain the roads. Each line contains two integers v and u, endpoints of a road (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89v,\xe2\x80\x89u\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, v\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89u).
Next line contains m integers c1,\xe2\x80\x89c2,\xe2\x80\x89...,\xe2\x80\x89cm separated by spaces (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n for each 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m).
Next q lines contain the queries. Each of them contains three integers, v,\xe2\x80\x89u and a (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89v,\xe2\x80\x89u\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910).
For each query, print numbers k,\xe2\x80\x89p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pk separated by spaces in one line.
Graph of Andarz Gu in the sample case is as follows (ID of people in each city are written next to them):" "2200  x3967"
587B "Duff in Beach" dp "While Duff was resting in the beach, she accidentally found a strange array b0,\xe2\x80\x89b1,\xe2\x80\x89...,\xe2\x80\x89bl\xe2\x80\x89-\xe2\x80\x891 consisting of l positive integers. This array was strange because it was extremely long, but there was another (maybe shorter) array, a0,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891 that b can be build from a with formula: bi\xe2\x80\x89=\xe2\x80\x89ai mod n where a mod b denoted the remainder of dividing a by b.
Duff is so curious, she wants to know the number of subsequences of b like bi1,\xe2\x80\x89bi2,\xe2\x80\x89...,\xe2\x80\x89bix (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i1\xe2\x80\x89<\xe2\x80\x89i2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89ix\xe2\x80\x89<\xe2\x80\x89l), such that: 
Since this number can be very large, she want to know it modulo 109\xe2\x80\x89+\xe2\x80\x897.
Duff is not a programmer, and Malek is unavailable at the moment. So she asked for your help. Please tell her this number.
The first line of input contains three integers, n,\xe2\x80\x89l and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89k, n\xe2\x80\x89\xc3\x97\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106 and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018).
The second line contains n space separated integers, a0,\xe2\x80\x89a1,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109 for each 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891). 
Print the answer modulo 1\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89007 in one line.
In the first sample case, . So all such sequences are: , , , , , , , ,  and ." "2100  x1425"
587A "Duff and Weight Lifting" greedy "Recently, Duff has been practicing weight lifting. As a hard practice, Malek gave her a task. He gave her a sequence of weights. Weight of i-th of them is 2wi pounds. In each step, Duff can lift some of the remaining weights and throw them away. She does this until there\'s no more weight left. Malek asked her to minimize the number of steps.
Duff is a competitive programming fan. That\'s why in each step, she can only lift and throw away a sequence of weights 2a1,\xe2\x80\x89...,\xe2\x80\x892ak if and only if there exists a non-negative integer x such that 2a1\xe2\x80\x89+\xe2\x80\x892a2\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x892ak\xe2\x80\x89=\xe2\x80\x892x, i. e. the sum of those numbers is a power of two.
Duff is a competitive programming fan, but not a programmer. That\'s why she asked for your help. Help her minimize the number of steps. 
The first line of input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), the number of weights.
The second line contains n integers w1,\xe2\x80\x89...,\xe2\x80\x89wn separated by spaces (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106 for each 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), the powers of two forming the weights values.
Print the minimum number of steps in a single line.
In the first sample case: One optimal way would be to throw away the first three in the first step and the rest in the second step. Also, it\'s not possible to do it in one step because their sum is not a power of two.
In the second sample case: The only optimal way is to throw away one weight in each step. It\'s not possible to do it in less than 4 steps because there\'s no subset of weights with more than one weight and sum equal to a power of two." "1500  x7601"
586B "Laurenty and Shop" implementation "A little boy Laurenty has been playing his favourite game Nota for quite a while and is now very hungry. The boy wants to make sausage and cheese sandwiches, but first, he needs to buy a sausage and some cheese.
The town where Laurenty lives in is not large. The houses in it are located in two rows, n houses in each row. Laurenty lives in the very last house of the second row. The only shop in town is placed in the first house of the first row.
The first and second rows are separated with the main avenue of the city. The adjacent houses of one row are separated by streets.
Each crosswalk of a street or an avenue has some traffic lights. In order to cross the street, you need to press a button on the traffic light, wait for a while for the green light and cross the street. Different traffic lights can have different waiting time.
The traffic light on the crosswalk from the j-th house of the i-th row to the (j\xe2\x80\x89+\xe2\x80\x891)-th house of the same row has waiting time equal to aij (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891). For the traffic light on the crossing from the j-th house of one row to the j-th house of another row the waiting time equals bj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). The city doesn\'t have any other crossings.
The boy wants to get to the store, buy the products and go back. The main avenue of the city is wide enough, so the boy wants to cross it exactly once on the way to the store and exactly once on the way back home. The boy would get bored if he had to walk the same way again, so he wants the way home to be different from the way to the store in at least one crossing.
Help Laurenty determine the minimum total time he needs to wait at the crossroads.
The first line of the input contains integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) \xe2\x80\x94 the number of houses in each row. 
Each of the next two lines contains n\xe2\x80\x89-\xe2\x80\x891 space-separated integer \xe2\x80\x94 values aij (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89aij\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100). 
The last line contains n space-separated integers bj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100).
Print a single integer \xe2\x80\x94 the least total time Laurenty needs to wait at the crossroads, given that he crosses the avenue only once both on his way to the store and on his way back home.
The first sample is shown on the figure above. 
In the second sample, Laurenty\'s path can look as follows: 
In the last sample Laurenty visits all the crossings, so the answer is 4." "1300  x5153"
586A "Alena's Schedule" implementation "Alena has successfully passed the entrance exams to the university and is now looking forward to start studying.
One two-hour lesson at the Russian university is traditionally called a pair, it lasts for two academic hours (an academic hour is equal to 45 minutes).
The University works in such a way that every day it holds exactly n lessons. Depending on the schedule of a particular group of students, on a given day, some pairs may actually contain classes, but some may be empty (such pairs are called breaks).
The official website of the university has already published the schedule for tomorrow for Alena\'s group. Thus, for each of the n pairs she knows if there will be a class at that time or not.
Alena\'s House is far from the university, so if there are breaks, she doesn\'t always go home. Alena has time to go home only if the break consists of at least two free pairs in a row, otherwise she waits for the next pair at the university.
Of course, Alena does not want to be sleepy during pairs, so she will sleep as long as possible, and will only come to the first pair that is presented in her schedule. Similarly, if there are no more pairs, then Alena immediately goes home.
Alena appreciates the time spent at home, so she always goes home when it is possible, and returns to the university only at the beginning of the next pair. Help Alena determine for how many pairs she will stay at the university. Note that during some pairs Alena may be at the university waiting for the upcoming pair.
The first line of the input contains a positive integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of lessons at the university. 
The second line contains n numbers ai (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891). Number ai equals 0, if Alena doesn\'t have the i-th pairs, otherwise it is equal to 1. Numbers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an are separated by spaces.
Print a single number \xe2\x80\x94 the number of pairs during which Alena stays at the university.
In the first sample Alena stays at the university from the second to the fifth pair, inclusive, during the third pair she will be it the university waiting for the next pair. 
In the last sample Alena doesn\'t have a single pair, so she spends all the time at home." "900  x10149"
585F "Digits of Number Pi" "dp, implementation, strings" "Vasily has recently learned about the amazing properties of number \xcf\x80. In one of the articles it has been hypothesized that, whatever the sequence of numbers we have, in some position, this sequence is found among the digits of number \xcf\x80. Thus, if you take, for example, the epic novel ""War and Peace"" of famous Russian author Leo Tolstoy, and encode it with numbers, then we will find the novel among the characters of number \xcf\x80.
Vasily was absolutely delighted with this, because it means that all the books, songs and programs have already been written and encoded in the digits of \xcf\x80. Vasily is, of course, a bit wary that this is only a hypothesis and it hasn\'t been proved, so he decided to check it out.
To do this, Vasily downloaded from the Internet the archive with the sequence of digits of number \xcf\x80, starting with a certain position, and began to check the different strings of digits on the presence in the downloaded archive. Vasily quickly found short strings of digits, but each time he took a longer string, it turned out that it is not in the archive. Vasily came up with a definition that a string of length d is a half-occurrence if it contains a substring of length of at least , which occurs in the archive.
To complete the investigation, Vasily took 2 large numbers x,\xe2\x80\x89y (x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y) with the same number of digits and now he wants to find the number of numbers in the interval from x to y, which are half-occurrences in the archive. Help Vasily calculate this value modulo 109\xe2\x80\x89+\xe2\x80\x897.
The first line contains string s consisting of decimal digits (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) that Vasily will use to search substrings in. According to hypothesis, this sequence of digis indeed occurs in the decimal representation of \xcf\x80, although we can\'t guarantee that.
The second and third lines contain two positive integers x,\xe2\x80\x89y of the same length d (x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950). Numbers x,\xe2\x80\x89y do not contain leading zeroes.
Print how many numbers in the segment from x to y that are half-occurrences in s modulo 109\xe2\x80\x89+\xe2\x80\x897." "3200  x687"
585E "Present for Vitalik the Philatelist" "combinatorics, math, number theory" "Vitalik the philatelist has a birthday today!
As he is a regular customer in a stamp store called \'Robin Bobin\', the store management decided to make him a gift.
Vitalik wants to buy one stamp and the store will give him a non-empty set of the remaining stamps, such that the greatest common divisor (GCD) of the price of the stamps they give to him is more than one. If the GCD of prices of the purchased stamp and prices of present stamps set will be equal to 1, then Vitalik will leave the store completely happy.
The store management asks you to count the number of different situations in which Vitalik will leave the store completely happy. Since the required number of situations can be very large, you need to find the remainder of this number modulo 109\xe2\x80\x89+\xe2\x80\x897. The situations are different if the stamps purchased by Vitalik are different, or if one of the present sets contains a stamp that the other present does not contain.
The first line of the input contains integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105) \xe2\x80\x94 the number of distinct stamps, available for sale in the \'Robin Bobin\' store. 
The second line contains a sequence of integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89107), where ai is the price of the i-th stamp.
Print a single integer \xe2\x80\x94 the remainder of the sought number of situations modulo 109\xe2\x80\x89+\xe2\x80\x897.
In the first sample the following situations are possible: " "2900  x1114"
585D "Lizard Era: Beginning" meet-in-the-middle "In the game Lizard Era: Beginning the protagonist will travel with three companions: Lynn, Meliana and Worrigan. Overall the game has n mandatory quests. To perform each of them, you need to take exactly two companions.
The attitude of each of the companions to the hero is an integer. Initially, the attitude of each of them to the hero of neutral and equal to 0. As the hero completes quests, he makes actions that change the attitude of the companions, whom he took to perform this task, in positive or negative direction.
Tell us what companions the hero needs to choose to make their attitude equal after completing all the quests. If this can be done in several ways, choose the one in which the value of resulting attitude is greatest possible.
The first line contains positive integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8925) \xe2\x80\x94 the number of important tasks. 
Next n lines contain the descriptions of the tasks \xe2\x80\x94 the i-th line contains three integers li,\xe2\x80\x89mi,\xe2\x80\x89wi \xe2\x80\x94 the values by which the attitude of Lynn, Meliana and Worrigan respectively will change towards the hero if the hero takes them on the i-th task. All the numbers in the input are integers and do not exceed 107 in absolute value.
If there is no solution, print in the first line ""Impossible"".
Otherwise, print n lines, two characters is each line \xe2\x80\x94 in the i-th line print the first letters of the companions\' names that hero should take to complete the i-th task (\'L\' for Lynn, \'M\' for Meliana, \'W\' for Worrigan). Print the letters in any order, if there are multiple solutions, print any of them." "2300  x1633"
585C "Alice, Bob, Oranges and Apples" "number theory" "Alice and Bob decided to eat some fruit. In the kitchen they found a large bag of oranges and apples. Alice immediately took an orange for herself, Bob took an apple. To make the process of sharing the remaining fruit more fun, the friends decided to play a game. They put multiple cards and on each one they wrote a letter, either \'A\', or the letter \'B\'. Then they began to remove the cards one by one from left to right, every time they removed a card with the letter \'A\', Alice gave Bob all the fruits she had at that moment and took out of the bag as many apples and as many oranges as she had before. Thus the number of oranges and apples Alice had, did not change. If the card had written letter \'B\', then Bob did the same, that is, he gave Alice all the fruit that he had, and took from the bag the same set of fruit. After the last card way removed, all the fruit in the bag were over.
You know how many oranges and apples was in the bag at first. Your task is to find any sequence of cards that Alice and Bob could have played with.
The first line of the input contains two integers, x,\xe2\x80\x89y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018,\xe2\x80\x89xy\xe2\x80\x89>\xe2\x80\x891) \xe2\x80\x94 the number of oranges and apples that were initially in the bag.
Print any sequence of cards that would meet the problem conditions as a compressed string of characters \'A\' and \'B. That means that you need to replace the segments of identical consecutive characters by the number of repetitions of the characters and the actual character. For example, string AAABAABBB should be replaced by string 3A1B2A3B, but cannot be replaced by 2A1A1B2A3B or by 3AB2A3B. See the samples for clarifications of the output format. The string that you print should consist of at most 106 characters. It is guaranteed that if the answer exists, its compressed representation exists, consisting of at most 106 characters. If there are several possible answers, you are allowed to print any of them.
If the sequence of cards that meet the problem statement does not not exist, print a single word Impossible.
In the first sample, if the row contained three cards with letter \'B\', then Bob should give one apple to Alice three times. So, in the end of the game Alice has one orange and three apples, and Bob has one apple, in total it is one orange and four apples.
In second sample, there is no answer since one card is not enough for game to finish, and two cards will produce at least three apples or three oranges.
In the third sample, cards contain letters \'AB\', so after removing the first card Bob has one orange and one apple, and after removal of second card Alice has two oranges and one apple. So, in total it is three oranges and two apples." "2400  x988"
585B "Phillip and Trains" "dfs and similar, graphs, shortest paths" "The mobile application store has a new game called ""Subway Roller"".
The protagonist of the game Philip is located in one end of the tunnel and wants to get out of the other one. The tunnel is a rectangular field consisting of three rows and n columns. At the beginning of the game the hero is in some cell of the leftmost column. Some number of trains rides towards the hero. Each train consists of two or more neighbouring cells in some row of the field.
All trains are moving from right to left at a speed of two cells per second, and the hero runs from left to right at the speed of one cell per second. For simplicity, the game is implemented so that the hero and the trains move in turns. First, the hero moves one cell to the right, then one square up or down, or stays idle. Then all the trains move twice simultaneously one cell to the left. Thus, in one move, Philip definitely makes a move to the right and can move up or down. If at any point, Philip is in the same cell with a train, he loses. If the train reaches the left column, it continues to move as before, leaving the tunnel.
Your task is to answer the question whether there is a sequence of movements of Philip, such that he would be able to get to the rightmost column.
Each test contains from one to ten sets of the input data. The first line of the test contains a single integer t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910 for pretests and tests or t\xe2\x80\x89=\xe2\x80\x891 for hacks; see the Notes section for details) \xe2\x80\x94 the number of sets.
Then follows the description of t sets of the input data. 
The first line of the description of each set contains two integers n,\xe2\x80\x89k (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8926) \xe2\x80\x94 the number of columns on the field and the number of trains. Each of the following three lines contains the sequence of n character, representing the row of the field where the game is on. Philip\'s initial position is marked as \'s\', he is in the leftmost column. Each of the k trains is marked by some sequence of identical uppercase letters of the English alphabet, located in one line. Distinct trains are represented by distinct letters. Character \'.\' represents an empty cell, that is, the cell that doesn\'t contain either Philip or the trains.
For each set of the input data print on a single line word YES, if it is possible to win the game and word NO otherwise.
In the first set of the input of the first sample Philip must first go forward and go down to the third row of the field, then go only forward, then go forward and climb to the second row, go forward again and go up to the first row. After that way no train blocks Philip\'s path, so he can go straight to the end of the tunnel.
Note that in this problem the challenges are restricted to tests that contain only one testset." "1700  x3580"
585A "Gennady the Dentist" "brute force, implementation" "Gennady is one of the best child dentists in Berland. Today n children got an appointment with him, they lined up in front of his office.
All children love to cry loudly at the reception at the dentist. We enumerate the children with integers from 1 to n in the order they go in the line. Every child is associated with the value of his cofidence pi. The children take turns one after another to come into the office; each time the child that is the first in the line goes to the doctor.
While Gennady treats the teeth of the i-th child, the child is crying with the volume of vi. At that the confidence of the first child in the line is reduced by the amount of vi, the second one \xe2\x80\x94 by value vi\xe2\x80\x89-\xe2\x80\x891, and so on. The children in the queue after the vi-th child almost do not hear the crying, so their confidence remains unchanged.
If at any point in time the confidence of the j-th child is less than zero, he begins to cry with the volume of dj and leaves the line, running towards the exit, without going to the doctor\'s office. At this the confidence of all the children after the j-th one in the line is reduced by the amount of dj.
All these events occur immediately one after the other in some order. Some cries may lead to other cries, causing a chain reaction. Once in the hallway it is quiet, the child, who is first in the line, goes into the doctor\'s office.
Help Gennady the Dentist to determine the numbers of kids, whose teeth he will cure. Print their numbers in the chronological order.
The first line of the input contains a positive integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894000) \xe2\x80\x94 the number of kids in the line. 
Next n lines contain three integers each vi,\xe2\x80\x89di,\xe2\x80\x89pi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89vi,\xe2\x80\x89di,\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the volume of the cry in the doctor\'s office, the volume of the cry in the hall and the confidence of the i-th child.
In the first line print number k \xe2\x80\x94 the number of children whose teeth Gennady will cure.
In the second line print k integers \xe2\x80\x94 the numbers of the children who will make it to the end of the line in the increasing order.
In the first example, Gennady first treats the teeth of the first child who will cry with volume 4. The confidences of the remaining children will get equal to \xe2\x80\x89-\xe2\x80\x892,\xe2\x80\x891,\xe2\x80\x893,\xe2\x80\x891, respectively. Thus, the second child also cries at the volume of 1 and run to the exit. The confidence of the remaining children will be equal to 0,\xe2\x80\x892,\xe2\x80\x890. Then the third child will go to the office, and cry with volume 5. The other children won\'t bear this, and with a loud cry they will run to the exit.
In the second sample, first the first child goes into the office, he will cry with volume 4. The confidence of the remaining children will be equal to 5,\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x896,\xe2\x80\x898. Thus, the third child will cry with the volume of 1 and run to the exit. The confidence of the remaining children will be equal to 5,\xe2\x80\x895,\xe2\x80\x897. After that, the second child goes to the office and cry with the volume of 5. The confidences of the remaining children will be equal to 0,\xe2\x80\x893. Then the fourth child will go into the office and cry with the volume of 2. Because of this the confidence of the fifth child will be 1, and he will go into the office last." "1800  x4341"
584E "Anton and Ira" "constructive algorithms, greedy, math" "Anton loves transforming one permutation into another one by swapping elements for money, and Ira doesn\'t like paying for stupid games. Help them obtain the required permutation by paying as little money as possible.
More formally, we have two permutations, p and s of numbers from 1 to n. We can swap pi and pj, by paying |i\xe2\x80\x89-\xe2\x80\x89j| coins for it. Find and print the smallest number of coins required to obtain permutation s from permutation p. Also print the sequence of swap operations at which we obtain a solution. 
The first line contains a single number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000) \xe2\x80\x94 the length of the permutations.
The second line contains a sequence of n numbers from 1 to n \xe2\x80\x94 permutation p. Each number from 1 to n occurs exactly once in this line.
The third line contains a sequence of n numbers from 1 to n \xe2\x80\x94 permutation s. Each number from 1 to n occurs once in this line.
In the first line print the minimum number of coins that you need to spend to transform permutation p into permutation s.
In the second line print number k (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7106) \xe2\x80\x94 the number of operations needed to get the solution.
In the next k lines print the operations. Each line must contain two numbers i and j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j), which means that you need to swap pi and pj.
It is guaranteed that the solution exists.
In the first sample test we swap numbers on positions 3 and 4 and permutation p becomes 4 2 3 1. We pay |3\xe2\x80\x89-\xe2\x80\x894|\xe2\x80\x89=\xe2\x80\x891 coins for that. On second turn we swap numbers on positions 1 and 3 and get permutation 3241 equal to s. We pay |3\xe2\x80\x89-\xe2\x80\x891|\xe2\x80\x89=\xe2\x80\x892 coins for that. In total we pay three coins." "2300  x1428"
584D "Dima and Lisa" "brute force, math, number theory" "Dima loves representing an odd number as the sum of multiple primes, and Lisa loves it when there are at most three primes. Help them to represent the given number as the sum of at most than three primes.
More formally, you are given an odd numer n. Find a set of numbers pi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k), such that
The numbers pi do not necessarily have to be distinct. It is guaranteed that at least one possible solution exists.
The single line contains an odd number n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89<\xe2\x80\x89109).
In the first line print k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893), showing how many numbers are in the representation you found.
In the second line print numbers pi in any order. If there are multiple possible solutions, you can print any of them.
A prime is an integer strictly larger than one that is divisible only by one and by itself." "1800  x9465"
584C "Marina and Vasya" "constructive algorithms, greedy, strings" "Marina loves strings of the same length and Vasya loves when there is a third string, different from them in exactly t characters. Help Vasya find at least one such string.
More formally, you are given two strings s1, s2 of length n and number t. Let\'s denote as f(a,\xe2\x80\x89b) the number of characters in which strings a and b are different. Then your task will be to find any string s3 of length n, such that f(s1,\xe2\x80\x89s3)\xe2\x80\x89=\xe2\x80\x89f(s2,\xe2\x80\x89s3)\xe2\x80\x89=\xe2\x80\x89t. If there is no such string, print \xe2\x80\x89-\xe2\x80\x891.
The first line contains two integers n and t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
The second line contains string s1 of length n, consisting of lowercase English letters.
The third line contain string s2 of length n, consisting of lowercase English letters.
Print a string of length n, differing from string s1 and from s2 in exactly t characters. Your string should consist only from lowercase English letters. If such string doesn\'t exist, print -1." "1700  x6254"
584B "Kolya and Tanya" combinatorics "Kolya loves putting gnomes at the circle table and giving them coins, and Tanya loves studying triplets of gnomes, sitting in the vertexes of an equilateral triangle.
More formally, there are 3n gnomes sitting in a circle. Each gnome can have from 1 to 3 coins. Let\'s number the places in the order they occur in the circle by numbers from 0 to 3n\xe2\x80\x89-\xe2\x80\x891, let the gnome sitting on the i-th place have ai coins. If there is an integer i (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89<\xe2\x80\x89n) such that ai\xe2\x80\x89+\xe2\x80\x89ai\xe2\x80\x89+\xe2\x80\x89n\xe2\x80\x89+\xe2\x80\x89ai\xe2\x80\x89+\xe2\x80\x892n\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x896, then Tanya is satisfied. 
Count the number of ways to choose ai so that Tanya is satisfied. As there can be many ways of distributing coins, print the remainder of this number modulo 109\xe2\x80\x89+\xe2\x80\x897. Two ways, a and b, are considered distinct if there is index i (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89<\xe2\x80\x893n), such that ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi (that is, some gnome got different number of coins in these two ways).
A single line contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of the gnomes divided by three.
Print a single number \xe2\x80\x94 the remainder of the number of variants of distributing coins that satisfy Tanya modulo 109\xe2\x80\x89+\xe2\x80\x897.
20 ways for n\xe2\x80\x89=\xe2\x80\x891 (gnome with index 0 sits on the top of the triangle, gnome 1 on the right vertex, gnome 2 on the left vertex):  " "1500  x12042"
584A "Olesya and Rodion" math "Olesya loves numbers consisting of n digits, and Rodion only likes numbers that are divisible by t. Find some number that satisfies both of them.
Your task is: given the n and t print an integer strictly larger than zero consisting of n digits that is divisible by t. If such number doesn\'t exist, print \xe2\x80\x89-\xe2\x80\x891.
The single line contains two numbers, n and t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910) \xe2\x80\x94 the length of the number and the number it should be divisible by.
Print one such positive number without leading zeroes, \xe2\x80\x94 the answer to the problem, or \xe2\x80\x89-\xe2\x80\x891, if such number doesn\'t exist. If there are multiple possible answers, you are allowed to print any of them." "1000  x45623"
583B "Robot's Task" "greedy, implementation" "Robot Doc is located in the hall, with n computers stand in a line, numbered from left to right from 1 to n. Each computer contains exactly one piece of information, each of which Doc wants to get eventually. The computers are equipped with a security system, so to crack the i-th of them, the robot needs to collect at least ai any pieces of information from the other computers. Doc can hack the computer only if he is right next to it.
The robot is assembled using modern technologies and can move along the line of computers in either of the two possible directions, but the change of direction requires a large amount of resources from Doc. Tell the minimum number of changes of direction, which the robot will have to make to collect all n parts of information if initially it is next to computer with number 1.
It is guaranteed that there exists at least one sequence of the robot\'s actions, which leads to the collection of all information. Initially Doc doesn\'t have any pieces of information.
The first line contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000). The second line contains n non-negative integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89<\xe2\x80\x89n), separated by a space. It is guaranteed that there exists a way for robot to collect all pieces of the information.
Print a single number \xe2\x80\x94 the minimum number of changes in direction that the robot will have to make in order to collect all n parts of information.
In the first sample you can assemble all the pieces of information in the optimal manner by assembling first the piece of information in the first computer, then in the third one, then change direction and move to the second one, and then, having 2 pieces of information, collect the last piece.
In the second sample to collect all the pieces of information in the optimal manner, Doc can go to the fourth computer and get the piece of information, then go to the fifth computer with one piece and get another one, then go to the second computer in the same manner, then to the third one and finally, to the first one. Changes of direction will take place before moving from the fifth to the second computer, then from the second to the third computer, then from the third to the first computer.
In the third sample the optimal order of collecting parts from computers can look like that: 1->3->4->6->2->5->7." "1200  x8733"
583A "Asphalting Roads" implementation "City X consists of n vertical and n horizontal infinite roads, forming n\xe2\x80\x89\xc3\x97\xe2\x80\x89n intersections. Roads (both vertical and horizontal) are numbered from 1 to n, and the intersections are indicated by the numbers of the roads that form them.
Sand roads have long been recognized out of date, so the decision was made to asphalt them. To do this, a team of workers was hired and a schedule of work was made, according to which the intersections should be asphalted.
Road repairs are planned for n2 days. On the i-th day of the team arrives at the i-th intersection in the list and if none of the two roads that form the intersection were already asphalted they asphalt both roads. Otherwise, the team leaves the intersection, without doing anything with the roads.
According to the schedule of road works tell in which days at least one road will be asphalted.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) \xe2\x80\x94 the number of vertical and horizontal roads in the city. 
Next n2 lines contain the order of intersections in the schedule. The i-th of them contains two numbers hi,\xe2\x80\x89vi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi,\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), separated by a space, and meaning that the intersection that goes i-th in the timetable is at the intersection of the hi-th horizontal and vi-th vertical roads. It is guaranteed that all the intersections in the timetable are distinct.
In the single line print the numbers of the days when road works will be in progress in ascending order. The days are numbered starting from 1.
In the sample the brigade acts like that:" "1000  x11452"
582E "Boolean Function" "bitmasks, dp, expression parsing" "In this problem we consider Boolean functions of four variables A,\xe2\x80\x89B,\xe2\x80\x89C,\xe2\x80\x89D. Variables A,\xe2\x80\x89B,\xe2\x80\x89C and D are logical and can take values 0 or 1. We will define a function using the following grammar:
<expression> ::= <variable> | (<expression>) <operator> (<expression>)
<variable> ::= \'A\' | \'B\' | \'C\' | \'D\' | \'a\' | \'b\' | \'c\' | \'d\'
<operator> ::= \'&\' | \'|\'
Here large letters A,\xe2\x80\x89B,\xe2\x80\x89C,\xe2\x80\x89D represent variables, and small letters represent their negations. For example, if A\xe2\x80\x89=\xe2\x80\x891, then character \'A\' corresponds to value 1, and value character \'a\' corresponds to value 0. Here character \'&\' corresponds to the operation of logical AND, character \'|\' corresponds to the operation of logical OR.
You are given expression s, defining function f, where some operations and variables are missing. Also you know the values of the function f(A,\xe2\x80\x89B,\xe2\x80\x89C,\xe2\x80\x89D) for some n distinct sets of variable values. Count the number of ways to restore the elements that are missing in the expression so that the resulting expression corresponded to the given information about function f in the given variable sets. As the value of the result can be rather large, print its remainder modulo 109\xe2\x80\x89+\xe2\x80\x897.
The first line contains expression s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500), where some characters of the operators and/or variables are replaced by character \'?\'. 
The second line contains number n (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8924) \xe2\x80\x94 the number of integers sets for which we know the value of function f(A,\xe2\x80\x89B,\xe2\x80\x89C,\xe2\x80\x89D). Next n lines contain the descriptions of the sets: the i-th of them contains five integers ai,\xe2\x80\x89bi,\xe2\x80\x89ci,\xe2\x80\x89di,\xe2\x80\x89ei (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi,\xe2\x80\x89ci,\xe2\x80\x89di,\xe2\x80\x89ei\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891), separated by spaces and meaning that f(ai,\xe2\x80\x89bi,\xe2\x80\x89ci,\xe2\x80\x89di)\xe2\x80\x89=\xe2\x80\x89ei. 
It is guaranteed that all the tuples (ai,\xe2\x80\x89bi,\xe2\x80\x89ci,\xe2\x80\x89di) are distinct.
In a single line print the answer to the problem.
In the first sample the two valid expressions are \'C\' and \'d\'.
In the second sample the expressions look as follows: \'(A)&(a)\', \'(A)&(b)\', \'(A)&(C)\', \'(A)&(D)\'." "3000  x499"
582D "Number of Binominal Coefficients" "dp, math, number theory" "For a given prime integer p and integers \xce\xb1,\xe2\x80\x89A calculate the number of pairs of integers (n,\xe2\x80\x89k), such that 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A and  is divisible by p\xce\xb1. 
As the answer can be rather large, print the remainder of the answer moduly 109\xe2\x80\x89+\xe2\x80\x897.
Let us remind you that  is the number of ways k objects can be chosen from the set of n objects.
The first line contains two integers, p and \xce\xb1 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p,\xe2\x80\x89\xce\xb1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, p is prime). 
The second line contains the decimal record of integer A (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A\xe2\x80\x89<\xe2\x80\x89101000) without leading zeroes.
In the single line print the answer to the problem.
In the first sample three binominal coefficients divisible by 4 are ,  and ." "3300  x658"
582C "Superior Periodic Subarrays" "number theory" "You are given an infinite periodic array a0,\xe2\x80\x89a1,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89... with the period of length n. Formally, . A periodic subarray (l,\xe2\x80\x89s) (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89<\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s\xe2\x80\x89<\xe2\x80\x89n) of array a is an infinite periodic array with a period of length s that is a subsegment of array a, starting with position l.
A periodic subarray (l,\xe2\x80\x89s) is superior, if when attaching it to the array a, starting from index l, any element of the subarray is larger than or equal to the corresponding element of array a. An example of attaching is given on the figure (top \xe2\x80\x94 infinite array a, bottom \xe2\x80\x94 its periodic subarray (l,\xe2\x80\x89s)):
Find the number of distinct pairs (l,\xe2\x80\x89s), corresponding to the superior periodic arrays.
The first line contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105). The second line contains n numbers a0,\xe2\x80\x89a1,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), separated by a space.
Print a single integer \xe2\x80\x94 the sought number of pairs.
In the first sample the superior subarrays are (0, 1) and (3, 2).
Subarray (0, 1) is superior, as a0\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a0,\xe2\x80\x89a0\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a1,\xe2\x80\x89a0\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a2,\xe2\x80\x89a0\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a3,\xe2\x80\x89a0\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a0,\xe2\x80\x89...
Subarray (3, 2) is superior a3\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a3,\xe2\x80\x89a0\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a0,\xe2\x80\x89a3\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a1,\xe2\x80\x89a0\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a2,\xe2\x80\x89a3\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89a3,\xe2\x80\x89...
In the third sample any pair of (l,\xe2\x80\x89s) corresponds to a superior subarray as all the elements of an array are distinct." "2400  x746"
582B "Once Again..." "constructive algorithms, dp, matrices" "You are given an array of positive integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89\xc3\x97\xe2\x80\x89T of length n\xe2\x80\x89\xc3\x97\xe2\x80\x89T. We know that for any i\xe2\x80\x89>\xe2\x80\x89n it is true that ai\xe2\x80\x89=\xe2\x80\x89ai\xe2\x80\x89-\xe2\x80\x89n. Find the length of the longest non-decreasing sequence of the given array.
The first line contains two space-separated integers: n, T (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89T\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89107). The second line contains n space-separated integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300).
Print a single number \xe2\x80\x94 the length of a sought sequence.
The array given in the sample looks like that: 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2. The elements in bold form the largest non-decreasing subsequence. " "1900  x3444"
582A "GCD Table" "constructive algorithms, greedy, number theory" "The GCD table G of size n\xe2\x80\x89\xc3\x97\xe2\x80\x89n for an array of positive integers a of length n is defined by formula 
Let us remind you that the greatest common divisor (GCD) of two positive integers x and y is the greatest integer that is divisor of both x and y, it is denoted as . For example, for array a\xe2\x80\x89=\xe2\x80\x89{4,\xe2\x80\x893,\xe2\x80\x896,\xe2\x80\x892} of length 4 the GCD table will look as follows:
Given all the numbers of the GCD table G, restore array a.
The first line contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500) \xe2\x80\x94 the length of array a. The second line contains n2 space-separated numbers \xe2\x80\x94 the elements of the GCD table of G for array a. 
All the numbers in the table are positive integers, not exceeding 109. Note that the elements are given in an arbitrary order. It is guaranteed that the set of the input data corresponds to some array a.
In the single line print n positive integers \xe2\x80\x94 the elements of array a. If there are multiple possible solutions, you are allowed to print any of them." "1700  x7815"
581F "Zublicanes and Mumocrates" "dp, trees, two pointers" "It\'s election time in Berland. The favorites are of course parties of zublicanes and mumocrates. The election campaigns of both parties include numerous demonstrations on n main squares of the capital of Berland. Each of the n squares certainly can have demonstrations of only one party, otherwise it could lead to riots. On the other hand, both parties have applied to host a huge number of demonstrations, so that on all squares demonstrations must be held. Now the capital management will distribute the area between the two parties.
Some pairs of squares are connected by (n\xe2\x80\x89-\xe2\x80\x891) bidirectional roads such that between any pair of squares there is a unique way to get from one square to another. Some squares are on the outskirts of the capital meaning that they are connected by a road with only one other square, such squares are called dead end squares.
The mayor of the capital instructed to distribute all the squares between the parties so that the dead end squares had the same number of demonstrations of the first and the second party. It is guaranteed that the number of dead end squares of the city is even.
To prevent possible conflicts between the zublicanes and the mumocrates it was decided to minimize the number of roads connecting the squares with the distinct parties. You, as a developer of the department of distributing squares, should determine this smallest number.
The first line of the input contains a single integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000) \xe2\x80\x94 the number of squares in the capital of Berland.
Next n\xe2\x80\x89-\xe2\x80\x891 lines contain the pairs of integers x,\xe2\x80\x89y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89y) \xe2\x80\x94 the numbers of the squares connected by the road. All squares are numbered with integers from 1 to n. It is guaranteed that the number of dead end squares of the city is even.
Print a single number \xe2\x80\x94 the minimum number of roads connecting the squares with demonstrations of different parties." "2400  x875"
581E "Kojiro and Furrari" "dp, greedy" "Motorist Kojiro spent 10 years saving up for his favorite car brand, Furrari. Finally Kojiro\'s dream came true! Kojiro now wants to get to his girlfriend Johanna to show off his car to her.
Kojiro wants to get to his girlfriend, so he will go to her along a coordinate line. For simplicity, we can assume that Kojiro is at the point f of a coordinate line, and Johanna is at point e. Some points of the coordinate line have gas stations. Every gas station fills with only one type of fuel: Regular-92, Premium-95 or Super-98. Thus, each gas station is characterized by a pair of integers ti and xi \xe2\x80\x94 the number of the gas type and its position.
One liter of fuel is enough to drive for exactly 1 km (this value does not depend on the type of fuel). Fuels of three types differ only in quality, according to the research, that affects the lifetime of the vehicle motor. A Furrari tank holds exactly s liters of fuel (regardless of the type of fuel). At the moment of departure from point f Kojiro\'s tank is completely filled with fuel Super-98. At each gas station Kojiro can fill the tank with any amount of fuel, but of course, at no point in time, the amount of fuel in the tank can be more than s liters. Note that the tank can simultaneously have different types of fuel. The car can moves both left and right.
To extend the lifetime of the engine Kojiro seeks primarily to minimize the amount of fuel of type Regular-92. If there are several strategies to go from f to e, using the minimum amount of fuel of type Regular-92, it is necessary to travel so as to minimize the amount of used fuel of type Premium-95.
Write a program that can for the m possible positions of the start fi minimize firstly, the amount of used fuel of type Regular-92 and secondly, the amount of used fuel of type Premium-95.
The first line of the input contains four positive integers e,\xe2\x80\x89s,\xe2\x80\x89n,\xe2\x80\x89m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89e,\xe2\x80\x89s\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the coordinate of the point where Johanna is, the capacity of a Furrari tank, the number of gas stations and the number of starting points. 
Next n lines contain two integers each ti,\xe2\x80\x89xi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893,\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), representing the type of the i-th gas station (1 represents Regular-92, 2 \xe2\x80\x94 Premium-95 and 3 \xe2\x80\x94 Super-98) and the position on a coordinate line of the i-th gas station. Gas stations don\'t necessarily follow in order from left to right.
The last line contains m integers fi (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89fi\xe2\x80\x89<\xe2\x80\x89e). Start positions don\'t necessarily follow in order from left to right.
No point of the coordinate line contains more than one gas station. It is possible that some of points fi or point e coincide with a gas station.
Print exactly m lines. The i-th of them should contain two integers \xe2\x80\x94 the minimum amount of gas of type Regular-92 and type Premium-95, if Kojiro starts at point fi. First you need to minimize the first value. If there are multiple ways to do it, you need to also minimize the second value.
If there is no way to get to Johanna from point fi, the i-th line should look like that ""-1 -1"" (two numbers minus one without the quotes)." "2800  x191"
581D "Three Logos" "bitmasks, brute force, constructive algorithms, geometry, implementation, math" "Three companies decided to order a billboard with pictures of their logos. A billboard is a big square board. A logo of each company is a rectangle of a non-zero area. 
Advertisers will put up the ad only if it is possible to place all three logos on the billboard so that they do not overlap and the billboard has no empty space left. When you put a logo on the billboard, you should rotate it so that the sides were parallel to the sides of the billboard.
Your task is to determine if it is possible to put the logos of all the three companies on some square billboard without breaking any of the described rules.
The first line of the input contains six positive integers x1,\xe2\x80\x89y1,\xe2\x80\x89x2,\xe2\x80\x89y2,\xe2\x80\x89x3,\xe2\x80\x89y3 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x1,\xe2\x80\x89y1,\xe2\x80\x89x2,\xe2\x80\x89y2,\xe2\x80\x89x3,\xe2\x80\x89y3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), where xi and yi determine the length and width of the logo of the i-th company respectively.
If it is impossible to place all the three logos on a square shield, print a single integer ""-1"" (without the quotes).
If it is possible, print in the first line the length of a side of square n, where you can place all the three logos. Each of the next n lines should contain n uppercase English letters ""A"", ""B"" or ""C"". The sets of the same letters should form solid rectangles, provided that:
Note that the logos of the companies can be rotated for printing on the billboard. The billboard mustn\'t have any empty space. If a square billboard can be filled with the logos in multiple ways, you are allowed to print any of them.
See the samples to better understand the statement." "1700  x3767"
581C "Developing Skills" "implementation, math, sortings" "Petya loves computer games. Finally a game that he\'s been waiting for so long came out!
The main character of this game has n different skills, each of which is characterized by an integer ai from 0 to 100. The higher the number ai is, the higher is the i-th skill of the character. The total rating of the character is calculated as the sum of the values \xe2\x80\x8b\xe2\x80\x8bof  for all i from 1 to n. The expression \xe2\x8c\x8a x\xe2\x8c\x8b denotes the result of rounding the number x down to the nearest integer.
At the beginning of the game Petya got k improvement units as a bonus that he can use to increase the skills of his character and his total rating. One improvement unit can increase any skill of Petya\'s character by exactly one. For example, if a4\xe2\x80\x89=\xe2\x80\x8946, after using one imporvement unit to this skill, it becomes equal to 47. A hero\'s skill cannot rise higher more than 100. Thus, it is permissible that some of the units will remain unused.
Your task is to determine the optimal way of using the improvement units so as to maximize the overall rating of the character. It is not necessary to use all the improvement units.
The first line of the input contains two positive integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89107) \xe2\x80\x94 the number of skills of the character and the number of units of improvements at Petya\'s disposal.
The second line of the input contains a sequence of n integers ai (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), where ai characterizes the level of the i-th skill of the character.
The first line of the output should contain a single non-negative integer \xe2\x80\x94 the maximum total rating of the character that Petya can get using k or less improvement units.
In the first test case the optimal strategy is as follows. Petya has to improve the first skill to 10 by spending 3 improvement units, and the second skill to 10, by spending one improvement unit. Thus, Petya spends all his improvement units and the total rating of the character becomes equal to  lfloor frac{100}{10} rfloor\xe2\x80\x89+\xe2\x80\x89 lfloor frac{100}{10} rfloor\xe2\x80\x89=\xe2\x80\x8910\xe2\x80\x89+\xe2\x80\x8910\xe2\x80\x89=\xe2\x80\x89 20.
In the second test the optimal strategy for Petya is to improve the first skill to 20 (by spending 3 improvement units) and to improve the third skill to 20 (in this case by spending 1 improvement units). Thus, Petya is left with 4 improvement units and he will be able to increase the second skill to 19 (which does not change the overall rating, so Petya does not necessarily have to do it). Therefore, the highest possible total rating in this example is .
In the third test case the optimal strategy for Petya is to increase the first skill to 100 by spending 1 improvement unit. Thereafter, both skills of the character will be equal to 100, so Petya will not be able to spend the remaining improvement unit. So the answer is equal to . " "1400  x7336"
581B "Luxurious Houses" "implementation, math" "The capital of Berland has n multifloor buildings. The architect who built up the capital was very creative, so all the houses were built in one row.
Let\'s enumerate all the houses from left to right, starting with one. A house is considered to be luxurious if the number of floors in it is strictly greater than in all the houses with larger numbers. In other words, a house is luxurious if the number of floors in it is strictly greater than in all the houses, which are located to the right from it. In this task it is assumed that the heights of floors in the houses are the same.
The new architect is interested in n questions, i-th of them is about the following: ""how many floors should be added to the i-th house to make it luxurious?"" (for all i from 1 to n, inclusive). You need to help him cope with this task.
Note that all these questions are independent from each other \xe2\x80\x94 the answer to the question for house i does not affect other answers (i.e., the floors to the houses are not actually added).
The first line of the input contains a single number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of houses in the capital of Berland.
The second line contains n space-separated positive integers hi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), where hi equals the number of floors in the i-th house. 
Print n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an, where number ai is the number of floors that need to be added to the house number i to make it luxurious. If the house is already luxurious and nothing needs to be added to it, then ai should be equal to zero.
All houses are numbered from left to right, starting from one." "1100  x13092"
581A "Vasya the Hipster" "implementation, math" "One day Vasya the Hipster decided to count how many socks he had. It turned out that he had a red socks and b blue socks.
According to the latest fashion, hipsters should wear the socks of different colors: a red one on the left foot, a blue one on the right foot.
Every day Vasya puts on new socks in the morning and throws them away before going to bed as he doesn\'t want to wash them.
Vasya wonders, what is the maximum number of days when he can dress fashionable and wear different socks, and after that, for how many days he can then wear the same socks until he either runs out of socks or cannot make a single pair from the socks he\'s got.
Can you help him?
The single line of the input contains two positive integers a and b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of red and blue socks that Vasya\'s got.
Print two space-separated integers \xe2\x80\x94 the maximum number of days when Vasya can wear different socks and the number of days when he can wear the same socks until he either runs out of socks or cannot make a single pair from the socks he\'s got.
Keep in mind that at the end of the day Vasya throws away the socks that he\'s been wearing on that day.
In the first sample Vasya can first put on one pair of different socks, after that he has two red socks left to wear on the second day." "800  x71908"
580E "Kefa and Watch" "data structures, hashing, strings" "One day Kefa the parrot was walking down the street as he was on the way home from the restaurant when he saw something glittering by the road. As he came nearer he understood that it was a watch. He decided to take it to the pawnbroker to earn some money. 
The pawnbroker said that each watch contains a serial number represented by a string of digits from 0 to 9, and the more quality checks this number passes, the higher is the value of the watch. The check is defined by three positive integers l, r and d. The watches pass a check if a substring of the serial number from l to r has period d. Sometimes the pawnbroker gets distracted and Kefa changes in some substring of the serial number all digits to c in order to increase profit from the watch. 
The seller has a lot of things to do to begin with and with Kefa messing about, he gave you a task: to write a program that determines the value of the watch.
Let us remind you that number x is called a period of string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|), if si\xe2\x80\x89\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89si\xe2\x80\x89+\xe2\x80\x89x for all i from 1 to |s|\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x89\xe2\x80\x89x.
The first line of the input contains three positive integers n, m and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89+\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the length of the serial number, the number of change made by Kefa and the number of quality checks.
The second line contains a serial number consisting of n digits.
Then m\xe2\x80\x89+\xe2\x80\x89k lines follow, containing either checks or changes. 
The changes are given as 1 l r c (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x899). That means that Kefa changed all the digits from the l-th to the r-th to be c. 
The checks are given as 2 l r d (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89-\xe2\x80\x89l\xe2\x80\x89+\xe2\x80\x891).
For each check on a single line print ""YES"" if the watch passed it, otherwise print ""NO"".
In the first sample test two checks will be made. In the first one substring ""12"" is checked on whether or not it has period 1, so the answer is ""NO"". In the second one substring ""88"", is checked on whether or not it has period 1, and it has this period, so the answer is ""YES"".
In the second statement test three checks will be made. The first check processes substring ""3493"", which doesn\'t have period 2. Before the second check the string looks as ""334334"", so the answer to it is ""YES"". And finally, the third check processes substring ""8334"", which does not have period 1." "2500  x2087"
580D "Kefa and Dishes" "bitmasks, dp" "When Kefa came to the restaurant and sat at a table, the waiter immediately brought him the menu. There were n dishes. Kefa knows that he needs exactly m dishes. But at that, he doesn\'t want to order the same dish twice to taste as many dishes as possible. 
Kefa knows that the i-th dish gives him ai units of satisfaction. But some dishes do not go well together and some dishes go very well together. Kefa set to himself k rules of eating food of the following type \xe2\x80\x94 if he eats dish x exactly before dish y (there should be no other dishes between x and y), then his satisfaction level raises by c. 
Of course, our parrot wants to get some maximal possible satisfaction from going to the restaurant. Help him in this hard task!
The first line of the input contains three space-separated numbers, n, m and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8918, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89*\xe2\x80\x89(n\xe2\x80\x89-\xe2\x80\x891)) \xe2\x80\x94 the number of dishes on the menu, the number of portions Kefa needs to eat to get full and the number of eating rules.
The second line contains n space-separated numbers ai, (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the satisfaction he gets from the i-th dish.
Next k lines contain the rules. The i-th rule is described by the three numbers xi, yi and ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). That means that if you eat dish xi right before dish yi, then the Kefa\'s satisfaction increases by ci. It is guaranteed that there are no such pairs of indexes i and j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89<\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k), that xi\xe2\x80\x89=\xe2\x80\x89xj and yi\xe2\x80\x89=\xe2\x80\x89yj.
In the single line of the output print the maximum satisfaction that Kefa can get from going to the restaurant.
In the first sample it is best to first eat the second dish, then the first one. Then we get one unit of satisfaction for each dish and plus one more for the rule.
In the second test the fitting sequences of choice are 4 2 1 or 2 1 4. In both cases we get satisfaction 7 for dishes and also, if we fulfill rule 1, we get an additional satisfaction 5." "1800  x9920"
580C "Kefa and Park" "dfs and similar, graphs, trees" "Kefa decided to celebrate his first big salary by going to the restaurant. 
He lives by an unusual park. The park is a rooted tree consisting of n vertices with the root at vertex 1. Vertex 1 also contains Kefa\'s house. Unfortunaely for our hero, the park also contains cats. Kefa has already found out what are the vertices with cats in them.
The leaf vertices of the park contain restaurants. Kefa wants to choose a restaurant where he will go, but unfortunately he is very afraid of cats, so there is no way he will go to the restaurant if the path from the restaurant to his house contains more than m consecutive vertices with cats. 
Your task is to help Kefa count the number of restaurants where he can go.
The first line contains two integers, n and m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the number of vertices of the tree and the maximum number of consecutive vertices with cats that is still ok for Kefa.
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an, where each ai either equals to 0 (then vertex i has no cat), or equals to 1 (then vertex i has a cat).
Next n\xe2\x80\x89-\xe2\x80\x891 lines contains the edges of the tree in the format ""xi yi"" (without the quotes) (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, xi\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89yi), where xi and yi are the vertices of the tree, connected by an edge. 
It is guaranteed that the given set of edges specifies a tree.
A single integer \xe2\x80\x94 the number of distinct leaves of a tree the path to which from Kefa\'s home contains at most m consecutive vertices with cats.
Let us remind you that a tree is a connected graph on n vertices and n\xe2\x80\x89-\xe2\x80\x891 edge. A rooted tree is a tree with a special vertex called root. In a rooted tree among any two vertices connected by an edge, one vertex is a parent (the one closer to the root), and the other one is a child. A vertex is called a leaf, if it has no children.
Note to the first sample test:  The vertices containing cats are marked red. The restaurants are at vertices 2, 3, 4. Kefa can\'t go only to the restaurant located at vertex 2.
Note to the second sample test:  The restaurants are located at vertices 4, 5, 6, 7. Kefa can\'t go to restaurants 6, 7." "1500  x43677"
580B "Kefa and Company" "binary search, sortings, two pointers" "Kefa wants to celebrate his first big salary by going to restaurant. However, he needs company. 
Kefa has n friends, each friend will agree to go to the restaurant if Kefa asks. Each friend is characterized by the amount of money he has and the friendship factor in respect to Kefa. The parrot doesn\'t want any friend to feel poor compared to somebody else in the company (Kefa doesn\'t count). A friend feels poor if in the company there is someone who has at least d units of money more than he does. Also, Kefa wants the total friendship factor of the members of the company to be maximum. Help him invite an optimal company!
The first line of the input contains two space-separated integers, n and d (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, ) \xe2\x80\x94 the number of Kefa\'s friends and the minimum difference between the amount of money in order to feel poor, respectively.
Next n lines contain the descriptions of Kefa\'s friends, the (i\xe2\x80\x89+\xe2\x80\x891)-th line contains the description of the i-th friend of type mi, si (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89mi,\xe2\x80\x89si\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the amount of money and the friendship factor, respectively. 
Print the maximum total friendship factir that can be reached.
In the first sample test the most profitable strategy is to form a company from only the second friend. At all other variants the total degree of friendship will be worse.
In the second sample test we can take all the friends." "1500  x26770"
580A "Kefa and First Steps" "brute force, dp, implementation" "Kefa decided to make some money doing business on the Internet for exactly n days. He knows that on the i-th day (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) he makes ai money. Kefa loves progress, that\'s why he wants to know the length of the maximum non-decreasing subsegment in sequence ai. Let us remind you that the subsegment of the sequence is its continuous fragment. A subsegment of numbers is called non-decreasing if all numbers in it follow in the non-decreasing order.
Help Kefa cope with this task!
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line contains n integers a1,\xe2\x80\x89\xe2\x80\x89a2,\xe2\x80\x89\xe2\x80\x89...,\xe2\x80\x89\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print a single integer \xe2\x80\x94 the length of the maximum non-decreasing subsegment of sequence a.
In the first test the maximum non-decreasing subsegment is the numbers from the third to the fifth one.
In the second test the maximum non-decreasing subsegment is the numbers from the first to the third one." "900  x89082"
579B "Finding Team Member" "brute force, implementation, sortings" "There is a programing contest named SnakeUp, 2n people want to compete for it. In order to attend this contest, people need to form teams of exactly two people. You are given the strength of each possible combination of two people. All the values of the strengths are distinct.
Every contestant hopes that he can find a teammate so that their team\xe2\x80\x99s strength is as high as possible. That is, a contestant will form a team with highest strength possible by choosing a teammate from ones who are willing to be a teammate with him/her. More formally, two people A and B may form a team if each of them is the best possible teammate (among the contestants that remain unpaired) for the other one. 
Can you determine who will be each person\xe2\x80\x99s teammate?
There are 2n lines in the input. 
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89400) \xe2\x80\x94 the number of teams to be formed.
The i-th line (i\xe2\x80\x89>\xe2\x80\x891) contains i\xe2\x80\x89-\xe2\x80\x891 numbers ai1, ai2, ... , ai(i\xe2\x80\x89-\xe2\x80\x891). Here aij (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89aij\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106, all aij are distinct) denotes the strength of a team consisting of person i and person j (people are numbered starting from 1.)
Output a line containing 2n numbers. The i-th number should represent the number of teammate of i-th person.
In the first sample, contestant 1 and 2 will be teammates and so do contestant 3 and 4, so the teammate of contestant 1, 2, 3, 4 will be 2, 1, 4, 3 respectively." "1300  x5262"
579A "Raising Bacteria" bitmasks "You are a lover of bacteria. You want to raise some bacteria in a box. 
Initially, the box is empty. Each morning, you can put any number of bacteria into the box. And each night, every bacterium in the box will split into two bacteria. You hope to see exactly x bacteria in the box at some moment. 
What is the minimum number of bacteria you need to put into the box across those days?
The only line containing one integer x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
The only line containing one integer: the answer.
For the first sample, we can add one bacterium in the box in the first day morning and at the third morning there will be 4 bacteria in the box. Now we put one more resulting 5 in the box. We added 2 bacteria in the process so the answer is 2.
For the second sample, we can put one in the first morning and in the 4-th morning there will be 8 in the box. So the answer is 1." "1000  x61959"
578F "Mirror Box" "matrices, trees" "You are given a box full of mirrors. Box consists of grid of size n\xe2\x80\x89\xc3\x97\xe2\x80\x89m. Each cell of the grid contains a mirror put in the shape of \'\\\' or \'\xe2\x80\x89/\xe2\x80\x89\' (45 degree to the horizontal or vertical line). But mirrors in some cells have been destroyed. You want to put new mirrors into these grids so that the following two conditions are satisfied:
After you tried putting some mirrors, you find out that there are many ways of doing so. How many possible ways are there? The answer might be large, so please find the result modulo prime number MOD.
The first line contains three integers n, m, MOD (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89MOD\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109\xe2\x80\x89+\xe2\x80\x897, MOD is prime), m, n indicates the dimensions of a box and MOD is the number to module the answer.
The following n lines each contains a string of length m. Each string contains only \'\xe2\x80\x89/\xe2\x80\x89\', \'\\\', \'*\', where \'*\' denotes that the mirror in that grid has been destroyed. 
It is guaranteed that the number of \'*\' is no more than 200.
Output the answer modulo MOD.
The only way for sample 1 is shown on the left picture from the statement.
The only way for sample 2 is shown on the right picture from the statement.
For the third sample, there are 5 possibilities that are listed below: 
1.


2.


3.


4.


5.


The answer is then module by 3 so the output should be 2." "3200  x551"
578E Walking! "constructive algorithms, greedy" "There is a sand trail in front of Alice\'s home.
In daytime, people walk over it and leave a footprint on the trail for their every single step. Alice cannot distinguish the order of the footprints, but she can tell whether each footprint is made by left foot or right foot. Also she\'s certain that all people are walking by alternating left foot and right foot.
For example, suppose that one person walked through the trail and left some footprints. The footprints are RRLRL in order along the trail (\'R\' means right foot and \'L\' means left foot). You might think the outcome of the footprints is strange. But in fact, some steps are resulting from walking backwards!
There are some possible order of steps that produce these footprints such as 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x895\xe2\x80\x89\xe2\x86\x92\xe2\x80\x894 or 2\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893\xe2\x80\x89\xe2\x86\x92\xe2\x80\x894\xe2\x80\x89\xe2\x86\x92\xe2\x80\x895\xe2\x80\x89\xe2\x86\x92\xe2\x80\x891 (we suppose that the distance between two consecutive steps can be arbitrarily long). The number of backward steps from above two examples are 2 and 1 separately.
Alice is interested in these footprints. Whenever there is a person walking trough the trail, she takes a picture of all these footprints along the trail and erase all of them so that next person will leave a new set of footprints. We know that people walk by alternating right foot and left foot, but we don\'t know if the first step is made by left foot or right foot.
Alice wants to know the minimum possible number of backward steps made by a person. But it\'s a little hard. Please help Alice to calculate it. You also need to construct one possible history of these footprints.
Only one line containing the string S (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|S|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) containing all footprints in order along the trail from entrance to exit.
It is guaranteed that there is at least one possible footprint history.
You should output 2 lines.
The first line should contain a number denoting the minimum number of backward steps.
The second line should contain a permutation of integers from 1 to |S|. This permutation should denote the order of footprints that may possible be used by person walked there.
If there are several possible answers, you may output any of them.
For the first sample, one possible order is 2\xe2\x80\x89\xe2\x86\x92\xe2\x80\x895\xe2\x80\x89\xe2\x86\x92\xe2\x80\x891\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893\xe2\x80\x89\xe2\x86\x92\xe2\x80\x894, among them only the step 5\xe2\x80\x89\xe2\x86\x92\xe2\x80\x891 is backward step so the answer is 1. 
For the second example one possible order is just to follow the order of input, thus there are no backward steps. 
For the third sample, there will be 4 backward steps because every step from L to R will be a backward step." "2700  x642"
578D "LCS Again" "dp, greedy" "You are given a string S of length n with each character being one of the first m lowercase English letters. 
Calculate how many different strings T of length n composed from the first m lowercase English letters exist such that the length of LCS (longest common subsequence) between S and T is n\xe2\x80\x89-\xe2\x80\x891.
Recall that LCS of two strings S and T is the longest string C such that C both in S and T as a subsequence.
The first line contains two numbers n and m denoting the length of string S and number of first English lowercase characters forming the character set for strings (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8926).
The second line contains string S.
Print the only line containing the answer.
For the first sample, the 6 possible strings T are: aab, aac, aba, aca, baa, caa. 
For the second sample, the 11 possible strings T are: aaa, aac, aba, abb, abc, aca, acb, baa, bab, caa, cab.
For the third sample, the only possible string T is b." "2700  x870"
578C "Weakness and Poorness" "ternary search" "You are given a sequence of n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an. 
Determine a real number x such that the weakness of the sequence a1\xe2\x80\x89-\xe2\x80\x89x,\xe2\x80\x89a2\xe2\x80\x89-\xe2\x80\x89x,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x89x is as small as possible.
The weakness of a sequence is defined as the maximum value of the poorness over all segments (contiguous subsequences) of a sequence.
The poorness of a segment is defined as the absolute value of sum of the elements of segment.
The first line contains one integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000), the length of a sequence.
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (|ai|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910\xe2\x80\x89000).
Output a real number denoting the minimum possible weakness of a1\xe2\x80\x89-\xe2\x80\x89x,\xe2\x80\x89a2\xe2\x80\x89-\xe2\x80\x89x,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x89x. Your answer will be considered correct if its relative or absolute error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x896.
For the first case, the optimal value of x is 2 so the sequence becomes \xe2\x80\x89-\xe2\x80\x891, 0, 1 and the max poorness occurs at the segment ""-1"" or segment ""1"". The poorness value (answer) equals to 1 in this case. 
For the second sample the optimal value of x is 2.5 so the sequence becomes \xe2\x80\x89-\xe2\x80\x891.5,\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x890.5,\xe2\x80\x890.5,\xe2\x80\x891.5 and the max poorness occurs on segment ""-1.5 -0.5"" or ""0.5 1.5"". The poorness value (answer) equals to 2 in this case." "2000  x4500"
578B """Or"" Game" "brute force, greedy" "You are given n numbers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an. You can perform at most k operations. For each operation you can multiply one of the numbers by x. We want to make  as large as possible, where  denotes the bitwise OR. 
Find the maximum possible value of  after performing at most k operations optimally.
The first line contains three integers n, k and x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x898).
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Output the maximum value of a bitwise OR of sequence elements after performing operations.
For the first sample, any possible choice of doing one operation will result the same three numbers 1, 1, 2 so the result is . 
For the second sample if we multiply 8 by 3 two times we\'ll get 72. In this case the numbers will become 1, 2, 4, 72 so the OR value will be 79 and is the largest possible result." "1700  x5232"
578A "A Problem about Polyline" "geometry, math" "There is a polyline going through points (0,\xe2\x80\x890)\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89(x,\xe2\x80\x89x)\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89(2x,\xe2\x80\x890)\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89(3x,\xe2\x80\x89x)\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89(4x,\xe2\x80\x890)\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89...\xe2\x80\x89-\xe2\x80\x89(2kx,\xe2\x80\x890)\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89(2kx\xe2\x80\x89+\xe2\x80\x89x,\xe2\x80\x89x)\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89.... 
We know that the polyline passes through the point (a,\xe2\x80\x89b). Find minimum positive value x such that it is true or determine that there is no such x.
Only one line containing two positive integers a and b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Output the only line containing the answer. Your answer will be considered correct if its relative or absolute error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x899. If there is no such x then output \xe2\x80\x89-\xe2\x80\x891 as the answer.
You can see following graphs for sample 1 and sample 3. " "1700  x4773"
577B "Modulo Sum" "combinatorics, data structures, dp, two pointers" "You are given a sequence of numbers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an, and a number m.
Check if it is possible to choose a non-empty subsequence aij such that the sum of numbers in this subsequence is divisible by m.
The first line contains two numbers, n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89103) \xe2\x80\x94 the size of the original sequence and the number such that sum should be divisible by it.
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
In the single line print either ""YES"" (without the quotes) if there exists the sought subsequence, or ""NO"" (without the quotes), if such subsequence doesn\'t exist.
In the first sample test you can choose numbers 2 and 3, the sum of which is divisible by 5.
In the second sample test the single non-empty subsequence of numbers is a single number 5. Number 5 is not divisible by 6, that is, the sought subsequence doesn\'t exist.
In the third sample test you need to choose two numbers 3 on the ends.
In the fourth sample test you can take the whole subsequence." "1900  x12325"
577A "Multiplication Table" "implementation, number theory" "Let\'s consider a table consisting of n rows and n columns. The cell located at the intersection of i-th row and j-th column contains number i\xe2\x80\x89\xc3\x97\xe2\x80\x89j. The rows and columns are numbered starting from 1.
You are given a positive integer x. Your task is to count the number of cells in a table that contain number x.
The single line contains numbers n and x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the size of the table and the number that we are looking for in the table.
Print a single number: the number of times x occurs in the table.
A table for the second sample test is given below. The occurrences of number 12 are marked bold. " "1000  x40164"
576E "Painting Edges" "binary search, data structures" "Note the unusual memory limit for this problem.
You are given an undirected graph consisting of n vertices and m edges. The vertices are numbered with integers from 1 to n, the edges are numbered with integers from 1 to m. Each edge can be unpainted or be painted in one of the k colors, which are numbered with integers from 1 to k. Initially, none of the edges is painted in any of the colors.
You get queries of the form ""Repaint edge ei to color ci"". At any time the graph formed by the edges of the same color must be bipartite. If after the repaint this condition is violated, then the query is considered to be invalid and edge ei keeps its color. Otherwise, edge ei is repainted in color ci, and the query is considered to valid.
Recall that the graph is called bipartite if the set of its vertices can be divided into two parts so that no edge connected vertices of the same parts.
For example, suppose you are given a triangle graph, that is a graph with three vertices and edges (1,\xe2\x80\x892), (2,\xe2\x80\x893) and (3,\xe2\x80\x891). Suppose that the first two edges are painted color 1, and the third one is painted color 2. Then the query of ""repaint the third edge in color 1"" will be incorrect because after its execution the graph formed by the edges of color 1 will not be bipartite. On the other hand, it is possible to repaint the second edge in color 2.
You receive q queries. For each query, you should either apply it, and report that the query is valid, or report that the query is invalid.
The first line contains integers n, m, k, q (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) \xe2\x80\x94 the number of vertices, the number of edges, the number of colors and the number of queries. 
Then follow m edges of the graph in the form ai, bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). 
Then follow q queries of the form ei, ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ei\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k).
It is guaranteed that the graph doesn\'t contain multiple edges and loops.
For each query print ""YES"" (without the quotes), if it is valid, or ""NO"" (without the quotes), if this query destroys the bipartivity of the graph formed by the edges of some color." "3300  x1240"
576D "Flights for Regular Customers" "dp, matrices" "In the country there are exactly n cities numbered with positive integers from 1 to n. In each city there is an airport is located.
Also, there is the only one airline, which makes m flights. Unfortunately, to use them, you need to be a regular customer of this company, namely, you have the opportunity to enjoy flight i from city ai to city bi only if you have already made at least di flights before that.
Please note that flight i flies exactly from city ai to city bi. It can not be used to fly from city bi to city ai. An interesting fact is that there may possibly be recreational flights with a beautiful view of the sky, which begin and end in the same city.
You need to get from city 1 to city n. Unfortunately, you\'ve never traveled by plane before. What minimum number of flights you have to perform in order to get to city n?
Note that the same flight can be used multiple times.
The first line contains two integers, n and m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89150, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89150) \xe2\x80\x94 the number of cities in the country and the number of flights the company provides.
Next m lines contain numbers ai, bi, di (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), representing flight number i from city ai to city bi, accessible to only the clients who have made at least di flights. 
Print ""Impossible"" (without the quotes), if it is impossible to get from city 1 to city n using the airways.
But if there is at least one way, print a single integer \xe2\x80\x94 the minimum number of flights you need to make to get to the destination point." "2700  x1417"
576C "Points on Plane" "constructive algorithms, divide and conquer, geometry, greedy, sortings" "On a plane are n points (xi, yi) with integer coordinates between 0 and 106. The distance between the two points with numbers a and b is said to be the following value:  (the distance calculated by such formula is called Manhattan distance).
We call a hamiltonian path to be some permutation pi of numbers from 1 to n. We say that the length of this path is value .
Find some hamiltonian path with a length of no more than 25\xe2\x80\x89\xc3\x97\xe2\x80\x89108. Note that you do not have to minimize the path length.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
The i\xe2\x80\x89+\xe2\x80\x891-th line contains the coordinates of the i-th point: xi and yi (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
It is guaranteed that no two points coincide.
Print the permutation of numbers pi from 1 to n \xe2\x80\x94 the sought Hamiltonian path. The permutation must meet the inequality .
If there are multiple possible answers, print any of them.
It is guaranteed that the answer exists.
In the sample test the total distance is:

(|5\xe2\x80\x89-\xe2\x80\x893|\xe2\x80\x89+\xe2\x80\x89|0\xe2\x80\x89-\xe2\x80\x894|)\xe2\x80\x89+\xe2\x80\x89(|3\xe2\x80\x89-\xe2\x80\x890|\xe2\x80\x89+\xe2\x80\x89|4\xe2\x80\x89-\xe2\x80\x897|)\xe2\x80\x89+\xe2\x80\x89(|0\xe2\x80\x89-\xe2\x80\x898|\xe2\x80\x89+\xe2\x80\x89|7\xe2\x80\x89-\xe2\x80\x8910|)\xe2\x80\x89+\xe2\x80\x89(|8\xe2\x80\x89-\xe2\x80\x899|\xe2\x80\x89+\xe2\x80\x89|10\xe2\x80\x89-\xe2\x80\x8912|)\xe2\x80\x89=\xe2\x80\x892\xe2\x80\x89+\xe2\x80\x894\xe2\x80\x89+\xe2\x80\x893\xe2\x80\x89+\xe2\x80\x893\xe2\x80\x89+\xe2\x80\x898\xe2\x80\x89+\xe2\x80\x893\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x892\xe2\x80\x89=\xe2\x80\x8926" "2100  x3482"
576B "Invariance of Tree" "constructive algorithms, dfs and similar, greedy, trees" "A tree of size n is an undirected connected graph consisting of n vertices without cycles.
Consider some tree with n vertices. We call a tree invariant relative to permutation p\xe2\x80\x89=\xe2\x80\x89p1p2... pn, if for any two vertices of the tree u and v the condition holds: ""vertices u and v are connected by an edge if and only if vertices pu and pv are connected by an edge"".
You are given permutation p of size n. Find some tree size n, invariant relative to the given permutation.
The first line contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the size of the permutation (also equal to the size of the sought tree).
The second line contains permutation pi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
If the sought tree does not exist, print ""NO"" (without the quotes).
Otherwise, print ""YES"", and then print n\xe2\x80\x89-\xe2\x80\x891 lines, each of which contains two integers \xe2\x80\x94 the numbers of vertices connected by an edge of the tree you found. The vertices are numbered from 1, the order of the edges and the order of the vertices within the edges does not matter.
If there are multiple solutions, output any of them.
In the first sample test a permutation transforms edge (4, 1) into edge (1, 4), edge (4, 2) into edge (1, 3) and edge (1, 3) into edge (4, 2). These edges all appear in the resulting tree.
It can be shown that in the second sample test no tree satisfies the given condition." "2100  x1815"
576A "Vasya and Petya's Game" "math, number theory" "Vasya and Petya are playing a simple game. Vasya thought of number x between 1 and n, and Petya tries to guess the number.
Petya can ask questions like: ""Is the unknown number divisible by number y?"".
The game is played by the following rules: first Petya asks all the questions that interest him (also, he can ask no questions), and then Vasya responds to each question with a \'yes\' or a \'no\'. After receiving all the answers Petya should determine the number that Vasya thought of.
Unfortunately, Petya is not familiar with the number theory. Help him find the minimum number of questions he should ask to make a guaranteed guess of Vasya\'s number, and the numbers yi, he should ask the questions about.
A single line contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89103).
Print the length of the sequence of questions k (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), followed by k numbers \xe2\x80\x94 the questions yi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
If there are several correct sequences of questions of the minimum length, you are allowed to print any of them.
The sequence from the answer to the first sample test is actually correct.
If the unknown number is not divisible by one of the sequence numbers, it is equal to 1.
If the unknown number is divisible by 4, it is 4.
If the unknown number is divisible by 3, then the unknown number is 3.
Otherwise, it is equal to 2. Therefore, the sequence of questions allows you to guess the unknown number. It can be shown that there is no correct sequence of questions of length 2 or shorter." "1500  x14027"
575I "Robots protection" "data structures" "Company ""Robots industries"" produces robots for territory protection. Robots protect triangle territories \xe2\x80\x94 right isosceles triangles with catheti parallel to North-South and East-West directions.
Owner of some land buys and sets robots on his territory to protect it. From time to time, businessmen want to build offices on that land and want to know how many robots will guard it. You are to handle these queries. 
The first line contains integer N \xe2\x80\x94 width and height of the land, and integer Q \xe2\x80\x94 number of queries to handle.
Next Q lines contain queries you need to process.
Two types of queries: 
For each second type query output how many robots guard this point. Each answer should be in a separate line." "2800  x466"
575H Bots "combinatorics, dp, math, number theory" "Sasha and Ira are two best friends. But they aren\xe2\x80\x99t just friends, they are software engineers and experts in artificial intelligence. They are developing an algorithm for two bots playing a two-player game. The game is cooperative and turn based. In each turn, one of the players makes a move (it doesn\xe2\x80\x99t matter which player, it\'s possible that players turns do not alternate). 
Algorithm for bots that Sasha and Ira are developing works by keeping track of the state the game is in. Each time either bot makes a move, the state changes. And, since the game is very dynamic, it will never go back to the state it was already in at any point in the past.
Sasha and Ira are perfectionists and want their algorithm to have an optimal winning strategy. They have noticed that in the optimal winning strategy, both bots make exactly N moves each. But, in order to find the optimal strategy, their algorithm needs to analyze all possible states of the game (they haven\xe2\x80\x99t learned about alpha-beta pruning yet) and pick the best sequence of moves.
They are worried about the efficiency of their algorithm and are wondering what is the total number of states of the game that need to be analyzed? 
The first and only line contains integer N.
Output should contain a single integer \xe2\x80\x93 number of possible states modulo 109\xe2\x80\x89+\xe2\x80\x897.
Start: Game is in state A. 
Overall, there are 19 possible states of the game their algorithm needs to analyze.
" "1800  x1692"
575G "Run for beer" "dfs and similar, shortest paths" "People in BubbleLand like to drink beer. Little do you know, beer here is so good and strong that every time you drink it your speed goes 10 times slower than before you drank it.
Birko lives in city Beergrade, but wants to go to city Beerburg. You are given a road map of BubbleLand and you need to find the fastest way for him. When he starts his journey in Beergrade his speed is 1. When he comes to a new city he always tries a glass of local beer, which divides his speed by 10. 
The question here is what the minimal time for him to reach Beerburg is. If there are several paths with the same minimal time, pick the one that has least roads on it. If there is still more than one path, pick any.
It is guaranteed that there will be at least one path from Beergrade to Beerburg.
The first line of input contains integer N \xe2\x80\x94 the number of cities in Bubbleland and integer M \xe2\x80\x94 the number of roads in this country. Cities are enumerated from 0 to N\xe2\x80\x89-\xe2\x80\x891, with city 0 being Beergrade, and city N\xe2\x80\x89-\xe2\x80\x891 being Beerburg. Each of the following M lines contains three integers a, b (a\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89b) and len. These numbers indicate that there is a bidirectional road between cities a and b with length len. 
The first line of output should contain minimal time needed to go from Beergrade to Beerburg.
The second line of the output should contain the number of cities on the path from Beergrade to Beerburg that takes minimal time. 
The third line of output should contain the numbers of cities on this path in the order they are visited, separated by spaces." "2200  x893"
575F Bulbo "dp, greedy" "Bananistan is a beautiful banana republic. Beautiful women in beautiful dresses. Beautiful statues of beautiful warlords. Beautiful stars in beautiful nights.
In Bananistan people play this crazy game \xe2\x80\x93 Bulbo. There\xe2\x80\x99s an array of bulbs and player at the position, which represents one of the bulbs. The distance between two neighboring bulbs is 1. Before each turn player can change his position with cost |posnew\xe2\x80\x89-\xe2\x80\x89posold|. After that, a contiguous set of bulbs lights-up and player pays the cost that\xe2\x80\x99s equal to the distance to the closest shining bulb. Then, all bulbs go dark again. The goal is to minimize your summed cost. I tell you, Bananistanians are spending their nights playing with bulbs.
Banana day is approaching, and you are hired to play the most beautiful Bulbo game ever. A huge array of bulbs is installed, and you know your initial position and all the light-ups in advance. You need to play the ideal game and impress Bananistanians, and their families.
The first line contains number of turns n and initial position x. Next n lines contain two numbers lstart and lend, which represent that all bulbs from interval [lstart,\xe2\x80\x89lend] are shining this turn.
Output should contain a single number which represents the best result (minimum cost) that could be obtained by playing this Bulbo game.
Before 1. turn move to position 5
Before 2. turn move to position 9
Before 5. turn move to position 8" "2100  x1039"
575E "Spectator Riots" geometry "It\xe2\x80\x99s riot time on football stadium Ramacana! Raging fans have entered the field and the police find themselves in a difficult situation. The field can be represented as a square in the coordinate system defined by two diagonal vertices in (0,0) and (105, 105). The sides of that square are also considered to be inside the field, everything else is outside.
In the beginning, there are N fans on the field. For each fan we are given his speed, an integer vi as well as his integer coordinates (xi, yi). A fan with those coordinates might move and after one second he might be at any point (xi\xe2\x80\x89+\xe2\x80\x89p, yi\xe2\x80\x89+\xe2\x80\x89q) where 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|p|\xe2\x80\x89+\xe2\x80\x89|q|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89vi. p, q are both integers.
Points that go outside of the square that represents the field are excluded and all others have equal probability of being the location of that specific fan after one second.
Andrej, a young and promising police officer, has sent a flying drone to take a photo of the riot from above. The drone\xe2\x80\x99s camera works like this:
Your goal is to select those three points so that the expected number of fans seen on the photo is maximized. If there are more such selections, select those three points that give the circle with largest radius among them. If there are still more suitable selections, any one of them will be accepted. If your answer follows conditions above and radius of circle you return is smaller then the optimal one by 0.01, your output will be considered as correct.
No test will have optimal radius bigger than 1010.
The first line contains the number of fans on the field, N. The next N lines contain three integers: xi ,yi, vi. They are the x-coordinate, y-coordinate and speed of fan i at the beginning of the one second interval considered in the task.
You need to output the three points that camera needs to select. Print them in three lines, with every line containing the x-coordinate, then y-coordinate, separated by a single space. The order of points does not matter." "2800  x288"
575D Tablecity "constructive algorithms, implementation" "There was a big bank robbery in Tablecity. In order to catch the thief, the President called none other than Albert \xe2\x80\x93 Tablecity\xe2\x80\x99s Chief of Police. Albert does not know where the thief is located, but he does know how he moves.
Tablecity can be represented as 1000\xe2\x80\x89\xc3\x97\xe2\x80\x892 grid, where every cell represents one district. Each district has its own unique name \xe2\x80\x9c(X,\xe2\x80\x89Y)\xe2\x80\x9d, where X and Y are the coordinates of the district in the grid. The thief\xe2\x80\x99s movement is as 
Every hour the thief will leave the district (X,\xe2\x80\x89Y) he is currently hiding in, and move to one of the districts: (X\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89Y), (X\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89Y), (X\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89Y\xe2\x80\x89-\xe2\x80\x891), (X\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89Y\xe2\x80\x89+\xe2\x80\x891), (X\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89Y\xe2\x80\x89-\xe2\x80\x891), (X\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89Y\xe2\x80\x89+\xe2\x80\x891) as long as it exists in Tablecity. 
Below is an example of thief\xe2\x80\x99s possible movements if he is located in district (7,1):

Albert has enough people so that every hour he can pick any two districts in Tablecity and fully investigate them, making sure that if the thief is located in one of them, he will get caught. Albert promised the President that the thief will be caught in no more than 2015 hours and needs your help in order to achieve that.
There is no input for this problem. 
The first line of output contains integer N \xe2\x80\x93 duration of police search in hours. Each of the following N lines contains exactly 4 integers Xi1, Yi1, Xi2, Yi2 separated by spaces, that represent 2 districts (Xi1, Yi1), (Xi2, Yi2) which got investigated during i-th hour. Output is given in chronological order (i-th line contains districts investigated during i-th hour) and should guarantee that the thief is caught in no more than 2015 hours, regardless of thief\xe2\x80\x99s initial position and movement.
Let\'s consider the following output:
2
5 1 50 2
8 1 80 2
This output is not guaranteed to catch the thief and is not correct. It is given to you only to show the expected output format. There exists a combination of an initial position and a movement strategy such that the police will not catch the thief.
Consider the following initial position and thief\xe2\x80\x99s movement:
In the first hour, the thief is located in district (1,1). Police officers will search districts (5,1) and (50,2) and will not find him.
At the start of the second hour, the thief moves to district (2,2). Police officers will search districts (8,1) and (80,2) and will not find him.
Since there is no further investigation by the police, the thief escaped!" "1700  x1877"
575C Party "bitmasks, brute force, graph matchings" "Note the unusual memory limit for the problem.
People working in MDCS (Microsoft Development Center Serbia) like partying. They usually go to night clubs on Friday and Saturday.
There are N people working in MDCS and there are N clubs in the city. Unfortunately, if there is more than one Microsoft employee in night club, level of coolness goes infinitely high and party is over, so club owners will never let more than one Microsoft employee enter their club in the same week (just to be sure).
You are organizing night life for Microsoft employees and you have statistics about how much every employee likes Friday and Saturday parties for all clubs.
You need to match people with clubs maximizing overall sum of their happiness (they are happy as much as they like the club), while half of people should go clubbing on Friday and the other half on Saturday.
The first line contains integer N \xe2\x80\x94 number of employees in MDCS.
Then an N\xe2\x80\x89\xc3\x97\xe2\x80\x89N matrix follows, where element in i-th row and j-th column is an integer number that represents how much i-th person likes j-th club\xe2\x80\x99s Friday party.
Then another N\xe2\x80\x89\xc3\x97\xe2\x80\x89N matrix follows, where element in i-th row and j-th column is an integer number that represents how much i-th person likes j-th club\xe2\x80\x99s Saturday party.
Output should contain a single integer \xe2\x80\x94 maximum sum of happiness possible.
Here is how we matched people with clubs:
Friday: 1st person with 4th club (4 happiness) and 4th person with 1st club (4 happiness). 
Saturday: 2nd person with 3rd club (81 happiness) and 3rd person with 2nd club (78 happiness).
4+4+81+78 = 167" "2700  x223"
575B Bribes "dfs and similar, graphs, trees" "Ruritania is a country with a very badly maintained road network, which is not exactly good news for lorry drivers that constantly have to do deliveries. In fact, when roads are maintained, they become one-way. It turns out that it is sometimes impossible to get from one town to another in a legal way \xe2\x80\x93 however, we know that all towns are reachable, though illegally!
Fortunately for us, the police tend to be very corrupt and they will allow a lorry driver to break the rules and drive in the wrong direction provided they receive \xe2\x80\x98a small gift\xe2\x80\x99. There is one patrol car for every road and they will request 1000 Ruritanian dinars when a driver drives in the wrong direction. However, being greedy, every time a patrol car notices the same driver breaking the rule, they will charge double the amount of money they requested the previous time on that particular road.
Borna is a lorry driver that managed to figure out this bribing pattern. As part of his job, he has to make K stops in some towns all over Ruritania and he has to make these stops in a certain order. There are N towns (enumerated from 1 to N) in Ruritania and Borna\xe2\x80\x99s initial location is the capital city i.e. town 1. He happens to know which ones out of the N\xe2\x80\x89-\xe2\x80\x891 roads in Ruritania are currently unidirectional, but he is unable to compute the least amount of money he needs to prepare for bribing the police. Help Borna by providing him with an answer and you will be richly rewarded.
The first line contains N, the number of towns in Ruritania. The following N\xe2\x80\x89-\xe2\x80\x891 lines contain information regarding individual roads between towns. A road is represented by a tuple of integers (a,b,x), which are separated with a single whitespace character. The numbers a and b represent the cities connected by this particular road, and x is either 0 or 1: 0 means that the road is bidirectional, 1 means that only the a\xe2\x80\x89\xe2\x86\x92\xe2\x80\x89b direction is legal. The next line contains K, the number of stops Borna has to make. The final line of input contains K positive integers s1,\xe2\x80\x89\xe2\x80\xa6,\xe2\x80\x89sK: the towns Borna has to visit.
The output should contain a single number: the least amount of thousands of Ruritanian dinars Borna should allocate for bribes, modulo 109\xe2\x80\x89+\xe2\x80\x897.
Borna first takes the route 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x895 and has to pay 1000 dinars. After that, he takes the route 5\xe2\x80\x89\xe2\x86\x92\xe2\x80\x891\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893\xe2\x80\x89\xe2\x86\x92\xe2\x80\x894 and pays nothing this time. However, when he has to return via 4\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x891\xe2\x80\x89\xe2\x86\x92\xe2\x80\x895, he needs to prepare 3000 (1000+2000) dinars. Afterwards, getting to 2 via 5\xe2\x80\x89\xe2\x86\x92\xe2\x80\x891\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892 will cost him nothing. Finally, he doesn\'t even have to leave town 2 to get to 2, so there is no need to prepare any additional bribe money. Hence he has to prepare 4000 dinars in total." "2200  x1078"
575A Fibonotci "data structures, math, matrices" "Fibonotci sequence is an integer recursive sequence defined by the recurrence relation 
Sequence s is an infinite and almost cyclic sequence with a cycle of length N. A sequence s is called almost cyclic with a cycle of length N if , for i\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89N, except for a finite number of values si, for which  (i\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89N).
Following is an example of an almost cyclic sequence with a cycle of length 4: 
Notice that the only value of s for which the equality  does not hold is s6 (s6\xe2\x80\x89=\xe2\x80\x897 and s2\xe2\x80\x89=\xe2\x80\x898). You are given s0,\xe2\x80\x89s1,\xe2\x80\x89...sN\xe2\x80\x89-\xe2\x80\x891 and all the values of sequence s for which  (i\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89N).
Find .
The first line contains two numbers K and P. The second line contains a single number N. The third line contains N numbers separated by spaces, that represent the first N numbers of the sequence s. The fourth line contains a single number M, the number of values of sequence s for which . Each of the following M lines contains two numbers j and v, indicating that  and sj\xe2\x80\x89=\xe2\x80\x89v. All j-s are distinct.
Output should contain a single integer equal to ." "2700  x808"
574B "Bear and Three Musketeers" "brute force, dfs and similar, graphs, hashing" "Do you know a story about the three musketeers? Anyway, you will learn about its origins now.
Richelimakieu is a cardinal in the city of Bearis. He is tired of dealing with crime by himself. He needs three brave warriors to help him to fight against bad guys.
There are n warriors. Richelimakieu wants to choose three of them to become musketeers but it\'s not that easy. The most important condition is that musketeers must know each other to cooperate efficiently. And they shouldn\'t be too well known because they could be betrayed by old friends. For each musketeer his recognition is the number of warriors he knows, excluding other two musketeers.
Help Richelimakieu! Find if it is possible to choose three musketeers knowing each other, and what is minimum possible sum of their recognitions.
The first line contains two space-separated integers, n and m (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894000, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894000) \xe2\x80\x94 respectively number of warriors and number of pairs of warriors knowing each other.
i-th of the following m lines contains two space-separated integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi). Warriors ai and bi know each other. Each pair of warriors will be listed at most once.
If Richelimakieu can choose three musketeers, print the minimum possible sum of their recognitions. Otherwise, print ""-1"" (without the quotes).
In the first sample Richelimakieu should choose a triple 1, 2, 3. The first musketeer doesn\'t know anyone except other two musketeers so his recognition is 0. The second musketeer has recognition 1 because he knows warrior number 4. The third musketeer also has recognition 1 because he knows warrior 4. Sum of recognitions is 0\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89=\xe2\x80\x892.
The other possible triple is 2,\xe2\x80\x893,\xe2\x80\x894 but it has greater sum of recognitions, equal to 1\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89=\xe2\x80\x893.
In the second sample there is no triple of warriors knowing each other." "1500  x7824"
574A "Bear and Elections" "greedy, implementation" "Limak is a grizzly bear who desires power and adoration. He wants to win in upcoming elections and rule over the Bearland.
There are n candidates, including Limak. We know how many citizens are going to vote for each candidate. Now i-th candidate would get ai votes. Limak is candidate number 1. To win in elections, he must get strictly more votes than any other candidate.
Victory is more important than everything else so Limak decided to cheat. He will steal votes from his opponents by bribing some citizens. To bribe a citizen, Limak must give him or her one candy - citizens are bears and bears like candies. Limak doesn\'t have many candies and wonders - how many citizens does he have to bribe?
The first line contains single integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) - number of candidates.
The second line contains n space-separated integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) - number of votes for each candidate. Limak is candidate number 1.
Note that after bribing number of votes for some candidate might be zero or might be greater than 1000.
Print the minimum number of citizens Limak must bribe to have strictly more votes than any other candidate.
In the first sample Limak has 5 votes. One of the ways to achieve victory is to bribe 4 citizens who want to vote for the third candidate. Then numbers of votes would be 9,\xe2\x80\x891,\xe2\x80\x897,\xe2\x80\x892,\xe2\x80\x898 (Limak would have 9 votes). Alternatively, Limak could steal only 3 votes from the third candidate and 1 vote from the second candidate to get situation 9,\xe2\x80\x890,\xe2\x80\x898,\xe2\x80\x892,\xe2\x80\x898.
In the second sample Limak will steal 2 votes from each candidate. Situation will be 7,\xe2\x80\x896,\xe2\x80\x896,\xe2\x80\x896.
In the third sample Limak is a winner without bribing any citizen." "1200  x9097"
573E "Bear and Bowling" "data structures, greedy" "Limak is an old brown bear. He often goes bowling with his friends. Today he feels really good and tries to beat his own record!
For rolling a ball one gets a score \xe2\x80\x94 an integer (maybe negative) number of points. Score for i-th roll is multiplied by i and scores are summed up. So, for k rolls with scores s1,\xe2\x80\x89s2,\xe2\x80\x89...,\xe2\x80\x89sk, total score is . Total score is 0 if there were no rolls.
Limak made n rolls and got score ai for i-th of them. He wants to maximize his total score and he came up with an interesting idea. He will cancel some rolls, saying that something distracted him or there was a strong wind.
Limak is able to cancel any number of rolls, maybe even all or none of them. Total score is calculated as if there were only non-canceled rolls. Look at the sample tests for clarification. What maximum total score can Limak get?
The first line contains single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line contains n space-separated integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (|ai|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89107) - scores for Limak\'s rolls.
Print the maximum possible total score after choosing rolls to cancel.
In first sample Limak should cancel rolls with scores \xe2\x80\x89-\xe2\x80\x898 and \xe2\x80\x89-\xe2\x80\x893. Then he is left with three rolls with scores \xe2\x80\x89-\xe2\x80\x892,\xe2\x80\x890,\xe2\x80\x895. Total score is 1\xc2\xb7(\xe2\x80\x89-\xe2\x80\x892)\xe2\x80\x89+\xe2\x80\x892\xc2\xb70\xe2\x80\x89+\xe2\x80\x893\xc2\xb75\xe2\x80\x89=\xe2\x80\x8913.
In second sample Limak should cancel roll with score \xe2\x80\x89-\xe2\x80\x8950. Total score is 1\xc2\xb7(\xe2\x80\x89-\xe2\x80\x8910)\xe2\x80\x89+\xe2\x80\x892\xc2\xb720\xe2\x80\x89+\xe2\x80\x893\xc2\xb7(\xe2\x80\x89-\xe2\x80\x8930)\xe2\x80\x89+\xe2\x80\x894\xc2\xb740\xe2\x80\x89+\xe2\x80\x895\xc2\xb760\xe2\x80\x89=\xe2\x80\x89400." "3200  x1759"
573D "Bear and Cavalry" "data structures, divide and conquer, dp" "Would you want to fight against bears riding horses? Me neither.
Limak is a grizzly bear. He is general of the dreadful army of Bearland. The most important part of an army is cavalry of course.
Cavalry of Bearland consists of n warriors and n horses. i-th warrior has strength wi and i-th horse has strength hi. Warrior together with his horse is called a unit. Strength of a unit is equal to multiplied strengths of warrior and horse. Total strength of cavalry is equal to sum of strengths of all n units. Good assignment of warriors and horses makes cavalry truly powerful.
Initially, i-th warrior has i-th horse. You are given q queries. In each query two warriors swap their horses with each other.
General Limak must be ready for every possible situation. What if warriors weren\'t allowed to ride their own horses? After each query find the maximum possible strength of cavalry if we consider assignments of all warriors to all horses that no warrior is assigned to his own horse (it can be proven that for n\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x892 there is always at least one correct assignment).
Note that we can\'t leave a warrior without a horse.
The first line contains two space-separated integers, n and q (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930 000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910 000).
The second line contains n space-separated integers, w1,\xe2\x80\x89w2,\xe2\x80\x89...,\xe2\x80\x89wn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 strengths of warriors.
The third line contains n space-separated integers, h1,\xe2\x80\x89h2,\xe2\x80\x89...,\xe2\x80\x89hn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 strengths of horses.
Next q lines describe queries. i-th of them contains two space-separated integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi), indices of warriors who swap their horses with each other.
Print q lines with answers to queries. In i-th line print the maximum possible strength of cavalry after first i queries.
Clarification for the first sample:
Horses:   3  7  2    5  
After first query situation looks like the following:
Horses:   3  5  2    7  
We can get 1\xc2\xb72\xe2\x80\x89+\xe2\x80\x8910\xc2\xb73\xe2\x80\x89+\xe2\x80\x89100\xc2\xb77\xe2\x80\x89+\xe2\x80\x891000\xc2\xb75\xe2\x80\x89=\xe2\x80\x895732 (note that no hussar takes his own horse in this assignment).
After second query we get back to initial situation and optimal assignment is 1\xc2\xb72\xe2\x80\x89+\xe2\x80\x8910\xc2\xb73\xe2\x80\x89+\xe2\x80\x89100\xc2\xb75\xe2\x80\x89+\xe2\x80\x891000\xc2\xb77\xe2\x80\x89=\xe2\x80\x897532.
Clarification for the second sample. After first query:
Horses:    2  3 1 
Optimal assignment is 7\xc2\xb71\xe2\x80\x89+\xe2\x80\x8911\xc2\xb72\xe2\x80\x89+\xe2\x80\x895\xc2\xb73\xe2\x80\x89=\xe2\x80\x8944.
Then after second query 7\xc2\xb73\xe2\x80\x89+\xe2\x80\x8911\xc2\xb72\xe2\x80\x89+\xe2\x80\x895\xc2\xb71\xe2\x80\x89=\xe2\x80\x8948.
Finally 7\xc2\xb72\xe2\x80\x89+\xe2\x80\x8911\xc2\xb73\xe2\x80\x89+\xe2\x80\x895\xc2\xb71\xe2\x80\x89=\xe2\x80\x8952." "3000  x566"
573C "Bear and Drawing" "constructive algorithms, dfs and similar, trees" "Limak is a little bear who learns to draw. People usually start with houses, fences and flowers but why would bears do it? Limak lives in the forest and he decides to draw a tree.
Recall that tree is a connected graph consisting of n vertices and n\xe2\x80\x89-\xe2\x80\x891 edges.
Limak chose a tree with n vertices. He has infinite strip of paper with two parallel rows of dots. Little bear wants to assign vertices of a tree to some n distinct dots on a paper so that edges would intersect only at their endpoints \xe2\x80\x94 drawn tree must be planar. Below you can see one of correct drawings for the first sample test.
Is it possible for Limak to draw chosen tree?
The first line contains single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
Next n\xe2\x80\x89-\xe2\x80\x891 lines contain description of a tree. i-th of them contains two space-separated integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi) denoting an edge between vertices ai and bi. It\'s guaranteed that given description forms a tree.
Print ""Yes"" (without the quotes) if Limak can draw chosen tree. Otherwise, print ""No"" (without the quotes)." "2300  x971"
573B "Bear and Blocks" "binary search, data structures, dp, math" "Limak is a little bear who loves to play. Today he is playing by destroying block towers. He built n towers in a row. The i-th tower is made of hi identical blocks. For clarification see picture for the first sample.
Limak will repeat the following operation till everything is destroyed.
Block is called internal if it has all four neighbors, i.e. it has each side (top, left, down and right) adjacent to other block or to the floor. Otherwise, block is boundary. In one operation Limak destroys all boundary blocks. His paws are very fast and he destroys all those blocks at the same time.
Limak is ready to start. You task is to count how many operations will it take him to destroy all towers.
The first line contains single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line contains n space-separated integers h1,\xe2\x80\x89h2,\xe2\x80\x89...,\xe2\x80\x89hn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 sizes of towers.
Print the number of operations needed to destroy all towers.
The picture below shows all three operations for the first sample test. Each time boundary blocks are marked with red color. " "1600  x5949"
573A "Bear and Poker" "implementation, math, number theory" "Limak is an old brown bear. He often plays poker with his friends. Today they went to a casino. There are n players (including Limak himself) and right now all of them have bids on the table. i-th of them has bid with size ai dollars.
Each player can double his bid any number of times and triple his bid any number of times. The casino has a great jackpot for making all bids equal. Is it possible that Limak and his friends will win a jackpot?
First line of input contains an integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the number of players.
The second line contains n integer numbers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the bids of players.
Print ""Yes"" (without the quotes) if players can make their bids become equal, or ""No"" otherwise.
In the first sample test first and third players should double their bids twice, second player should double his bid once and fourth player should both double and triple his bid.
It can be shown that in the second sample test there is no way to make all bids equal." "1300  x16724"
572B "Order Book" "data structures, greedy, implementation, sortings" "In this task you need to process a set of stock exchange orders and use them to create order book.
An order is an instruction of some participant to buy or sell stocks on stock exchange. The order number i has price pi, direction di \xe2\x80\x94 buy or sell, and integer qi. This means that the participant is ready to buy or sell qi stocks at price pi for one stock. A value qi is also known as a volume of an order.
All orders with the same price p and direction d are merged into one aggregated order with price p and direction d. The volume of such order is a sum of volumes of the initial orders.
An order book is a list of aggregated orders, the first part of which contains sell orders sorted by price in descending order, the second contains buy orders also sorted by price in descending order.
An order book of depth s contains s best aggregated orders for each direction. A buy order is better if it has higher price and a sell order is better if it has lower price. If there are less than s aggregated orders for some direction then all of them will be in the final order book.
You are given n stock exhange orders. Your task is to print order book of depth s for these orders.
The input starts with two positive integers n and s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950), the number of orders and the book depth.
Next n lines contains a letter di (either \'B\' or \'S\'), an integer pi (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) and an integer qi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89qi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104) \xe2\x80\x94 direction, price and volume respectively. The letter \'B\' means buy, \'S\' means sell. The price of any sell order is higher than the price of any buy order.
Print no more than 2s lines with aggregated orders from order book of depth s. The output format for orders should be the same as in input.
Denote (x, y) an order with price x and volume y. There are 3 aggregated buy orders (10, 3), (20, 4), (25, 10) and two sell orders (50, 8), (40, 1) in the sample.
You need to print no more than two best orders for each direction, so you shouldn\'t print the order (10 3) having the worst price among buy orders." "1300  x7002"
572A Arrays sortings "You are given two arrays A and B consisting of integers, sorted in non-decreasing order. Check whether it is possible to choose k numbers in array A and choose m numbers in array B so that any number chosen in the first array is strictly less than any number chosen in the second array.
The first line contains two integers nA,\xe2\x80\x89nB (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89nA,\xe2\x80\x89nB\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), separated by a space \xe2\x80\x94 the sizes of arrays A and B, correspondingly.
The second line contains two integers k and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89nA,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89nB), separated by a space.
The third line contains nA numbers a1,\xe2\x80\x89a2,\xe2\x80\x89... anA (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89...\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89anA\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), separated by spaces \xe2\x80\x94 elements of array A.
The fourth line contains nB integers b1,\xe2\x80\x89b2,\xe2\x80\x89... bnB (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89...\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bnB\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), separated by spaces \xe2\x80\x94 elements of array B.
Print ""YES"" (without the quotes), if you can choose k numbers in array A and m numbers in array B so that any number chosen in array A was strictly less than any number chosen in array B. Otherwise, print ""NO"" (without the quotes).
In the first sample test you can, for example, choose numbers 1 and 2 from array A and number 3 from array B (1 < 3 and 2 < 3).
In the second sample test the only way to choose k elements in the first array and m elements in the second one is to choose all numbers in both arrays, but then not all the numbers chosen in A will be less than all the numbers chosen in B: ." "900  x16650"
571E "Geometric Progressions" math "Geometric progression with the first element a and common ratio b is a sequence of numbers a,\xe2\x80\x89ab,\xe2\x80\x89ab2,\xe2\x80\x89ab3,\xe2\x80\x89....
You are given n integer geometric progressions. Your task is to find the smallest integer x, that is the element of all the given progressions, or else state that such integer does not exist.
The first line contains integer (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of geometric progressions. 
Next n lines contain pairs of integers a,\xe2\x80\x89b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), that are the first element and the common ratio of the corresponding geometric progression.
If the intersection of all progressions is empty, then print \xe2\x80\x89-\xe2\x80\x891, otherwise print the remainder of the minimal positive integer number belonging to all progressions modulo 1000000007 (109\xe2\x80\x89+\xe2\x80\x897).
In the second sample test one of the progressions contains only powers of two, the other one contains only powers of three." "3200  x269"
571D Campus "binary search, data structures, dsu, trees" "Oscolcovo city has a campus consisting of n student dormitories, n universities and n military offices. Initially, the i-th dormitory belongs to the i-th university and is assigned to the i-th military office.
Life goes on and the campus is continuously going through some changes. The changes can be of four types:
Thus, at each moment of time each dormitory is assigned to exactly one university and one military office. Initially, all the dormitory are empty.
Your task is to process the changes that take place in the campus and answer the queries, how many people currently live in dormitory qj.
The first line contains two integers, n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105) \xe2\x80\x94 the number of dormitories and the number of queries, respectively.
Next m lines contain the queries, each of them is given in one of the following formats: 
In the i-th line print the answer to the i-th query asking the number of people in the dormitory.
Consider the first sample test: " "3100  x682"
571C "CNF 2" "constructive algorithms, dfs and similar, graphs, greedy" "\'In Boolean logic, a formula is in conjunctive normal form (CNF) or clausal normal form if it is a conjunction of clauses, where a clause is a disjunction of literals\' (cited from https://en.wikipedia.org/wiki/Conjunctive_normal_form)
In the other words, CNF is a formula of type , where & represents a logical ""AND"" (conjunction),  represents a logical ""OR"" (disjunction), and vij are some boolean variables or their negations. Each statement in brackets is called a clause, and vij are called literals.
You are given a CNF containing variables x1,\xe2\x80\x89...,\xe2\x80\x89xm and their negations. We know that each variable occurs in at most two clauses (with negation and without negation in total). Your task is to determine whether this CNF is satisfiable, that is, whether there are such values of variables where the CNF value is true. If CNF is satisfiable, then you also need to determine the values of the variables at which the CNF is true. 
It is guaranteed that each variable occurs at most once in each clause.
The first line contains integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of clauses and the number variables, correspondingly.
Next n lines contain the descriptions of each clause. The i-th line first contains first number ki (ki\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x891) \xe2\x80\x94 the number of literals in the i-th clauses. Then follow space-separated literals vij (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|vij|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m). A literal that corresponds to vij is x|vij| either with negation, if vij is negative, or without negation otherwise.
If CNF is not satisfiable, print a single line ""NO"" (without the quotes), otherwise print two strings: string ""YES"" (without the quotes), and then a string of m numbers zero or one \xe2\x80\x94 the values of variables in satisfying assignment in the order from x1 to xm.
In the first sample test formula is . One of possible answer is x1\xe2\x80\x89=\xe2\x80\x89TRUE,\xe2\x80\x89x2\xe2\x80\x89=\xe2\x80\x89TRUE." "2500  x669"
571B Minimization "dp, greedy, sortings" "You\'ve got array A, consisting of n integers and a positive integer k. Array A is indexed by integers from 1 to n.
You need to permute the array elements so that value 
The first line contains two integers n,\xe2\x80\x89k (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xc2\xb7105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(5000,\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891)). 
The second line contains n integers A[1],\xe2\x80\x89A[2],\xe2\x80\x89...,\xe2\x80\x89A[n] (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A[i]\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), separate by spaces \xe2\x80\x94 elements of the array A.
Print the minimum possible value of the sum described in the statement.
In the first test one of the optimal permutations is 1 4 2. 
In the second test the initial order is optimal. 
In the third test one of the optimal permutations is 2 3 4 4 3 5." "2000  x2655"
571A "Lengthening Sticks" "combinatorics, implementation, math" "You are given three sticks with positive integer lengths of a,\xe2\x80\x89b, and c centimeters. You can increase length of some of them by some positive integer number of centimeters (different sticks can be increased by a different length), but in total by at most l centimeters. In particular, it is allowed not to increase the length of any stick.
Determine the number of ways to increase the lengths of some sticks so that you can form from them a non-degenerate (that is, having a positive area) triangle. Two ways are considered different, if the length of some stick is increased by different number of centimeters in them.
The single line contains 4 integers a,\xe2\x80\x89b,\xe2\x80\x89c,\xe2\x80\x89l (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b,\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xc2\xb7105, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xc2\xb7105).
Print a single integer \xe2\x80\x94 the number of ways to increase the sizes of the sticks by the total of at most l centimeters, so that you can make a non-degenerate triangle from it.
In the first sample test you can either not increase any stick or increase any two sticks by 1 centimeter.
In the second sample test you can increase either the first or the second stick by one centimeter. Note that the triangle made from the initial sticks is degenerate and thus, doesn\'t meet the conditions." "2100  x2330"
570E "Pig and Palindromes" "combinatorics, dp" "Peppa the Pig was walking and walked into the forest. What a strange coincidence! The forest has the shape of a rectangle, consisting of n rows and m columns. We enumerate the rows of the rectangle from top to bottom with numbers from 1 to n, and the columns \xe2\x80\x94 from left to right with numbers from 1 to m. Let\'s denote the cell at the intersection of the r-th row and the c-th column as (r,\xe2\x80\x89c).
Initially the pig stands in cell (1,\xe2\x80\x891), and in the end she wants to be in cell (n,\xe2\x80\x89m). Since the pig is in a hurry to get home, she can go from cell (r,\xe2\x80\x89c), only to either cell (r\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89c) or (r,\xe2\x80\x89c\xe2\x80\x89+\xe2\x80\x891). She cannot leave the forest.
The forest, where the pig is, is very unusual. Some cells of the forest similar to each other, and some look very different. Peppa enjoys taking pictures and at every step she takes a picture of the cell where she is now. The path through the forest is considered to be beautiful if photographs taken on her way, can be viewed in both forward and in reverse order, showing the same sequence of photos. More formally, the line formed by the cells in order of visiting should be a palindrome (you can read a formal definition of a palindrome in the previous problem).
Count the number of beautiful paths from cell (1,\xe2\x80\x891) to cell (n,\xe2\x80\x89m). Since this number can be very large, determine the remainder after dividing it by 109\xe2\x80\x89+\xe2\x80\x897.
The first line contains two integers n,\xe2\x80\x89m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500) \xe2\x80\x94 the height and width of the field.
Each of the following n lines contains m lowercase English letters identifying the types of cells of the forest. Identical cells are represented by identical letters, different cells are represented by different letters.
Print a single integer \xe2\x80\x94 the number of beautiful paths modulo 109\xe2\x80\x89+\xe2\x80\x897.
Picture illustrating possibilities for the sample test. 
 
 " "2300  x1909"
570D "Tree Requests" "binary search, bitmasks, constructive algorithms, dfs and similar, graphs, trees" "Roman planted a tree consisting of n vertices. Each vertex contains a lowercase English letter. Vertex 1 is the root of the tree, each of the n\xe2\x80\x89-\xe2\x80\x891 remaining vertices has a parent in the tree. Vertex is connected with its parent by an edge. The parent of vertex i is vertex pi, the parent index is always less than the index of the vertex (i.e., pi\xe2\x80\x89<\xe2\x80\x89i).
The depth of the vertex is the number of nodes on the path from the root to v along the edges. In particular, the depth of the root is equal to 1.
We say that vertex u is in the subtree of vertex v, if we can get from u to v, moving from the vertex to the parent. In particular, vertex v is in its subtree.
Roma gives you m queries, the i-th of which consists of two numbers vi, hi. Let\'s consider the vertices in the subtree vi located at depth hi. Determine whether you can use the letters written at these vertices to make a string that is a palindrome. The letters that are written in the vertexes, can be rearranged in any order to make a palindrome, but all letters should be used.
The first line contains two integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500\xe2\x80\x89000) \xe2\x80\x94 the number of nodes in the tree and queries, respectively.
The following line contains n\xe2\x80\x89-\xe2\x80\x891 integers p2,\xe2\x80\x89p3,\xe2\x80\x89...,\xe2\x80\x89pn \xe2\x80\x94 the parents of vertices from the second to the n-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89<\xe2\x80\x89i).
The next line contains n lowercase English letters, the i-th of these letters is written on vertex i.
Next m lines describe the queries, the i-th line contains two numbers vi, hi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89vi,\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the vertex and the depth that appear in the i-th query.
Print m lines. In the i-th line print ""Yes"" (without the quotes), if in the i-th query you can make a palindrome from the letters written on the vertices, otherwise print ""No"" (without the quotes).
String s is a palindrome if reads the same from left to right and from right to left. In particular, an empty string is a palindrome.
Clarification for the sample test.
In the first query there exists only a vertex 1 satisfying all the conditions, we can form a palindrome ""z"".
In the second query vertices 5 and 6 satisfy condititions, they contain letters ""\xd1\x81"" and ""d"" respectively. It is impossible to form a palindrome of them.
In the third query there exist no vertices at depth 1 and in subtree of 4. We may form an empty palindrome.
In the fourth query there exist no vertices in subtree of 6 at depth 1. We may form an empty palindrome.
In the fifth query there vertices 2, 3 and 4 satisfying all conditions above, they contain letters ""a"", ""c"" and ""c"". We may form a palindrome ""cac""." "2200  x7314"
570C Replacement "constructive algorithms, data structures, implementation" "Daniel has a string s, consisting of lowercase English letters and period signs (characters \'.\'). Let\'s define the operation of replacement as the following sequence of steps: find a substring "".."" (two consecutive periods) in string s, of all occurrences of the substring let\'s choose the first one, and replace this substring with string ""."". In other words, during the replacement operation, the first two consecutive periods are replaced by one. If string s contains no two consecutive periods, then nothing happens.
Let\'s define f(s) as the minimum number of operations of replacement to perform, so that the string does not have any two consecutive periods left.
You need to process m queries, the i-th results in that the character at position xi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) of string s is assigned value ci. After each operation you have to calculate and output the value of f(s).
Help Daniel to process all queries.
The first line contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300\xe2\x80\x89000) the length of the string and the number of queries.
The second line contains string s, consisting of n lowercase English letters and period signs.
The following m lines contain the descriptions of queries. The i-th line contains integer xi and ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ci \xe2\x80\x94 a lowercas English letter or a period sign), describing the query of assigning symbol ci to position xi.
Print m numbers, one per line, the i-th of these numbers must be equal to the value of f(s) after performing the i-th assignment.
Note to the first sample test (replaced periods are enclosed in square brackets).
The original string is "".b..bz...."".
Note to the second sample test.
The original string is "".cc.""." "1600  x9185"
570B "Simple Game" "constructive algorithms, games, greedy, implementation, math" "One day Misha and Andrew were playing a very simple game. First, each player chooses an integer in the range from 1 to n. Let\'s assume that Misha chose number m, and Andrew chose number a.
Then, by using a random generator they choose a random integer c in the range between 1 and n (any integer from 1 to n is chosen with the same probability), after which the winner is the player, whose number was closer to c. The boys agreed that if m and a are located on the same distance from c, Misha wins.
Andrew wants to win very much, so he asks you to help him. You know the number selected by Misha, and number n. You need to determine which value of a Andrew must choose, so that the probability of his victory is the highest possible.
More formally, you need to find such integer a (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), that the probability that  is maximal, where c is the equiprobably chosen integer from 1 to n (inclusive).
The first line contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the range of numbers in the game, and the number selected by Misha respectively.
Print a single number \xe2\x80\x94 such value a, that probability that Andrew wins is the highest. If there are multiple such values, print the minimum of them.
In the first sample test: Andrew wins if c is equal to 2 or 3. The probability that Andrew wins is 2\xe2\x80\x89/\xe2\x80\x893. If Andrew chooses a\xe2\x80\x89=\xe2\x80\x893, the probability of winning will be 1\xe2\x80\x89/\xe2\x80\x893. If a\xe2\x80\x89=\xe2\x80\x891, the probability of winning is 0.
In the second sample test: Andrew wins if c is equal to 1 and 2. The probability that Andrew wins is 1\xe2\x80\x89/\xe2\x80\x892. For other choices of a the probability of winning is less." "1300  x16194"
570A Elections implementation "The country of Byalechinsk is running elections involving n candidates. The country consists of m cities. We know how many people in each city voted for each candidate.
The electoral system in the country is pretty unusual. At the first stage of elections the votes are counted for each city: it is assumed that in each city won the candidate who got the highest number of votes in this city, and if several candidates got the maximum number of votes, then the winner is the one with a smaller index.
At the second stage of elections the winner is determined by the same principle over the cities: the winner of the elections is the candidate who won in the maximum number of cities, and among those who got the maximum number of cities the winner is the one with a smaller index.
Determine who will win the elections.
The first line of the input contains two integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of candidates and of cities, respectively.
Each of the next m lines contains n non-negative integers, the j-th number in the i-th line aij (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89aij\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) denotes the number of votes for candidate j in city i.
It is guaranteed that the total number of people in all the cities does not exceed 109.
Print a single number \xe2\x80\x94 the index of the candidate who won the elections. The candidates are indexed starting from one.
Note to the first sample test. At the first stage city 1 chosen candidate 3, city 2 chosen candidate 2, city 3 chosen candidate 2. The winner is candidate 2, he gained 2 votes.
Note to the second sample test. At the first stage in city 1 candidates 1 and 2 got the same maximum number of votes, but candidate 1 has a smaller index, so the city chose candidate 1. City 2 chosen candidate 3. City 3 chosen candidate 1, due to the fact that everyone has the same number of votes, and 1 has the smallest index. City 4 chosen the candidate 3. On the second stage the same number of cities chose candidates 1 and 3. The winner is candidate 1, the one with the smaller index." "1100  x13911"
569B Inventory "greedy, math" "Companies always have a lot of equipment, furniture and other things. All of them should be tracked. To do this, there is an inventory number assigned with each item. It is much easier to create a database by using those numbers and keep the track of everything.
During an audit, you were surprised to find out that the items are not numbered sequentially, and some items even share the same inventory number! There is an urgent need to fix it. You have chosen to make the numbers of the items sequential, starting with 1. Changing a number is quite a time-consuming process, and you would like to make maximum use of the current numbering.
You have been given information on current inventory numbers for n items in the company. Renumber items so that their inventory numbers form a permutation of numbers from 1 to n by changing the number of as few items as possible. Let us remind you that a set of n numbers forms a permutation if all the numbers are in the range from 1 to n, and no two numbers are equal.
The first line contains a single integer n \xe2\x80\x94 the number of items (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line contains n numbers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the initial inventory numbers of the items.
Print n numbers \xe2\x80\x94 the final inventory numbers of the items in the order they occur in the input. If there are multiple possible answers, you may print any of them.
In the first test the numeration is already a permutation, so there is no need to change anything.
In the second test there are two pairs of equal numbers, in each pair you need to replace one number.
In the third test you need to replace 2 by 1, as the numbering should start from one." "1200  x7111"
569A Music "implementation, math" "Little Lesha loves listening to music via his smartphone. But the smartphone doesn\'t have much memory, so Lesha listens to his favorite songs in a well-known social network InTalk.
Unfortunately, internet is not that fast in the city of Ekaterinozavodsk and the song takes a lot of time to download. But Lesha is quite impatient. The song\'s duration is T seconds. Lesha downloads the first S seconds of the song and plays it. When the playback reaches the point that has not yet been downloaded, Lesha immediately plays the song from the start (the loaded part of the song stays in his phone, and the download is continued from the same place), and it happens until the song is downloaded completely and Lesha listens to it to the end. For q seconds of real time the Internet allows you to download q\xe2\x80\x89-\xe2\x80\x891 seconds of the track.
Tell Lesha, for how many times he will start the song, including the very first start.
The single line contains three integers T,\xe2\x80\x89S,\xe2\x80\x89q (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89S\xe2\x80\x89<\xe2\x80\x89T\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
Print a single integer \xe2\x80\x94 the number of times the song will be restarted.
In the first test, the song is played twice faster than it is downloaded, which means that during four first seconds Lesha reaches the moment that has not been downloaded, and starts the song again. After another two seconds, the song is downloaded completely, and thus, Lesha starts the song twice.
In the second test, the song is almost downloaded, and Lesha will start it only once.
In the third sample test the download finishes and Lesha finishes listening at the same moment. Note that song isn\'t restarted in this case." "1500  x4814"
568E "Longest Increasing Subsequence" "data structures, dp" "Note that the memory limit in this problem is less than usual.
Let\'s consider an array consisting of positive integers, some positions of which contain gaps.
We have a collection of numbers that can be used to fill the gaps. Each number from the given collection can be used at most once.
Your task is to determine such way of filling gaps that the longest increasing subsequence in the formed array has a maximum size.
The first line contains a single integer n \xe2\x80\x94 the length of the array (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line contains n space-separated integers \xe2\x80\x94 the elements of the sequence. A gap is marked as ""-1"". The elements that are not gaps are positive integers not exceeding 109. It is guaranteed that the sequence contains 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000 gaps.
The third line contains a single positive integer m \xe2\x80\x94 the number of elements to fill the gaps (k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The fourth line contains m positive integers \xe2\x80\x94 the numbers to fill gaps. Each number is a positive integer not exceeding 109. Some numbers may be equal. 
Print n space-separated numbers in a single line \xe2\x80\x94 the resulting sequence. If there are multiple possible answers, print any of them.
In the first sample there are no gaps, so the correct answer is the initial sequence.
In the second sample there is only one way to get an increasing subsequence of length 3.
In the third sample answer ""4 2"" would also be correct. Note that only strictly increasing subsequences are considered.
In the fifth sample the answer ""1 1 1 2"" is not considered correct, as number 1 can be used in replacing only two times." "3000  x599"
568D "Sign Posts" "brute force, geometry, math" "One Khanate had a lot of roads and very little wood. Riding along the roads was inconvenient, because the roads did not have road signs indicating the direction to important cities.
The Han decided that it\'s time to fix the issue, and ordered to put signs on every road. The Minister of Transport has to do that, but he has only k signs. Help the minister to solve his problem, otherwise the poor guy can lose not only his position, but also his head.
More formally, every road in the Khanate is a line on the Oxy plane, given by an equation of the form Ax\xe2\x80\x89+\xe2\x80\x89By\xe2\x80\x89+\xe2\x80\x89C\xe2\x80\x89=\xe2\x80\x890 (A and B are not equal to 0 at the same time). You are required to determine whether you can put signs in at most k points so that each road had at least one sign installed.
The input starts with two positive integers n, k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895)
Next n lines contain three integers each, Ai,\xe2\x80\x89Bi,\xe2\x80\x89Ci, the coefficients of the equation that determines the road (|Ai|,\xe2\x80\x89|Bi|,\xe2\x80\x89|Ci|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, Ai2\xe2\x80\x89+\xe2\x80\x89Bi2\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x890).
It is guaranteed that no two roads coincide.
If there is no solution, print ""NO"" in the single line (without the quotes).
Otherwise, print in the first line ""YES"" (without the quotes).
In the second line print a single number m (m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k) \xe2\x80\x94 the number of used signs. In the next m lines print the descriptions of their locations.
Description of a location of one sign is two integers v,\xe2\x80\x89u. If u and v are two distinct integers between 1 and n, we assume that sign is at the point of intersection of roads number v and u. If u\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891, and v is an integer between 1 and n, then the sign is on the road number v in the point not lying on any other road. In any other case the description of a sign will be assumed invalid and your answer will be considered incorrect. In case if v\xe2\x80\x89=\xe2\x80\x89u, or if v and u are the numbers of two non-intersecting roads, your answer will also be considered incorrect.
The roads are numbered starting from 1 in the order in which they follow in the input.
Note that you do not have to minimize m, but it shouldn\'t be more than k.
In the first test all three roads intersect at point (0,0).
In the second test all three roads form a triangle and there is no way to place one sign so that it would stand on all three roads at once." "2800  x308"
568C "New Language" "2-sat, greedy" "Living in Byteland was good enough to begin with, but the good king decided to please his subjects and to introduce a national language. He gathered the best of wise men, and sent an expedition to faraway countries, so that they would find out all about how a language should be designed.
After some time, the wise men returned from the trip even wiser. They locked up for six months in the dining room, after which they said to the king: ""there are a lot of different languages, but almost all of them have letters that are divided into vowels and consonants; in a word, vowels and consonants must be combined correctly.""
There are very many rules, all of them have exceptions, but our language will be deprived of such defects! We propose to introduce a set of formal rules of combining vowels and consonants, and include in the language all the words that satisfy them.
The rules of composing words are:
You are given some string s of length n, it is not necessarily a correct word of the new language. Among all the words of the language that lexicographically not smaller than the string s, find the minimal one in lexicographic order.
The first line contains a single line consisting of letters \'V\' (Vowel) and \'C\' (Consonant), determining which letters are vowels and which letters are consonants. The length of this string l is the size of the alphabet of the new language (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8926). The first l letters of the English alphabet are used as the letters of the alphabet of the new language. If the i-th character of the string equals to \'V\', then the corresponding letter is a vowel, otherwise it is a consonant.
The second line contains two integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894n(n\xe2\x80\x89-\xe2\x80\x891)) \xe2\x80\x94 the number of letters in a single word and the number of rules, correspondingly.
Next m lines describe m rules of the language in the following format: pos1,\xe2\x80\x89t1,\xe2\x80\x89pos2,\xe2\x80\x89t2 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pos1,\xe2\x80\x89pos2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, pos1\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89pos2,  \'V\', \'C\' }).
The last line contains string s of length n, consisting of the first l small letters of the English alphabet.
It is guaranteed that no two rules are the same.
Print a smallest word of a language that is lexicographically not smaller than s. If such words does not exist (for example, if the language has no words at all), print ""-1"" (without the quotes).
In the first test word ""aa"" is not a word of the language, but word ""ab"" is.
In the second test out of all four possibilities only word ""bb"" is not a word of a language, but all other words are lexicographically less, so there is no answer.
In the third test, due to the last rule, ""abac"" doesn\'t belong to the language (""a"" is a vowel, ""c"" is a consonant). The only word with prefix ""ab"" that meets the given rules is ""abaa"". But it is less than ""abac"", so the answer will be ""acaa""" "2600  x867"
568B "Symmetric and Transitive" "combinatorics, dp, math" "Little Johnny has recently learned about set theory. Now he is studying binary relations. You\'ve probably heard the term ""equivalence relation"". These relations are very important in many areas of mathematics. For example, the equality of the two numbers is an equivalence relation.
A set \xcf\x81 of pairs (a,\xe2\x80\x89b) of elements of some set A is called a binary relation on set A. For two elements a and b of the set A we say that they are in relation \xcf\x81, if pair , in this case we use a notation .
Binary relation is equivalence relation, if:
Little Johnny is not completely a fool and he noticed that the first condition is not necessary! Here is his ""proof"":
Take any two elements, a and b. If , then  (according to property (2)), which means  (according to property (3)).
It\'s very simple, isn\'t it? However, you noticed that Johnny\'s ""proof"" is wrong, and decided to show him a lot of examples that prove him wrong.
Here\'s your task: count the number of binary relations over a set of size n such that they are symmetric, transitive, but not an equivalence relations (i.e. they are not reflexive).
Since their number may be very large (not 0, according to Little Johnny), print the remainder of integer division of this number by 109\xe2\x80\x89+\xe2\x80\x897.
A single line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894000).
In a single line print the answer to the problem modulo 109\xe2\x80\x89+\xe2\x80\x897.
If n\xe2\x80\x89=\xe2\x80\x891 there is only one such relation \xe2\x80\x94 an empty one, i.e. . In other words, for a single element x of set A the following is hold: .
If n\xe2\x80\x89=\xe2\x80\x892 there are three such relations. Let\'s assume that set A consists of two elements, x and y. Then the valid relations are , \xcf\x81\xe2\x80\x89=\xe2\x80\x89{(x,\xe2\x80\x89x)}, \xcf\x81\xe2\x80\x89=\xe2\x80\x89{(y,\xe2\x80\x89y)}. It is easy to see that the three listed binary relations are symmetric and transitive relations, but they are not equivalence relations." "1900  x2250"
568A "Primes or Palindromes?" "brute force, implementation, math, number theory" "Rikhail Mubinchik believes that the current definition of prime numbers is obsolete as they are too complex and unpredictable. A palindromic number is another matter. It is aesthetically pleasing, and it has a number of remarkable properties. Help Rikhail to convince the scientific community in this!
Let us remind you that a number is called prime if it is integer larger than one, and is not divisible by any positive integer other than itself and one.
Rikhail calls a number a palindromic if it is integer, positive, and its decimal representation without leading zeros is a palindrome, i.e. reads the same from left to right and right to left.
One problem with prime numbers is that there are too many of them. Let\'s introduce the following notation: \xcf\x80(n) \xe2\x80\x94 the number of primes no larger than n, rub(n) \xe2\x80\x94 the number of palindromic numbers no larger than n. Rikhail wants to prove that there are a lot more primes than palindromic ones.
He asked you to solve the following problem: for a given value of the coefficient A find the maximum n, such that \xcf\x80(n)\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A\xc2\xb7rub(n).
The input consists of two positive integers p, q, the numerator and denominator of the fraction that is the value of A (, ).
If such maximum number exists, then print it. Otherwise, print ""Palindromic tree is better than splay tree"" (without the quotes)." "1600  x5117"
567F Mausoleum dp "King of Berland Berl IV has recently died. Hail Berl V! As a sign of the highest achievements of the deceased king the new king decided to build a mausoleum with Berl IV\'s body on the main square of the capital.
The mausoleum will be constructed from 2n blocks, each of them has the shape of a cuboid. Each block has the bottom base of a 1\xe2\x80\x89\xc3\x97\xe2\x80\x891 meter square. Among the blocks, exactly two of them have the height of one meter, exactly two have the height of two meters, ..., exactly two have the height of n meters.
The blocks are arranged in a row without spacing one after the other. Of course, not every arrangement of blocks has the form of a mausoleum. In order to make the given arrangement in the form of the mausoleum, it is necessary that when you pass along the mausoleum, from one end to the other, the heights of the blocks first were non-decreasing (i.e., increasing or remained the same), and then \xe2\x80\x94 non-increasing (decrease or remained unchanged). It is possible that any of these two areas will be omitted. For example, the following sequences of block height meet this requirement:
Suddenly, k more requirements appeared. Each of the requirements has the form: ""h[xi] signi h[yi]"", where h[t] is the height of the t-th block, and a signi is one of the five possible signs: \'=\' (equals), \'<\' (less than), \'>\' (more than), \'<=\' (less than or equals), \'>=\' (more than or equals). Thus, each of the k additional requirements is given by a pair of indexes xi, yi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892n) and sign signi.
Find the number of possible ways to rearrange the blocks so that both the requirement about the shape of the mausoleum (see paragraph 3) and the k additional requirements were met.
The first line of the input contains integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8935, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of pairs of blocks and the number of additional requirements.
Next k lines contain listed additional requirements, one per line in the format ""xi signi yi"" (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892n), and the sign is on of the list of the five possible signs.
Print the sought number of ways." "2400  x586"
567E "President and Roads" "dfs and similar, graphs, hashing, shortest paths" "Berland has n cities, the capital is located in city s, and the historic home town of the President is in city t (s\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89t). The cities are connected by one-way roads, the travel time for each of the road is a positive integer.
Once a year the President visited his historic home town t, for which his motorcade passes along some path from s to t (he always returns on a personal plane). Since the president is a very busy man, he always chooses the path from s to t, along which he will travel the fastest.
The ministry of Roads and Railways wants to learn for each of the road: whether the President will definitely pass through it during his travels, and if not, whether it is possible to repair it so that it would definitely be included in the shortest path from the capital to the historic home town of the President. Obviously, the road can not be repaired so that the travel time on it was less than one. The ministry of Berland, like any other, is interested in maintaining the budget, so it wants to know the minimum cost of repairing the road. Also, it is very fond of accuracy, so it repairs the roads so that the travel time on them is always a positive integer.
The first lines contain four integers n, m, s and t (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105; 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105; 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s,\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the number of cities and roads in Berland, the numbers of the capital and of the Presidents\' home town (s\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89t).
Next m lines contain the roads. Each road is given as a group of three integers ai,\xe2\x80\x89bi,\xe2\x80\x89li (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n; ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi; 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the cities that are connected by the i-th road and the time needed to ride along it. The road is directed from city ai to city bi.
The cities are numbered from 1 to n. Each pair of cities can have multiple roads between them. It is guaranteed that there is a path from s to t along the roads.
Print m lines. The i-th line should contain information about the i-th road (the roads are numbered in the order of appearance in the input).
If the president will definitely ride along it during his travels, the line must contain a single word ""YES"" (without the quotes).
Otherwise, if the i-th road can be repaired so that the travel time on it remains positive and then president will definitely ride along it, print space-separated word ""CAN"" (without the quotes), and the minimum cost of repairing.
If we can\'t make the road be such that president will definitely ride along it, print ""NO"" (without the quotes).
The cost of repairing the road is the difference between the time needed to ride along it before and after the repairing.
In the first sample president initially may choose one of the two following ways for a ride: 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x894\xe2\x80\x89\xe2\x86\x92\xe2\x80\x895\xe2\x80\x89\xe2\x86\x92\xe2\x80\x896 or 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893\xe2\x80\x89\xe2\x86\x92\xe2\x80\x895\xe2\x80\x89\xe2\x86\x92\xe2\x80\x896." "2200  x1769"
567D "One-Dimensional Battle Ships" "binary search, data structures, greedy, sortings" "Alice and Bob love playing one-dimensional battle ships. They play on the field in the form of a line consisting of n square cells (that is, on a 1\xe2\x80\x89\xc3\x97\xe2\x80\x89n table).
At the beginning of the game Alice puts k ships on the field without telling their positions to Bob. Each ship looks as a 1\xe2\x80\x89\xc3\x97\xe2\x80\x89a rectangle (that is, it occupies a sequence of a consecutive squares of the field). The ships cannot intersect and even touch each other.
After that Bob makes a sequence of ""shots"". He names cells of the field and Alice either says that the cell is empty (""miss""), or that the cell belongs to some ship (""hit"").
But here\'s the problem! Alice like to cheat. May be that is why she responds to each Bob\'s move with a ""miss"". 
Help Bob catch Alice cheating \xe2\x80\x94 find Bob\'s first move, such that after it you can be sure that Alice cheated.
The first line of the input contains three integers: n, k and a (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89k,\xe2\x80\x89a\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the size of the field, the number of the ships and the size of each ship. It is guaranteed that the n, k and a are such that you can put k ships of size a on the field, so that no two ships intersect or touch each other.
The second line contains integer m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the number of Bob\'s moves.
The third line contains m distinct integers x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xm, where xi is the number of the cell where Bob made the i-th shot. The cells are numbered from left to right from 1 to n.
Print a single integer \xe2\x80\x94 the number of such Bob\'s first move, after which you can be sure that Alice lied. Bob\'s moves are numbered from 1 to m in the order the were made. If the sought move doesn\'t exist, then print ""-1""." "1700  x4816"
567C "Geometric Progression" "binary search, data structures, dp" "Polycarp loves geometric progressions very much. Since he was only three years old, he loves only the progressions of length three. He also has a favorite integer k and a sequence a, consisting of n integers.
He wants to know how many subsequences of length three can be selected from a, so that they form a geometric progression with common ratio k.
A subsequence of length three is a combination of three such indexes i1,\xe2\x80\x89i2,\xe2\x80\x89i3, that 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i1\xe2\x80\x89<\xe2\x80\x89i2\xe2\x80\x89<\xe2\x80\x89i3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n. That is, a subsequence of length three are such groups of three elements that are not necessarily consecutive in the sequence, but their indexes are strictly increasing.
A geometric progression with common ratio k is a sequence of numbers of the form b\xc2\xb7k0,\xe2\x80\x89b\xc2\xb7k1,\xe2\x80\x89...,\xe2\x80\x89b\xc2\xb7kr\xe2\x80\x89-\xe2\x80\x891.
Polycarp is only three years old, so he can not calculate this number himself. Help him to do it.
The first line of the input contains two integers, n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105), showing how many numbers Polycarp\'s sequence has and his favorite number.
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 elements of the sequence.
Output a single number \xe2\x80\x94 the number of ways to choose a subsequence of length three, such that it forms a geometric progression with a common ratio k.
In the first sample test the answer is four, as any of the two 1s can be chosen as the first element, the second element can be any of the 2s, and the third element of the subsequence must be equal to 4." "1700  x9515"
567B "Berland National Library" implementation "Berland National Library has recently been built in the capital of Berland. In addition, in the library you can take any of the collected works of Berland leaders, the library has a reading room.
Today was the pilot launch of an automated reading room visitors\' accounting system! The scanner of the system is installed at the entrance to the reading room. It records the events of the form ""reader entered room"", ""reader left room"". Every reader is assigned a registration number during the registration procedure at the library \xe2\x80\x94 it\'s a unique integer from 1 to 106. Thus, the system logs events of two forms:
The first launch of the system was a success, it functioned for some period of time, and, at the time of its launch and at the time of its shutdown, the reading room may already have visitors.
Significant funds of the budget of Berland have been spent on the design and installation of the system. Therefore, some of the citizens of the capital now demand to explain the need for this system and the benefits that its implementation will bring. Now, the developers of the system need to urgently come up with reasons for its existence.
Help the system developers to find the minimum possible capacity of the reading room (in visitors) using the log of the system available to you.
The first line contains a positive integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of records in the system log. Next follow n events from the system journal in the order in which the were made. Each event was written on a single line and looks as ""+ ri"" or ""- ri"", where ri is an integer from 1 to 106, the registration number of the visitor (that is, distinct visitors always have distinct registration numbers).
It is guaranteed that the log is not contradictory, that is, for every visitor the types of any of his two consecutive events are distinct. Before starting the system, and after stopping the room may possibly contain visitors.
Print a single integer \xe2\x80\x94 the minimum possible capacity of the reading room.
In the first sample test, the system log will ensure that at some point in the reading room were visitors with registration numbers 1, 1200 and 12001. More people were not in the room at the same time based on the log. Therefore, the answer to the test is 3." "1300  x8455"
567A "Lineland Mail" "greedy, implementation" "All cities of Lineland are located on the Ox coordinate axis. Thus, each city is associated with its position xi \xe2\x80\x94 a coordinate on the Ox axis. No two cities are located at a single point.
Lineland residents love to send letters to each other. A person may send a letter only if the recipient lives in another city (because if they live in the same city, then it is easier to drop in).
Strange but true, the cost of sending the letter is exactly equal to the distance between the sender\'s city and the recipient\'s city.
For each city calculate two values \xe2\x80\x8b\xe2\x80\x8bmini and maxi, where mini is the minimum cost of sending a letter from the i-th city to some other city, and maxi is the the maximum cost of sending a letter from the i-th city to some other city
The first line of the input contains integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of cities in Lineland. The second line contains the sequence of n distinct integers x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), where xi is the x-coordinate of the i-th city. All the xi\'s are distinct and follow in ascending order.
Print n lines, the i-th line must contain two integers mini,\xe2\x80\x89maxi, separated by a space, where mini is the minimum cost of sending a letter from the i-th city, and maxi is the maximum cost of sending a letter from the i-th city." "900  x32463"
566G "Max and Min" geometry "Two kittens, Max and Min, play with a pair of non-negative integers x and y. As you can guess from their names, kitten Max loves to maximize and kitten Min loves to minimize. As part of this game Min wants to make sure that both numbers, x and y became negative at the same time, and kitten Max tries to prevent him from doing so.
Each kitten has a set of pairs of integers available to it. Kitten Max has n pairs of non-negative integers (ai,\xe2\x80\x89bi) (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), and kitten Min has m pairs of non-negative integers (cj,\xe2\x80\x89dj) (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m). As kitten Max makes a move, it can take any available pair (ai,\xe2\x80\x89bi) and add ai to x and bi to y, and kitten Min can take any available pair (cj,\xe2\x80\x89dj) and subtract cj from x and dj from y. Each kitten can use each pair multiple times during distinct moves.
Max moves first. Kitten Min is winning if at some moment both numbers a, b are negative simultaneously. Otherwise, the winner of the game is kitten Max. Determine which kitten wins if both of them play optimally.
The first line contains two integers, n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of pairs of numbers available to Max and Min, correspondingly.
The second line contains two integers x, y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the initial values of numbers with which the kittens are playing.
Next n lines contain the pairs of numbers ai,\xe2\x80\x89bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the pairs available to Max.
The last m lines contain pairs of numbers cj,\xe2\x80\x89dj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89cj,\xe2\x80\x89dj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the pairs available to Min.
Print \xc2\xabMax\xc2\xbb (without the quotes), if kitten Max wins, or ""Min"" (without the quotes), if kitten Min wins.
In the first test from the statement Min can respond to move (2,\xe2\x80\x893) by move (3,\xe2\x80\x8910), and to move (3,\xe2\x80\x892) by move (10,\xe2\x80\x893). Thus, for each pair of Max and Min\'s moves the values of both numbers x and y will strictly decrease, ergo, Min will win sooner or later.
In the second sample test after each pair of Max and Min\'s moves both numbers x and y only increase, thus none of them will become negative." "2500  x336"
566F "Clique in the Divisibility Graph" "dp, math, number theory" "As you must know, the maximum clique problem in an arbitrary graph is NP-hard. Nevertheless, for some graphs of specific kinds it can be solved effectively.
Just in case, let us remind you that a clique in a non-directed graph is a subset of the vertices of a graph, such that any two vertices of this subset are connected by an edge. In particular, an empty set of vertexes and a set consisting of a single vertex, are cliques.
Let\'s define a divisibility graph for a set of positive integers A\xe2\x80\x89=\xe2\x80\x89{a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an} as follows. The vertices of the given graph are numbers from set A, and two numbers ai and aj (i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j) are connected by an edge if and only if either ai is divisible by aj, or aj is divisible by ai.
You are given a set of non-negative integers A. Determine the size of a maximum clique in a divisibility graph for set A.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), that sets the size of set A.
The second line contains n distinct positive integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 elements of subset A. The numbers in the line follow in the ascending order.
Print a single number \xe2\x80\x94 the maximum size of a clique in a divisibility graph for set A.
In the first sample test a clique of size 3 is, for example, a subset of vertexes {3,\xe2\x80\x896,\xe2\x80\x8918}. A clique of a larger size doesn\'t exist in this graph." "1500  x3649"
566E "Restoring Map" "bitmasks, constructive algorithms, trees" "Archaeologists found some information about an ancient land of Treeland. We know for sure that the Treeland consisted of n cities connected by the n\xe2\x80\x89-\xe2\x80\x891 road, such that you can get from each city to any other one along the roads. However, the information about the specific design of roads in Treeland has been lost. The only thing that the archaeologists can use is the preserved information about near cities.
Two cities of Treeland were called near, if it were possible to move from one city to the other one by moving through at most two roads. Also, a city is considered near to itself. During the recent excavations archaeologists found a set of n notes, each of them represents a list of cities, near to some of the n cities of the country. However, unfortunately, none of the found records lets you understand in what order the cities go in the list and for which city in the list the near to it cities were listed. 
Help the archaeologists and restore any variant of the map of Treeland that meets the found information.
The first line contains integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the number of cities in the country. 
Next n lines describe the found lists of near cities. Each list starts from number k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), representing the number of cities in the list followed by k city numbers. All numbers in each list are distinct.
It is guaranteed that the given information determines at least one possible road map.
Print n\xe2\x80\x89-\xe2\x80\x891 pairs of numbers representing the roads of the country. The i-th line must contain two integers ai,\xe2\x80\x89bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi), showing that there is a road between cities ai and bi.
The answer you print must satisfy the description of close cities from the input. You may print the roads of the countries in any order. The cities that are connected by a road may also be printed in any order.
If there are multiple good answers, you may print any of them." "3200  x637"
566D "Restructuring Company" "data structures, dsu" "Even the most successful company can go through a crisis period when you have to make a hard decision \xe2\x80\x94 to restructure, discard and merge departments, fire employees and do other unpleasant stuff. Let\'s consider the following model of a company.
There are n people working for the Large Software Company. Each person belongs to some department. Initially, each person works on his own project in his own department (thus, each company initially consists of n departments, one person in each).
However, harsh times have come to the company and the management had to hire a crisis manager who would rebuild the working process in order to boost efficiency. Let\'s use team(person) to represent a team where person person works. A crisis manager can make decisions of two types:
At that the crisis manager can sometimes wonder whether employees x and y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) work at the same department.
Help the crisis manager and answer all of his queries.
The first line of the input contains two integers n and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500\xe2\x80\x89000) \xe2\x80\x94 the number of the employees of the company and the number of queries the crisis manager has.
Next q lines contain the queries of the crisis manager. Each query looks like type x y, where . If type\xe2\x80\x89=\xe2\x80\x891 or type\xe2\x80\x89=\xe2\x80\x892, then the query represents the decision of a crisis manager about merging departments of the first and second types respectively. If type\xe2\x80\x89=\xe2\x80\x893, then your task is to determine whether employees x and y work at the same department. Note that x can be equal to y in the query of any type.
For each question of type 3 print ""YES"" or ""NO"" (without the quotes), depending on whether the corresponding people work in the same department." "1900  x3294"
566C "Logistical Questions" "dfs and similar, divide and conquer, trees" "Some country consists of n cities, connected by a railroad network. The transport communication of the country is so advanced that the network consists of a minimum required number of (n\xe2\x80\x89-\xe2\x80\x891) bidirectional roads (in the other words, the graph of roads is a tree). The i-th road that directly connects cities ai and bi, has the length of li kilometers.
The transport network is served by a state transporting company FRR (Fabulous Rail Roads). In order to simplify the price policy, it offers a single ride fare on the train. In order to follow the route of length t kilometers, you need to pay  burles. Note that it is forbidden to split a long route into short segments and pay them separately (a special railroad police, or RRP, controls that the law doesn\'t get violated).
A Large Software Company decided to organize a programming tournament. Having conducted several online rounds, the company employees determined a list of finalists and sent it to the logistical department to find a place where to conduct finals. The Large Software Company can easily organize the tournament finals in any of the n cities of the country, so the the main factor in choosing the city for the last stage of the tournament is the total cost of buying tickets for all the finalists. We know that the i-th city of the country has wi cup finalists living there.
Help the company employees find the city such that the total cost of travel of all the participants to it is minimum.
The first line of the input contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the number of cities in the country.
The next line contains n integers w1,\xe2\x80\x89w2,\xe2\x80\x89...,\xe2\x80\x89wn (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108) \xe2\x80\x94 the number of finalists living in each city of the country.
Next (n\xe2\x80\x89-\xe2\x80\x891) lines contain the descriptions of the railroad, the i-th line contains three integers, ai, bi, li (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000).
Print two numbers \xe2\x80\x94 an integer f that is the number of the optimal city to conduct the competition, and the real number c, equal to the minimum total cost of transporting all the finalists to the competition. Your answer will be considered correct if two conditions are fulfilled at the same time: 
If there are multiple answers, you are allowed to print any of them.
In the sample test an optimal variant of choosing a city to conduct the finals of the competition is 3. At such choice the cost of conducting is  burles.
In the second sample test, whatever city you would choose, you will need to pay for the transport for five participants, so you will need to pay  burles for each one of them." "3000  x763"
566B "Replicating Processes" "constructive algorithms, greedy" "A Large Software Company develops its own social network. Analysts have found that during the holidays, major sporting events and other significant events users begin to enter the network more frequently, resulting in great load increase on the infrastructure.
As part of this task, we assume that the social network is 4n processes running on the n servers. All servers are absolutely identical machines, each of which has a volume of RAM of 1 GB = 1024 MB (1). Each process takes 100 MB of RAM on the server. At the same time, the needs of maintaining the viability of the server takes about 100 more megabytes of RAM. Thus, each server may have up to 9 different processes of social network.
Now each of the n servers is running exactly 4 processes. However, at the moment of peak load it is sometimes necessary to replicate the existing 4n processes by creating 8n new processes instead of the old ones. More formally, there is a set of replication rules, the i-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894n) of which has the form of ai\xe2\x80\x89\xe2\x86\x92\xe2\x80\x89(bi,\xe2\x80\x89ci), where ai, bi and ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi,\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) are the numbers of servers. This means that instead of an old process running on server ai, there should appear two new copies of the process running on servers bi and ci. The two new replicated processes can be on the same server (i.e., bi may be equal to ci) or even on the same server where the original process was (i.e. ai may be equal to bi or ci). During the implementation of the rule ai\xe2\x80\x89\xe2\x86\x92\xe2\x80\x89(bi,\xe2\x80\x89ci) first the process from the server ai is destroyed, then appears a process on the server bi, then appears a process on the server ci.
There is a set of 4n rules, destroying all the original 4n processes from n servers, and creating after their application 8n replicated processes, besides, on each of the n servers will be exactly 8 processes. However, the rules can only be applied consecutively, and therefore the amount of RAM of the servers imposes limitations on the procedure for the application of the rules.
According to this set of rules determine the order in which you want to apply all the 4n rules so that at any given time the memory of each of the servers contained at most 9 processes (old and new together), or tell that it is impossible.
The first line of the input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930\xe2\x80\x89000) \xe2\x80\x94 the number of servers of the social network.
Next 4n lines contain the rules of replicating processes, the i-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894n) of these lines as form ai,\xe2\x80\x89bi,\xe2\x80\x89ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi,\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and describes rule ai\xe2\x80\x89\xe2\x86\x92\xe2\x80\x89(bi,\xe2\x80\x89ci).
It is guaranteed that each number of a server from 1 to n occurs four times in the set of all ai, and eight times among a set that unites all bi and ci.
If the required order of performing rules does not exist, print ""NO"" (without the quotes).
Otherwise, print in the first line ""YES"" (without the quotes), and in the second line \xe2\x80\x94 a sequence of 4n numbers from 1 to 4n, giving the numbers of the rules in the order they are applied. The sequence should be a permutation, that is, include each number from 1 to 4n exactly once.
If there are multiple possible variants, you are allowed to print any of them.
(1) To be extremely accurate, we should note that the amount of server memory is 1 GiB = 1024 MiB and processes require 100 MiB RAM where a gibibyte (GiB) is the amount of RAM of 230 bytes and a mebibyte (MiB) is the amount of RAM of 220 bytes.
In the first sample test the network uses two servers, each of which initially has four launched processes. In accordance with the rules of replication, each of the processes must be destroyed and twice run on another server. One of the possible answers is given in the statement: after applying rules 1 and 2 the first server will have 2 old running processes, and the second server will have 8 (4 old and 4 new) processes. After we apply rules 5 and 6, both servers will have 6 running processes (2 old and 4 new). After we apply rules 3 and 7, both servers will have 7 running processes (1 old and 6 new), and after we apply rules 4 and 8, each server will have 8 running processes. At no time the number of processes on a single server exceeds 9.
In the second sample test the network uses three servers. On each server, three processes are replicated into two processes on the same server, and the fourth one is replicated in one process for each of the two remaining servers. As a result of applying rules 2,\xe2\x80\x893,\xe2\x80\x894,\xe2\x80\x896,\xe2\x80\x897,\xe2\x80\x898,\xe2\x80\x8910,\xe2\x80\x8911,\xe2\x80\x8912 each server would have 7 processes (6 old and 1 new), as a result of applying rules 1,\xe2\x80\x895,\xe2\x80\x899 each server will have 8 processes. At no time the number of processes on a single server exceeds 9." "2600  x273"
566A "Matching Names" "dfs and similar, strings, trees" "Teachers of one programming summer school decided to make a surprise for the students by giving them names in the style of the ""Hobbit"" movie. Each student must get a pseudonym maximally similar to his own name. The pseudonym must be a name of some character of the popular saga and now the teachers are busy matching pseudonyms to student names.
There are n students in a summer school. Teachers chose exactly n pseudonyms for them. Each student must get exactly one pseudonym corresponding to him. Let us determine the relevance of a pseudonym b to a student with name a as the length of the largest common prefix a and b. We will represent such value as . Then we can determine the quality of matching of the pseudonyms to students as a sum of relevances of all pseudonyms to the corresponding students.
Find the matching between students and pseudonyms with the maximum quality.
The first line contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of students in the summer school.
Next n lines contain the name of the students. Each name is a non-empty word consisting of lowercase English letters. Some names can be repeating.
The last n lines contain the given pseudonyms. Each pseudonym is a non-empty word consisting of small English letters. Some pseudonyms can be repeating.
The total length of all the names and pseudonyms doesn\'t exceed 800\xe2\x80\x89000 characters.
In the first line print the maximum possible quality of matching pseudonyms to students.
In the next n lines describe the optimal matching. Each line must have the form a b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), that means that the student who was number a in the input, must match to the pseudonym number b in the input.
The matching should be a one-to-one correspondence, that is, each student and each pseudonym should occur exactly once in your output. If there are several optimal answers, output any.
The first test from the statement the match looks as follows: " "2300  x921"
560B "Gerald is into Art" "constructive algorithms, implementation" "Gerald bought two very rare paintings at the Sotheby\'s auction and he now wants to hang them on the wall. For that he bought a special board to attach it to the wall and place the paintings on the board. The board has shape of an a1\xe2\x80\x89\xc3\x97\xe2\x80\x89b1 rectangle, the paintings have shape of a a2\xe2\x80\x89\xc3\x97\xe2\x80\x89b2 and a3\xe2\x80\x89\xc3\x97\xe2\x80\x89b3 rectangles.
Since the paintings are painted in the style of abstract art, it does not matter exactly how they will be rotated, but still, one side of both the board, and each of the paintings must be parallel to the floor. The paintings can touch each other and the edges of the board, but can not overlap or go beyond the edge of the board. Gerald asks whether it is possible to place the paintings on the board, or is the board he bought not large enough?
The first line contains two space-separated numbers a1 and b1 \xe2\x80\x94 the sides of the board. Next two lines contain numbers a2,\xe2\x80\x89b2,\xe2\x80\x89a3 and b3 \xe2\x80\x94 the sides of the paintings. All numbers ai,\xe2\x80\x89bi in the input are integers and fit into the range from 1 to 1000.
If the paintings can be placed on the wall, print ""YES"" (without the quotes), and if they cannot, print ""NO"" (without the quotes).
That\'s how we can place the pictures in the first test:

And that\'s how we can do it in the third one.
" "1200  x7943"
560A "Currency System in Geraldion" "implementation, sortings" "A magic island Geraldion, where Gerald lives, has its own currency system. It uses banknotes of several values. But the problem is, the system is not perfect and sometimes it happens that Geraldionians cannot express a certain sum of money with any set of banknotes. Of course, they can use any number of banknotes of each value. Such sum is called unfortunate. Gerald wondered: what is the minimum unfortunate sum?
The first line contains number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the number of values of the banknotes that used in Geraldion. 
The second line contains n distinct space-separated numbers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the values of the banknotes.
Print a single line \xe2\x80\x94 the minimum unfortunate sum. If there are no unfortunate sums, print \xe2\x80\x89-\xe2\x80\x891." "1000  x17214"
559E "Gerald and Path" "dp, sortings" "The main walking trail in Geraldion is absolutely straight, and it passes strictly from the north to the south, it is so long that no one has ever reached its ends in either of the two directions. The Geraldionians love to walk on this path at any time, so the mayor of the city asked the Herald to illuminate this path with a few spotlights. The spotlights have already been delivered to certain places and Gerald will not be able to move them. Each spotlight illuminates a specific segment of the path of the given length, one end of the segment is the location of the spotlight, and it can be directed so that it covers the segment to the south or to the north of spotlight.
The trail contains a monument to the mayor of the island, and although you can walk in either directions from the monument, no spotlight is south of the monument.
You are given the positions of the spotlights and their power. Help Gerald direct all the spotlights so that the total length of the illuminated part of the path is as much as possible.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of spotlights. Each of the n lines contains two space-separated integers, ai and li (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108). Number ai shows how much further the i-th spotlight to the north, and number li shows the length of the segment it illuminates.
It is guaranteed that all the ai\'s are distinct.
Print a single integer \xe2\x80\x94 the maximum total length of the illuminated part of the path." "3000  x944"
559D Randomizer "combinatorics, geometry, probabilities" "Gerald got tired of playing board games with the usual six-sided die, and he bought a toy called Randomizer. It functions as follows.
A Randomizer has its own coordinate plane on which a strictly convex polygon is painted, the polygon is called a basic polygon. If you shake a Randomizer, it draws some nondegenerate (i.e. having a non-zero area) convex polygon with vertices at some vertices of the basic polygon. The result of the roll (more precisely, the result of the shaking) is considered to be the number of points with integer coordinates, which were strictly inside (the points on the border are not considered) the selected polygon. Now Gerald is wondering: what is the expected result of shaking the Randomizer?
During the shaking the Randomizer considers all the possible non-degenerate convex polygons with vertices at the vertices of the basic polygon. Let\'s assume that there are k versions of the polygons. Then the Randomizer chooses each of them with probability .
The first line of the input contains a single integer n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of vertices of the basic polygon. 
Next n lines contain the coordinates of the vertices of the basic polygon. The i-th of these lines contain two integers xi and yi (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the coordinates of the i-th vertex of the polygon. The vertices are given in the counter-clockwise order.
Print the sought expected value with absolute or relative error at most 10\xe2\x80\x89-\xe2\x80\x899.
A polygon is called strictly convex if it is convex and no its vertices lie on the same line.
Let\'s assume that a random variable takes values x1,\xe2\x80\x89...,\xe2\x80\x89xn with probabilities p1,\xe2\x80\x89...,\xe2\x80\x89pn, correspondingly. Then the expected value of this variable equals to ." "2800  x441"
559C "Gerald and Giant Chess" "combinatorics, dp, math, number theory" "Giant chess is quite common in Geraldion. We will not delve into the rules of the game, we\'ll just say that the game takes place on an h\xe2\x80\x89\xc3\x97\xe2\x80\x89w field, and it is painted in two colors, but not like in chess. Almost all cells of the field are white and only some of them are black. Currently Gerald is finishing a game of giant chess against his friend Pollard. Gerald has almost won, and the only thing he needs to win is to bring the pawn from the upper left corner of the board, where it is now standing, to the lower right corner. Gerald is so confident of victory that he became interested, in how many ways can he win?
The pawn, which Gerald has got left can go in two ways: one cell down or one cell to the right. In addition, it can not go to the black cells, otherwise the Gerald still loses. There are no other pawns or pieces left on the field, so that, according to the rules of giant chess Gerald moves his pawn until the game is over, and Pollard is just watching this process.
The first line of the input contains three integers: h,\xe2\x80\x89w,\xe2\x80\x89n \xe2\x80\x94 the sides of the board and the number of black cells (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89h,\xe2\x80\x89w\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000). 
Next n lines contain the description of black cells. The i-th of these lines contains numbers ri,\xe2\x80\x89ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89h,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w) \xe2\x80\x94 the number of the row and column of the i-th cell.
It is guaranteed that the upper left and lower right cell are white and all cells in the description are distinct.
Print a single line \xe2\x80\x94 the remainder of the number of ways to move Gerald\'s pawn from the upper left to the lower right corner modulo 109\xe2\x80\x89+\xe2\x80\x897." "2200  x6561"
559B "Equivalent Strings" "divide and conquer, hashing, sortings, strings" "Today on a lecture about strings Gerald learned a new definition of string equivalency. Two strings a and b of equal length are called equivalent in one of the two cases: 
As a home task, the teacher gave two strings to his students and asked to determine if they are equivalent.
Gerald has already completed this home task. Now it\'s your turn!
The first two lines of the input contain two strings given by the teacher. Each of them has the length from 1 to 200\xe2\x80\x89000 and consists of lowercase English letters. The strings have the same length.
Print ""YES"" (without the quotes), if these two strings are equivalent, and ""NO"" (without the quotes) otherwise.
In the first sample you should split the first string into strings ""aa"" and ""ba"", the second one \xe2\x80\x94 into strings ""ab"" and ""aa"". ""aa"" is equivalent to ""aa""; ""ab"" is equivalent to ""ba"" as ""ab"" = ""a"" + ""b"", ""ba"" = ""b"" + ""a"".
In the second sample the first string can be splitted into strings ""aa"" and ""bb"", that are equivalent only to themselves. That\'s why string ""aabb"" is equivalent only to itself and to string ""bbaa""." "1700  x10695"
559A "Gerald's Hexagon" "brute force, geometry, math" "Gerald got a very curious hexagon for his birthday. The boy found out that all the angles of the hexagon are equal to . Then he measured the length of its sides, and found that each of them is equal to an integer number of centimeters. There the properties of the hexagon ended and Gerald decided to draw on it.
He painted a few lines, parallel to the sides of the hexagon. The lines split the hexagon into regular triangles with sides of 1 centimeter. Now Gerald wonders how many triangles he has got. But there were so many of them that Gerald lost the track of his counting. Help the boy count the triangles.
The first and the single line of the input contains 6 space-separated integers a1,\xe2\x80\x89a2,\xe2\x80\x89a3,\xe2\x80\x89a4,\xe2\x80\x89a5 and a6 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the lengths of the sides of the hexagons in centimeters in the clockwise order. It is guaranteed that the hexagon with the indicated properties and the exactly such sides exists.
Print a single integer \xe2\x80\x94 the number of triangles with the sides of one 1 centimeter, into which the hexagon is split.
This is what Gerald\'s hexagon looks like in the first sample:

And that\'s what it looks like in the second sample:
" "1600  x10466"
558E "A Simple Task" "data structures, sortings, strings" "This task is very simple. Given a string S of length n and q queries each query is on the format i j k which means sort the substring consisting of the characters from i to j in non-decreasing order if k\xe2\x80\x89=\xe2\x80\x891 or in non-increasing order if k\xe2\x80\x89=\xe2\x80\x890.
Output the final string after applying the queries.
The first line will contain two integers n,\xe2\x80\x89q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950\xe2\x80\x89000), the length of the string and the number of queries respectively. 
Next line contains a string S itself. It contains only lowercase English letters.
Next q lines will contain three integers each i,\xe2\x80\x89j,\xe2\x80\x89k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ).
Output one line, the string S after applying the queries.
First sample test explanation:




" "2300  x6143"
558D "Guess Your Way Out! II" "data structures, implementation, sortings" "Amr bought a new video game ""Guess Your Way Out! II"". The goal of the game is to find an exit from the maze that looks like a perfect binary tree of height h. The player is initially standing at the root of the tree and the exit from the tree is located at some leaf node.
Let\'s index all the nodes of the tree such that 
The level of a node is defined as 1 for a root, or 1 + level of parent of the node otherwise. The vertices of the level h are called leaves. The exit to the maze is located at some leaf node n, the player doesn\'t know where the exit is so he has to guess his way out! 
In the new version of the game the player is allowed to ask questions on the format ""Does the ancestor(exit,\xe2\x80\x89i) node number belong to the range [L,\xe2\x80\x89R]?"". Here ancestor(v,\xe2\x80\x89i) is the ancestor of a node v that located in the level i. The game will answer with ""Yes"" or ""No"" only. The game is designed such that it doesn\'t always answer correctly, and sometimes it cheats to confuse the player!.
Amr asked a lot of questions and got confused by all these answers, so he asked you to help him. Given the questions and its answers, can you identify whether the game is telling contradictory information or not? If the information is not contradictory and the exit node can be determined uniquely, output its number. If the information is not contradictory, but the exit node isn\'t defined uniquely, output that the number of questions is not sufficient. Otherwise output that the information is contradictory.
The first line contains two integers h,\xe2\x80\x89q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89h\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the height of the tree and the number of questions respectively.
The next q lines will contain four integers each i,\xe2\x80\x89L,\xe2\x80\x89R,\xe2\x80\x89ans (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89h, 2i\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89L\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89R\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892i\xe2\x80\x89-\xe2\x80\x891, ), representing a question as described in the statement with its answer (ans\xe2\x80\x89=\xe2\x80\x891 if the answer is ""Yes"" and ans\xe2\x80\x89=\xe2\x80\x890 if the answer is ""No"").
If the information provided by the game is contradictory output ""Game cheated!"" without the quotes.
Else if you can uniquely identify the exit to the maze output its index. 
Otherwise output ""Data not sufficient!"" without the quotes.
Node u is an ancestor of node v if and only if 
In the first sample test there are 4 leaf nodes 4,\xe2\x80\x895,\xe2\x80\x896,\xe2\x80\x897. The first question says that the node isn\'t in the range [4,\xe2\x80\x896] so the exit is node number 7.
In the second sample test there are 8 leaf nodes. After the first question the exit is in the range [10,\xe2\x80\x8914]. After the second and the third questions only node number 14 is correct. Check the picture below to fully understand.
" "2300  x1150"
558C "Amr and Chemistry" "brute force, graphs, greedy, math, shortest paths" "Amr loves Chemistry, and specially doing experiments. He is preparing for a new interesting experiment.
Amr has n different types of chemicals. Each chemical i has an initial volume of ai liters. For this experiment, Amr has to mix all the chemicals together, but all the chemicals volumes must be equal first. So his task is to make all the chemicals volumes equal.
To do this, Amr can do two different kind of operations. 
Suppose that each chemical is contained in a vessel of infinite volume. Now Amr wonders what is the minimum number of operations required to make all the chemicals volumes equal?
The first line contains one number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the number of chemicals.
The second line contains n space separated integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), representing the initial volume of the i-th chemical in liters.
Output one integer the minimum number of operations required to make all the chemicals volumes equal.
In the first sample test, the optimal solution is to divide the second chemical volume by two, and multiply the third chemical volume by two to make all the volumes equal 4.
In the second sample test, the optimal solution is to divide the first chemical volume by two, and divide the second and the third chemical volumes by two twice to make all the volumes equal 1." "1900  x3995"
558B "Amr and The Large Array" implementation "Amr has got a large array of size n. Amr doesn\'t like large arrays so he intends to make it smaller.
Amr doesn\'t care about anything in the array except the beauty of it. The beauty of the array is defined to be the maximum number of times that some number occurs in this array. He wants to choose the smallest subsegment of this array such that the beauty of it will be the same as the original array.
Help Amr by choosing the smallest subsegment possible.
The first line contains one number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the size of the array.
The second line contains n integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), representing elements of the array.
Output two integers l,\xe2\x80\x89r (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), the beginning and the end of the subsegment chosen respectively.
If there are several possible answers you may output any of them. 
A subsegment B of an array A from l to r is an array of size r\xe2\x80\x89-\xe2\x80\x89l\xe2\x80\x89+\xe2\x80\x891 where Bi\xe2\x80\x89=\xe2\x80\x89Al\xe2\x80\x89+\xe2\x80\x89i\xe2\x80\x89-\xe2\x80\x891 for all 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89-\xe2\x80\x89l\xe2\x80\x89+\xe2\x80\x891" "1300  x7866"
558A "Lala Land and Apple Trees" "brute force, implementation, sortings" "Amr lives in Lala Land. Lala Land is a very beautiful country that is located on a coordinate line. Lala Land is famous with its apple trees growing everywhere.
Lala Land has exactly n apple trees. Tree number i is located in a position xi and has ai apples growing on it. Amr wants to collect apples from the apple trees. Amr currently stands in x\xe2\x80\x89=\xe2\x80\x890 position. At the beginning, he can choose whether to go right or left. He\'ll continue in his direction until he meets an apple tree he didn\'t visit before. He\'ll take all of its apples and then reverse his direction, continue walking in this direction until he meets another apple tree he didn\'t visit before and so on. In the other words, Amr reverses his direction when visiting each new apple tree. Amr will stop collecting apples when there are no more trees he didn\'t visit in the direction he is facing.
What is the maximum number of apples he can collect?
The first line contains one number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), the number of apple trees in Lala Land.
The following n lines contains two integers each xi, ai (\xe2\x80\x89-\xe2\x80\x89105\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, xi\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x890, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), representing the position of the i-th tree and number of apples on it.
It\'s guaranteed that there is at most one apple tree at each coordinate. It\'s guaranteed that no tree grows in point 0.
Output the maximum number of apples Amr can collect.
In the first sample test it doesn\'t matter if Amr chose at first to go left or right. In both cases he\'ll get all the apples.
In the second sample test the optimal solution is to go left to x\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891, collect apples from there, then the direction will be reversed, Amr has to go to x\xe2\x80\x89=\xe2\x80\x891, collect apples from there, then the direction will be reversed and Amr goes to the final tree x\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x892.
In the third sample test the optimal solution is to go right to x\xe2\x80\x89=\xe2\x80\x891, collect apples from there, then the direction will be reversed and Amr will not be able to collect anymore apples because there are no apple trees to his left." "1100  x10372"
557E "Ann and Half-Palindrome" "data structures, dp, graphs, string suffix structures, strings, trees" "Tomorrow Ann takes the hardest exam of programming where she should get an excellent mark. 
On the last theoretical class the teacher introduced the notion of a half-palindrome. 
String t is a half-palindrome, if for all the odd positions i () the following condition is held: ti\xe2\x80\x89=\xe2\x80\x89t|t|\xe2\x80\x89-\xe2\x80\x89i\xe2\x80\x89+\xe2\x80\x891, where |t| is the length of string t if positions are indexed from 1. For example, strings ""abaa"", ""a"", ""bb"", ""abbbaa"" are half-palindromes and strings ""ab"", ""bba"" and ""aaabaa"" are not.
Ann knows that on the exam she will get string s, consisting only of letters a and b, and number k. To get an excellent mark she has to find the k-th in the lexicographical order string among all substrings of s that are half-palyndromes. Note that each substring in this order is considered as many times as many times it occurs in s.
The teachers guarantees that the given number k doesn\'t exceed the number of substrings of the given string that are half-palindromes.
Can you cope with this problem?
The first line of the input contains string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000), consisting only of characters \'a\' and \'b\', where |s| is the length of string s.
The second line contains a positive integer k \xe2\x80\x94  the lexicographical number of the requested string among all the half-palindrome substrings of the given string s. The strings are numbered starting from one. 
It is guaranteed that number k doesn\'t exceed the number of substrings of the given string that are half-palindromes.
Print a substring of the given string that is the k-th in the lexicographical order of all substrings of the given string that are half-palindromes.
By definition, string a\xe2\x80\x89=\xe2\x80\x89a1a2... an is lexicographically less than string b\xe2\x80\x89=\xe2\x80\x89b1b2... bm, if either a is a prefix of b and doesn\'t coincide with b, or there exists such i, that a1\xe2\x80\x89=\xe2\x80\x89b1,\xe2\x80\x89a2\xe2\x80\x89=\xe2\x80\x89b2,\xe2\x80\x89... ai\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89=\xe2\x80\x89bi\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89ai\xe2\x80\x89<\xe2\x80\x89bi.
In the first sample half-palindrome substrings are the following strings \xe2\x80\x94 a, a, a, a, aa, aba, abaa, abba, abbabaa, b, b, b, b, baab, bab, bb, bbab, bbabaab (the list is given in the lexicographical order). " "2300  x1089"
557D "Vitaly and Cycle" "combinatorics, dfs and similar, graphs, math" "After Vitaly was expelled from the university, he became interested in the graph theory.
Vitaly especially liked the cycles of an odd length in which each vertex occurs at most once.
Vitaly was wondering how to solve the following problem. You are given an undirected graph consisting of n vertices and m edges, not necessarily connected, without parallel edges and loops. You need to find t \xe2\x80\x94 the minimum number of edges that must be added to the given graph in order to form a simple cycle of an odd length, consisting of more than one vertex. Moreover, he must find w \xe2\x80\x94 the number of ways to add t edges in order to form a cycle of an odd length (consisting of more than one vertex). It is prohibited to add loops or parallel edges.
Two ways to add edges to the graph are considered equal if they have the same sets of added edges.
Since Vitaly does not study at the university, he asked you to help him with this task.
The first line of the input contains two integers n and m ( \xe2\x80\x94 the number of vertices in the graph and the number of edges in the graph.
Next m lines contain the descriptions of the edges of the graph, one edge per line. Each edge is given by a pair of integers ai, bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the vertices that are connected by the i-th edge. All numbers in the lines are separated by a single space.
It is guaranteed that the given graph doesn\'t contain any loops and parallel edges. The graph isn\'t necessarily connected.
Print in the first line of the output two space-separated integers t and w \xe2\x80\x94 the minimum number of edges that should be added to the graph to form a simple cycle of an odd length consisting of more than one vertex where each vertex occurs at most once, and the number of ways to do this.
The simple cycle is a cycle that doesn\'t contain any vertex twice." "2000  x2212"
557C "Arthur and Table" "brute force, data structures, dp, greedy, math, sortings" "Arthur has bought a beautiful big table into his new flat. When he came home, Arthur noticed that the new table is unstable.
In total the table Arthur bought has n legs, the length of the i-th leg is li.
Arthur decided to make the table stable and remove some legs. For each of them Arthur determined number di \xe2\x80\x94 the amount of energy that he spends to remove the i-th leg.
A table with k legs is assumed to be stable if there are more than half legs of the maximum length. For example, to make a table with 5 legs stable, you need to make sure it has at least three (out of these five) legs of the maximum length. Also, a table with one leg is always stable and a table with two legs is stable if and only if they have the same lengths.
Your task is to help Arthur and count the minimum number of energy units Arthur should spend on making the table stable.
The first line of the input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the initial number of legs in the table Arthur bought.
The second line of the input contains a sequence of n integers li (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), where li is equal to the length of the i-th leg of the table.
The third line of the input contains a sequence of n integers di (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200), where di is the number of energy units that Arthur spends on removing the i-th leg off the table.
Print a single integer \xe2\x80\x94 the minimum number of energy units that Arthur needs to spend in order to make the table stable." "1900  x4024"
557B "Pasha and Tea" "constructive algorithms, implementation, math, sortings" "Pasha decided to invite his friends to a tea party. For that occasion, he has a large teapot with the capacity of w milliliters and 2n tea cups, each cup is for one of Pasha\'s friends. The i-th cup can hold at most ai milliliters of water.
It turned out that among Pasha\'s friends there are exactly n boys and exactly n girls and all of them are going to come to the tea party. To please everyone, Pasha decided to pour the water for the tea as follows:
In the other words, each boy should get two times more water than each girl does.
Pasha is very kind and polite, so he wants to maximize the total amount of the water that he pours to his friends. Your task is to help him and determine the optimum distribution of cups between Pasha\'s friends.
The first line of the input contains two integers, n and w (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of Pasha\'s friends that are boys (equal to the number of Pasha\'s friends that are girls) and the capacity of Pasha\'s teapot in milliliters.
The second line of the input contains the sequence of integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892n) \xe2\x80\x94 the capacities of Pasha\'s tea cups in milliliters.
Print a single real number \xe2\x80\x94 the maximum total amount of water in milliliters that Pasha can pour to his friends without violating the given conditions. Your answer will be considered correct if its absolute or relative error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x896.
Pasha also has candies that he is going to give to girls but that is another task..." "1500  x7200"
557A "Ilya and Diplomas" "greedy, implementation, math" "Soon a school Olympiad in Informatics will be held in Berland, n schoolchildren will participate there.
At a meeting of the jury of the Olympiad it was decided that each of the n participants, depending on the results, will get a diploma of the first, second or third degree. Thus, each student will receive exactly one diploma.
They also decided that there must be given at least min1 and at most max1 diplomas of the first degree, at least min2 and at most max2 diplomas of the second degree, and at least min3 and at most max3 diplomas of the third degree.
After some discussion it was decided to choose from all the options of distributing diplomas satisfying these limitations the one that maximizes the number of participants who receive diplomas of the first degree. Of all these options they select the one which maximizes the number of the participants who receive diplomas of the second degree. If there are multiple of these options, they select the option that maximizes the number of diplomas of the third degree.
Choosing the best option of distributing certificates was entrusted to Ilya, one of the best programmers of Berland. However, he found more important things to do, so it is your task now to choose the best option of distributing of diplomas, based on the described limitations.
It is guaranteed that the described limitations are such that there is a way to choose such an option of distributing diplomas that all n participants of the Olympiad will receive a diploma of some degree.
The first line of the input contains a single integer n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xc2\xb7106) \xe2\x80\x94 the number of schoolchildren who will participate in the Olympiad.
The next line of the input contains two integers min1 and max1 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89max1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the minimum and maximum limits on the number of diplomas of the first degree that can be distributed.
The third line of the input contains two integers min2 and max2 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89max2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the minimum and maximum limits on the number of diplomas of the second degree that can be distributed. 
The next line of the input contains two integers min3 and max3 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89max3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the minimum and maximum limits on the number of diplomas of the third degree that can be distributed. 
It is guaranteed that min1\xe2\x80\x89+\xe2\x80\x89min2\xe2\x80\x89+\xe2\x80\x89min3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89max1\xe2\x80\x89+\xe2\x80\x89max2\xe2\x80\x89+\xe2\x80\x89max3.
In the first line of the output print three numbers, showing how many diplomas of the first, second and third degree will be given to students in the optimal variant of distributing diplomas.
The optimal variant of distributing diplomas is the one that maximizes the number of students who receive diplomas of the first degree. Of all the suitable options, the best one is the one which maximizes the number of participants who receive diplomas of the second degree. If there are several of these options, the best one is the one that maximizes the number of diplomas of the third degree." "1100  x8272"
556B "Case of Fake Numbers" "brute force, implementation" "Andrewid the Android is a galaxy-famous detective. He is now investigating a case of frauds who make fake copies of the famous Stolp\'s gears, puzzles that are as famous as the Rubik\'s cube once was.
Its most important components are a button and a line of n similar gears. Each gear has n teeth containing all numbers from 0 to n\xe2\x80\x89-\xe2\x80\x891 in the counter-clockwise order. When you push a button, the first gear rotates clockwise, then the second gear rotates counter-clockwise, the the third gear rotates clockwise an so on.
Besides, each gear has exactly one active tooth. When a gear turns, a new active tooth is the one following after the current active tooth according to the direction of the rotation. For example, if n\xe2\x80\x89=\xe2\x80\x895, and the active tooth is the one containing number 0, then clockwise rotation makes the tooth with number 1 active, or the counter-clockwise rotating makes the tooth number 4 active.
Andrewid remembers that the real puzzle has the following property: you can push the button multiple times in such a way that in the end the numbers on the active teeth of the gears from first to last form sequence 0,\xe2\x80\x891,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891. Write a program that determines whether the given puzzle is real or fake.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the number of gears.
The second line contains n digits a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891) \xe2\x80\x94 the sequence of active teeth: the active tooth of the i-th gear contains number ai.
In a single line print ""Yes"" (without the quotes), if the given Stolp\'s gears puzzle is real, and ""No"" (without the quotes) otherwise.
In the first sample test when you push the button for the first time, the sequence of active teeth will be 2 2 1, when you push it for the second time, you get 0 1 2." "1100  x7943"
556A "Case of the Zeros and Ones" greedy "Andrewid the Android is a galaxy-famous detective. In his free time he likes to think about strings containing zeros and ones.
Once he thought about a string of length n consisting of zeroes and ones. Consider the following operation: we choose any two adjacent positions in the string, and if one them contains 0, and the other contains 1, then we are allowed to remove these two digits from the string, obtaining a string of length n\xe2\x80\x89-\xe2\x80\x892 as a result.
Now Andreid thinks about what is the minimum length of the string that can remain after applying the described operation several times (possibly, zero)? Help him to calculate this number.
First line of the input contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105), the length of the string that Andreid has.
The second line contains the string of length n consisting only from zeros and ones.
Output the minimum length of the string that may remain after applying the described operations several times.
In the first sample test it is possible to change the string like the following: .
In the second sample test it is possible to change the string like the following: .
In the third sample test it is possible to change the string like the following: ." "900  x40281"
555E "Case of Computer Network" "dfs and similar, graphs, trees" "Andrewid the Android is a galaxy-known detective. Now he is preparing a defense against a possible attack by hackers on a major computer network.
In this network are n vertices, some pairs of vertices are connected by m undirected channels. It is planned to transfer q important messages via this network, the i-th of which must be sent from vertex si to vertex di via one or more channels, perhaps through some intermediate vertices.
To protect against attacks a special algorithm was developed. Unfortunately it can be applied only to the network containing directed channels. Therefore, as new channels can\'t be created, it was decided for each of the existing undirected channels to enable them to transmit data only in one of the two directions.
Your task is to determine whether it is possible so to choose the direction for each channel so that each of the q messages could be successfully transmitted.
The first line contains three integers n, m and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of nodes, channels and important messages.
Next m lines contain two integers each, vi and ui (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89vi,\xe2\x80\x89ui\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, vi\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89ui), that means that between nodes vi and ui is a channel. Between a pair of nodes can exist more than one channel.
Next q lines contain two integers si and di (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89si,\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, si\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89di) \xe2\x80\x94 the numbers of the nodes of the source and destination of the corresponding message.
It is not guaranteed that in it initially possible to transmit all the messages.
If a solution exists, print on a single line ""Yes"" (without the quotes). Otherwise, print ""No"" (without the quotes).
In the first sample test you can assign directions, for example, as follows: 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892, 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893, 3\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892, 4\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893. Then the path for for the first message will be 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893, and for the second one \xe2\x80\x94 4\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892.
In the third sample test you can assign directions, for example, as follows: 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892, 2\xe2\x80\x89\xe2\x86\x92\xe2\x80\x891, 2\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893. Then the path for the first message will be 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893, and for the second one \xe2\x80\x94 2\xe2\x80\x89\xe2\x86\x92\xe2\x80\x891." "2800  x2402"
555D "Case of a Top Secret" "binary search, implementation, math" "Andrewid the Android is a galaxy-famous detective. Now he is busy with a top secret case, the details of which are not subject to disclosure.
However, he needs help conducting one of the investigative experiment. There are n pegs put on a plane, they are numbered from 1 to n, the coordinates of the i-th of them are (xi,\xe2\x80\x890). Then, we tie to the bottom of one of the pegs a weight on a tight rope of length l (thus, its coordinates will be equal to (xi,\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x89l), where i is the number of the used peg). Then the weight is pushed to the right, so that it starts to rotate counterclockwise. At the same time, if the weight during rotation touches some of the other pegs, it then begins to rotate around that peg. Suppose that each peg itself is very thin and does not affect the rope length while weight is rotating around it.
More formally, if at some moment the segment of the rope contains one or more pegs in addition to the peg around which the weight is rotating, the weight will then rotate around the farthermost one of them on a shorter segment of a rope. In particular, if the segment of the rope touches some peg by its endpoint, it is considered that the weight starts to rotate around that peg on a segment of the rope of length 0.
At some moment the weight will begin to rotate around some peg, without affecting the rest of the pegs. Andrewid interested in determining the number of this peg.
Andrewid prepared m queries containing initial conditions for pushing the weight, help him to determine for each of them, around what peg the weight will eventually rotate.
The first line contains integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of pegs and queries.
The next line contains n integers x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the coordinates of the pegs. It is guaranteed that the coordinates of all the pegs are distinct integers.
Next m lines contain the descriptions of the queries of pushing the weight, each consists of two integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and li (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of the starting peg and the length of the rope.
Print m lines, the i-th line should contain the number of the peg around which the weight will eventually rotate after the i-th push.
Picture to the first sample test:
 
Picture to the second sample test:

Note that in the last query weight starts to rotate around the peg 1 attached to a rope segment of length 0." "2500  x873"
555C "Case of Chocolate" "data structures" "Andrewid the Android is a galaxy-known detective. Now he does not investigate any case and is eating chocolate out of boredom.
A bar of chocolate can be presented as an n\xe2\x80\x89\xc3\x97\xe2\x80\x89n table, where each cell represents one piece of chocolate. The columns of the table are numbered from 1 to n from left to right and the rows are numbered from top to bottom. Let\'s call the anti-diagonal to be a diagonal that goes the lower left corner to the upper right corner of the table. First Andrewid eats all the pieces lying below the anti-diagonal. Then he performs the following q actions with the remaining triangular part: first, he chooses a piece on the anti-diagonal and either direction \'up\' or \'left\', and then he begins to eat all the pieces starting from the selected cell, moving in the selected direction until he reaches the already eaten piece or chocolate bar edge.
After each action, he wants to know how many pieces he ate as a result of this action.
The first line contains integers n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the size of the chocolate bar and the number of actions.
Next q lines contain the descriptions of the actions: the i-th of them contains numbers xi and yi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, xi\xe2\x80\x89+\xe2\x80\x89yi\xe2\x80\x89=\xe2\x80\x89n\xe2\x80\x89+\xe2\x80\x891) \xe2\x80\x94 the numbers of the column and row of the chosen cell and the character that represents the direction (L \xe2\x80\x94 left, U \xe2\x80\x94 up).
Print q lines, the i-th of them should contain the number of eaten pieces as a result of the i-th action.
Pictures to the sample tests:

The pieces that were eaten in the same action are painted the same color. The pieces lying on the anti-diagonal contain the numbers of the action as a result of which these pieces were eaten.
In the second sample test the Andrewid tries to start eating chocolate for the second time during his fifth action, starting from the cell at the intersection of the 10-th column and the 1-st row, but this cell is already empty, so he does not eat anything." "2200  x1969"
555B "Case of Fugitive" "data structures, greedy, sortings" "Andrewid the Android is a galaxy-famous detective. He is now chasing a criminal hiding on the planet Oxa-5, the planet almost fully covered with water.
The only dry land there is an archipelago of n narrow islands located in a row. For more comfort let\'s represent them as non-intersecting segments on a straight line: island i has coordinates [li,\xe2\x80\x89ri], besides, ri\xe2\x80\x89<\xe2\x80\x89li\xe2\x80\x89+\xe2\x80\x891 for 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891.
To reach the goal, Andrewid needs to place a bridge between each pair of adjacent islands. A bridge of length a can be placed between the i-th and the (i\xe2\x80\x89+\xe2\x80\x891)-th islads, if there are such coordinates of x and y, that li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri, li\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89+\xe2\x80\x891 and y\xe2\x80\x89-\xe2\x80\x89x\xe2\x80\x89=\xe2\x80\x89a. 
The detective was supplied with m bridges, each bridge can be used at most once. Help him determine whether the bridges he got are enough to connect each pair of adjacent islands.
The first line contains integers n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of islands and bridges.
Next n lines each contain two integers li and ri (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018) \xe2\x80\x94 the coordinates of the island endpoints.
The last line contains m integer numbers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89am (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018) \xe2\x80\x94 the lengths of the bridges that Andrewid got.
If it is impossible to place a bridge between each pair of adjacent islands in the required manner, print on a single line ""No"" (without the quotes), otherwise print in the first line ""Yes"" (without the quotes), and in the second line print n\xe2\x80\x89-\xe2\x80\x891 numbers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn\xe2\x80\x89-\xe2\x80\x891, which mean that between islands i and i\xe2\x80\x89+\xe2\x80\x891 there must be used a bridge number bi. 
If there are multiple correct answers, print any of them. Note that in this problem it is necessary to print ""Yes"" and ""No"" in correct case.
In the first sample test you can, for example, place the second bridge between points 3 and 8, place the third bridge between points 7 and 10 and place the first bridge between points 10 and 14.
In the second sample test the first bridge is too short and the second bridge is too long, so the solution doesn\'t exist." "2000  x3750"
555A "Case of Matryoshkas" implementation "Andrewid the Android is a galaxy-famous detective. He is now investigating the case of vandalism at the exhibition of contemporary art.
The main exhibit is a construction of n matryoshka dolls that can be nested one into another. The matryoshka dolls are numbered from 1 to n. A matryoshka with a smaller number can be nested in a matryoshka with a higher number, two matryoshkas can not be directly nested in the same doll, but there may be chain nestings, for example, 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x894\xe2\x80\x89\xe2\x86\x92\xe2\x80\x895. 
In one second, you can perform one of the two following operations:
According to the modern aesthetic norms the matryoshka dolls on display were assembled in a specific configuration, i.e. as several separate chains of nested matryoshkas, but the criminal, following the mysterious plan, took out all the dolls and assembled them into a single large chain (1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x89...\xe2\x80\x89\xe2\x86\x92\xe2\x80\x89n). In order to continue the investigation Andrewid needs to know in what minimum time it is possible to perform this action.
The first line contains integers n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of matryoshkas and matryoshka chains in the initial configuration.
The next k lines contain the descriptions of the chains: the i-th line first contains number mi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89mi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), and then mi numbers ai1,\xe2\x80\x89ai2,\xe2\x80\x89...,\xe2\x80\x89aimi \xe2\x80\x94 the numbers of matryoshkas in the chain (matryoshka ai1 is nested into matryoshka ai2, that is nested into matryoshka ai3, and so on till the matryoshka aimi that isn\'t nested into any other matryoshka).
It is guaranteed that m1\xe2\x80\x89+\xe2\x80\x89m2\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89mk\xe2\x80\x89=\xe2\x80\x89n, the numbers of matryoshkas in all the chains are distinct, in each chain the numbers of matryoshkas follow in the ascending order.
In the single line print the minimum number of seconds needed to assemble one large chain from the initial configuration.
In the first sample test there are two chains: 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892 and 3. In one second you can nest the first chain into the second one and get 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x893.
In the second sample test you need to disassemble all the three chains into individual matryoshkas in 2 + 1 + 1 = 4 seconds and then assemble one big chain in 6 seconds." "1500  x6549"
554B "Ohana Cleans Up" "brute force, greedy, strings" "Ohana Matsumae is trying to clean a room, which is divided up into an n by n grid of squares. Each square is initially either clean or dirty. Ohana can sweep her broom over columns of the grid. Her broom is very strange: if she sweeps over a clean square, it will become dirty, and if she sweeps over a dirty square, it will become clean. She wants to sweep some columns of the room to maximize the number of rows that are completely clean. It is not allowed to sweep over the part of the column, Ohana can only sweep the whole column.
Return the maximum number of rows that she can make completely clean.
The first line of input will be a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100).
The next n lines will describe the state of the room. The i-th line will contain a binary string with n characters denoting the state of the i-th row of the room. The j-th character on this line is \'1\' if the j-th square in the i-th row is clean, and \'0\' if it is dirty.
The output should be a single line containing an integer equal to a maximum possible number of rows that are completely clean.
In the first sample, Ohana can sweep the 1st and 3rd columns. This will make the 1st and 4th row be completely clean.
In the second sample, everything is already clean, so Ohana doesn\'t need to do anything." "1200  x10004"
554A "Kyoya and Photobooks" "brute force, math, strings" "Kyoya Ootori is selling photobooks of the Ouran High School Host Club. He has 26 photos, labeled ""a"" to ""z"", and he has compiled them into a photo booklet with some photos in some order (possibly with some photos being duplicated). A photo booklet can be described as a string of lowercase letters, consisting of the photos in the booklet in order. He now wants to sell some ""special edition"" photobooks, each with one extra photo inserted anywhere in the book. He wants to make as many distinct photobooks as possible, so he can make more money. He asks Haruhi, how many distinct photobooks can he make by inserting one extra photo into the photobook he already has?
Please help Haruhi solve this problem.
The first line of input will be a single string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920). String s consists only of lowercase English letters. 
Output a single integer equal to the number of distinct photobooks Kyoya Ootori can make.
In the first case, we can make \'ab\',\'ac\',...,\'az\',\'ba\',\'ca\',...,\'za\', and \'aa\', producing a total of 51 distinct photo booklets. " "900  x13281"
553E "Kyoya and Train" "dp, fft, graphs, math, probabilities" "Kyoya Ootori wants to take the train to get to school. There are n train stations and m one-way train lines going between various stations. Kyoya is currently at train station 1, and the school is at station n. To take a train, he must pay for a ticket, and the train also takes a certain amount of time. However, the trains are not perfect and take random amounts of time to arrive at their destination. If Kyoya arrives at school strictly after t time units, he will have to pay a fine of x.
Each train line is described by a ticket price, and a probability distribution on the time the train takes. More formally, train line i has ticket cost ci, and a probability distribution pi,\xe2\x80\x89k which denotes the probability that this train will take k time units for all 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t. Amounts of time that each of the trains used by Kyouya takes are mutually independent random values (moreover, if Kyoya travels along the same train more than once, it is possible for the train to take different amounts of time and those amounts are also independent one from another). 
Kyoya wants to get to school by spending the least amount of money in expectation (for the ticket price plus possible fine for being late). Of course, Kyoya has an optimal plan for how to get to school, and every time he arrives at a train station, he may recalculate his plan based on how much time he has remaining. What is the expected cost that Kyoya will pay to get to school if he moves optimally?
The first line of input contains four integers n,\xe2\x80\x89m,\xe2\x80\x89t,\xe2\x80\x89x (2\xe2\x80\x89\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89\xe2\x80\x89n\xe2\x80\x89\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920\xe2\x80\x89000, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
The next 2m lines contain the description of the trains. 
The 2i-th line will have 3 integers ai,\xe2\x80\x89bi,\xe2\x80\x89ci, representing a one way train from station ai to bi with ticket cost ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106). There will always be at least one path from any station to the school. 
The (2i\xe2\x80\x89+\xe2\x80\x891)-th line will contain t integers, pi,\xe2\x80\x891,\xe2\x80\x89pi,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89pi,\xe2\x80\x89t where pi,\xe2\x80\x89k\xe2\x80\x89/\xe2\x80\x89100000 is the probability that this train will take k units of time to traverse (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000 for 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t, ). 
It is guaranteed that there is no more than one train between each pair of platforms in each of the directions.
Print a single real number that is equal to an optimal expected cost of getting to school. The answer will be considered correct if its relative or absolute error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x896.
The optimal strategy in the first case is as follows:
First, travel along first train line. With probability 1\xe2\x80\x89/\xe2\x80\x892 Kyoya will take 1 time unit. Otherwise, Kyoya will take 3 time units.
If the train takes 1 time unit, travel along the 4th train line. Kyoya will make it to school in time with probability 1\xe2\x80\x89/\xe2\x80\x892. Otherwise, if the train takes 3 time units, travel along the 2nd train line. Kyoya will make it to school in time with probability 1\xe2\x80\x89/\xe2\x80\x8910.
Since the cost of all train lines are zero, we can just look at the probability that Kyoya will incur the penalty. The probability that Kyoya will have to pay the penalty is 1\xe2\x80\x89/\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x891\xe2\x80\x89/\xe2\x80\x892\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89/\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x899\xe2\x80\x89/\xe2\x80\x8910\xe2\x80\x89=\xe2\x80\x897\xe2\x80\x89/\xe2\x80\x8910. We can show that no other strategy is strictly better.
The optimal strategy in the second case is to travel along 1\xe2\x80\x89\xe2\x86\x92\xe2\x80\x892\xe2\x80\x89\xe2\x86\x92\xe2\x80\x894 no matter what. Kyoya will incur the penalty with probability 3\xe2\x80\x89/\xe2\x80\x894, and the cost of the trains is 200, thus the expected cost is 200.75." "3200  x557"
553D "Nudist Beach" "binary search, graphs, greedy" "Nudist Beach is planning a military operation to attack the Life Fibers. In this operation, they will attack and capture several cities which are currently under the control of the Life Fibers.
There are n cities, labeled from 1 to n, and m bidirectional roads between them. Currently, there are Life Fibers in every city. In addition, there are k cities that are fortresses of the Life Fibers that cannot be captured under any circumstances. So, the Nudist Beach can capture an arbitrary non-empty subset of cities with no fortresses.
After the operation, Nudist Beach will have to defend the captured cities from counterattack. If they capture a city and it is connected to many Life Fiber controlled cities, it will be easily defeated. So, Nudist Beach would like to capture a set of cities such that for each captured city the ratio of Nudist Beach controlled neighbors among all neighbors of that city is as high as possible. 
More formally, they would like to capture a non-empty set of cities S with no fortresses of Life Fibers. The strength of a city  is defined as (number of neighbors of x in S) / (total number of neighbors of x). Here, two cities are called neighbors if they are connnected with a road. The goal is to maximize the strength of the weakest city in S.
Given a description of the graph, and the cities with fortresses, find a non-empty subset that maximizes the strength of the weakest city. 
The first line of input contains three integers n,\xe2\x80\x89m,\xe2\x80\x89k (2\xe2\x80\x89\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89\xe2\x80\x89n\xe2\x80\x89\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891).
The second line of input contains k integers, representing the cities with fortresses. These cities will all be distinct. 
The next m lines contain the roads. The i-th of these lines will have 2 integers ai,\xe2\x80\x89bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi). Every city will have at least one road adjacent to it.
There is no more than one road between each pair of the cities.
The first line should contain an integer r, denoting the size of an optimum set (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x89k). 
The second line should contain r integers, denoting the cities in the set. Cities may follow in an arbitrary order. This line should not contain any of the cities with fortresses.
If there are multiple possible answers, print any of them.
The first example case achieves a strength of 1/2. No other subset is strictly better.
The second example case achieves a strength of 1. Note that the subset doesn\'t necessarily have to be connected." "2300  x1002"
553C "Love Triangles" "dfs and similar, dsu, graphs" "There are many anime that are about ""love triangles"": Alice loves Bob, and Charlie loves Bob as well, but Alice hates Charlie. You are thinking about an anime which has n characters. The characters are labeled from 1 to n. Every pair of two characters can either mutually love each other or mutually hate each other (there is no neutral state).
You hate love triangles (A-B are in love and B-C are in love, but A-C hate each other), and you also hate it when nobody is in love. So, considering any three characters, you will be happy if exactly one pair is in love (A and B love each other, and C hates both A and B), or if all three pairs are in love (A loves B, B loves C, C loves A).
You are given a list of m known relationships in the anime. You know for sure that certain pairs love each other, and certain pairs hate each other. You\'re wondering how many ways you can fill in the remaining relationships so you are happy with every triangle. Two ways are considered different if two characters are in love in one way but hate each other in the other. Print this count modulo 1\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89007.
The first line of input will contain two integers n,\xe2\x80\x89m (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000).
The next m lines will contain the description of the known relationships. The i-th line will contain three integers ai,\xe2\x80\x89bi,\xe2\x80\x89ci. If ci is 1, then ai and bi are in love, otherwise, they hate each other (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi, ).
Each pair of people will be described no more than once.
Print a single integer equal to the number of ways to fill in the remaining pairs so that you are happy with every triangle modulo 1\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89007. 
In the first sample, the four ways are to: 
In the second sample, the only possible solution is to make 1 and 3 love each other and 2 and 4 hate each other." "2200  x1814"
553B "Kyoya and Permutation" "binary search, combinatorics, constructive algorithms, greedy, implementation, math" "Let\'s define the permutation of length n as an array p\xe2\x80\x89=\xe2\x80\x89[p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn] consisting of n distinct integers from range from 1 to n. We say that this permutation maps value 1 into the value p1, value 2 into the value p2 and so on.
Kyota Ootori has just learned about cyclic representation of a permutation. A cycle is a sequence of numbers such that each element of this sequence is being mapped into the next element of this sequence (and the last element of the cycle is being mapped into the first element of the cycle). The cyclic representation is a representation of p as a collection of cycles forming p. For example, permutation p\xe2\x80\x89=\xe2\x80\x89[4,\xe2\x80\x891,\xe2\x80\x896,\xe2\x80\x892,\xe2\x80\x895,\xe2\x80\x893] has a cyclic representation that looks like (142)(36)(5) because 1 is replaced by 4, 4 is replaced by 2, 2 is replaced by 1, 3 and 6 are swapped, and 5 remains in place. 
Permutation may have several cyclic representations, so Kyoya defines the standard cyclic representation of a permutation as follows. First, reorder the elements within each cycle so the largest element is first. Then, reorder all of the cycles so they are sorted by their first element. For our example above, the standard cyclic representation of [4,\xe2\x80\x891,\xe2\x80\x896,\xe2\x80\x892,\xe2\x80\x895,\xe2\x80\x893] is (421)(5)(63).
Now, Kyoya notices that if we drop the parenthesis in the standard cyclic representation, we get another permutation! For instance, [4,\xe2\x80\x891,\xe2\x80\x896,\xe2\x80\x892,\xe2\x80\x895,\xe2\x80\x893] will become [4,\xe2\x80\x892,\xe2\x80\x891,\xe2\x80\x895,\xe2\x80\x896,\xe2\x80\x893].
Kyoya notices that some permutations don\'t change after applying operation described above at all. He wrote all permutations of length n that do not change in a list in lexicographic order. Unfortunately, his friend Tamaki Suoh lost this list. Kyoya wishes to reproduce the list and he needs your help. Given the integers n and k, print the permutation that was k-th on Kyoya\'s list.
The first line will contain two integers n, k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min{1018,\xe2\x80\x89l} where l is the length of the Kyoya\'s list).
Print n space-separated integers, representing the permutation that is the answer for the question. 
The standard cycle representation is (1)(32)(4), which after removing parenthesis gives us the original permutation. The first permutation on the list would be [1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894], while the second permutation would be [1,\xe2\x80\x892,\xe2\x80\x894,\xe2\x80\x893]." "1900  x2120"
553A "Kyoya and Colored Balls" "combinatorics, dp, math" "Kyoya Ootori has a bag with n colored balls that are colored with k different colors. The colors are labeled from 1 to k. Balls of the same color are indistinguishable. He draws balls from the bag one by one until the bag is empty. He noticed that he drew the last ball of color i before drawing the last ball of color i\xe2\x80\x89+\xe2\x80\x891 for all i from 1 to k\xe2\x80\x89-\xe2\x80\x891. Now he wonders how many different ways this can happen. 
The first line of input will have one integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) the number of colors.
Then, k lines will follow. The i-th line will contain ci, the number of balls of the i-th color (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000).
The total number of balls doesn\'t exceed 1000.
A single integer, the number of ways that Kyoya can draw the balls from the bag as described in the statement, modulo 1\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89007. 
In the first sample, we have 2 balls of color 1, 2 balls of color 2, and 1 ball of color 3. The three ways for Kyoya are: " "1500  x8709"
552E "Vanya and Brackets" "brute force, dp, expression parsing, greedy, implementation, strings" "Vanya is doing his maths homework. He has an expression of form , where x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn are digits from 1 to 9, and sign  represents either a plus \'+\' or the multiplication sign \'*\'. Vanya needs to add one pair of brackets in this expression so that to maximize the value of the resulting expression.
The first line contains expression s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895001, |s| is odd), its odd positions only contain digits from 1 to 9, and even positions only contain signs \xe2\x80\x89+\xe2\x80\x89 and \xe2\x80\x89*\xe2\x80\x89. 
The number of signs \xe2\x80\x89*\xe2\x80\x89 doesn\'t exceed 15.
In the first line print the maximum possible value of an expression.
Note to the first sample test. 3\xe2\x80\x89+\xe2\x80\x895\xe2\x80\x89*\xe2\x80\x89(7\xe2\x80\x89+\xe2\x80\x898)\xe2\x80\x89*\xe2\x80\x894\xe2\x80\x89=\xe2\x80\x89303.
Note to the second sample test. (2\xe2\x80\x89+\xe2\x80\x893)\xe2\x80\x89*\xe2\x80\x895\xe2\x80\x89=\xe2\x80\x8925.
Note to the third sample test. (3\xe2\x80\x89*\xe2\x80\x894)\xe2\x80\x89*\xe2\x80\x895\xe2\x80\x89=\xe2\x80\x8960 (also many other variants are valid, for instance, (3)\xe2\x80\x89*\xe2\x80\x894\xe2\x80\x89*\xe2\x80\x895\xe2\x80\x89=\xe2\x80\x8960)." "2100  x1630"
552D "Vanya and Triangles" "brute force, combinatorics, data structures, geometry, math, sortings" "Vanya got bored and he painted n distinct points on the plane. After that he connected all the points pairwise and saw that as a result many triangles were formed with vertices in the painted points. He asks you to count the number of the formed triangles with the non-zero area.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000) \xe2\x80\x94 the number of the points painted on the plane. 
Next n lines contain two integers each xi,\xe2\x80\x89yi (\xe2\x80\x89-\xe2\x80\x89100\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the coordinates of the i-th point. It is guaranteed that no two given points coincide.
In the first line print an integer \xe2\x80\x94 the number of triangles with the non-zero area among the painted points.
Note to the first sample test. There are 3 triangles formed: (0,\xe2\x80\x890)\xe2\x80\x89-\xe2\x80\x89(1,\xe2\x80\x891)\xe2\x80\x89-\xe2\x80\x89(2,\xe2\x80\x890); (0,\xe2\x80\x890)\xe2\x80\x89-\xe2\x80\x89(2,\xe2\x80\x892)\xe2\x80\x89-\xe2\x80\x89(2,\xe2\x80\x890); (1,\xe2\x80\x891)\xe2\x80\x89-\xe2\x80\x89(2,\xe2\x80\x892)\xe2\x80\x89-\xe2\x80\x89(2,\xe2\x80\x890).
Note to the second sample test. There is 1 triangle formed: (0,\xe2\x80\x890)\xe2\x80\x89-\xe2\x80\x89(1,\xe2\x80\x891)\xe2\x80\x89-\xe2\x80\x89(2,\xe2\x80\x890).
Note to the third sample test. A single point doesn\'t form a single triangle." "1900  x4492"
552C "Vanya and Scales" "brute force, dp, greedy, math, meet-in-the-middle, number theory" "Vanya has a scales for weighing loads and weights of masses w0,\xe2\x80\x89w1,\xe2\x80\x89w2,\xe2\x80\x89...,\xe2\x80\x89w100 grams where w is some integer not less than 2 (exactly one weight of each nominal value). Vanya wonders whether he can weight an item with mass m using the given weights, if the weights can be put on both pans of the scales. Formally speaking, your task is to determine whether it is possible to place an item of mass m and some weights on the left pan of the scales, and some weights on the right pan of the scales so that the pans of the scales were in balance.
The first line contains two integers w,\xe2\x80\x89m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number defining the masses of the weights and the mass of the item.
Print word \'YES\' if the item can be weighted and \'NO\' if it cannot.
Note to the first sample test. One pan can have an item of mass 7 and a weight of mass 3, and the second pan can have two weights of masses 9 and 1, correspondingly. Then 7\xe2\x80\x89+\xe2\x80\x893\xe2\x80\x89=\xe2\x80\x899\xe2\x80\x89+\xe2\x80\x891.
Note to the second sample test. One pan of the scales can have an item of mass 99 and the weight of mass 1, and the second pan can have the weight of mass 100.
Note to the third sample test. It is impossible to measure the weight of the item in the manner described in the input. " "1900  x5492"
552B "Vanya and Books" "implementation, math" "Vanya got an important task \xe2\x80\x94 he should enumerate books in the library and label each book with its number. Each of the n books should be assigned with a number from 1 to n. Naturally, distinct books should be assigned distinct numbers.
Vanya wants to know how many digits he will have to write down as he labels the books.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of books in the library.
Print the number of digits needed to number all the books.
Note to the first test. The books get numbers 1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894,\xe2\x80\x895,\xe2\x80\x896,\xe2\x80\x897,\xe2\x80\x898,\xe2\x80\x899,\xe2\x80\x8910,\xe2\x80\x8911,\xe2\x80\x8912,\xe2\x80\x8913, which totals to 17 digits.
Note to the second sample. The books get numbers 1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894, which totals to 4 digits." "1200  x15437"
552A "Vanya and Table" "implementation, math" "Vanya has a table consisting of 100 rows, each row contains 100 cells. The rows are numbered by integers from 1 to 100 from bottom to top, the columns are numbered from 1 to 100 from left to right. 
In this table, Vanya chose n rectangles with sides that go along borders of squares (some rectangles probably occur multiple times). After that for each cell of the table he counted the number of rectangles it belongs to and wrote this number into it. Now he wants to find the sum of values in all cells of the table and as the table is too large, he asks you to help him find the result.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of rectangles.
Each of the following n lines contains four integers x1,\xe2\x80\x89y1,\xe2\x80\x89x2,\xe2\x80\x89y2 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), where x1 and y1 are the number of the column and row of the lower left cell and x2 and y2 are the number of the column and row of the upper right cell of a rectangle.
In a single line print the sum of all values in the cells of the table.
Note to the first sample test:
Values of the table in the first three rows and columns will be as follows:
121
121
110
So, the sum of values will be equal to 10.
Note to the second sample test:
Values of the table in the first three rows and columns will be as follows:
222
222
222
So, the sum of values will be equal to 18." "1000  x9594"
551E "GukiZ and GukiZiana" "binary search, data structures, implementation" "Professor GukiZ was playing with arrays again and accidentally discovered new function, which he called GukiZiana. For given array a, indexed with integers from 1 to n, and number y, GukiZiana(a,\xe2\x80\x89y) represents maximum value of j\xe2\x80\x89-\xe2\x80\x89i, such that aj\xe2\x80\x89=\xe2\x80\x89ai\xe2\x80\x89=\xe2\x80\x89y. If there is no y as an element in a, then GukiZiana(a,\xe2\x80\x89y) is equal to \xe2\x80\x89-\xe2\x80\x891. GukiZ also prepared a problem for you. This time, you have two types of queries: 
For each query of type 2, print the answer and make GukiZ happy!
The first line contains two integers n, q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xe2\x80\x89*\xe2\x80\x89105,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xe2\x80\x89*\xe2\x80\x89104), size of array a, and the number of queries. 
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89... an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), forming an array a. 
Each of next q lines contain either four or two numbers, as described in statement:
If line starts with 1, then the query looks like 1 l r x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), first type query.
If line starts with 2, then th query looks like 2 y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), second type query.
For each query of type 2, print the value of GukiZiana(a,\xe2\x80\x89y), for y value for that query." "2500  x1874"
551D "GukiZ and Binary Operations" "combinatorics, implementation, math, matrices, number theory" "We all know that GukiZ often plays with arrays. 
Now he is thinking about this problem: how many arrays a, of length n, with non-negative elements strictly less then 2l meet the following condition: ? Here operation  means bitwise AND (in Pascal it is equivalent to and, in C/C++/Java/Python it is equivalent to &), operation  means bitwise OR (in Pascal it is equivalent to , in C/C++/Java/Python it is equivalent to |). 
Because the answer can be quite large, calculate it modulo m. This time GukiZ hasn\'t come up with solution, and needs you to help him!
First and the only line of input contains four integers n, k, l, m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8964, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109\xe2\x80\x89+\xe2\x80\x897).
In the single line print the number of arrays satisfying the condition above modulo m.
In the first sample, satisfying arrays are {1,\xe2\x80\x891},\xe2\x80\x89{3,\xe2\x80\x891},\xe2\x80\x89{1,\xe2\x80\x893}.
In the second sample, only satisfying array is {1,\xe2\x80\x891}.
In the third sample, satisfying arrays are {0,\xe2\x80\x893,\xe2\x80\x893},\xe2\x80\x89{1,\xe2\x80\x893,\xe2\x80\x892},\xe2\x80\x89{1,\xe2\x80\x893,\xe2\x80\x893},\xe2\x80\x89{2,\xe2\x80\x893,\xe2\x80\x891},\xe2\x80\x89{2,\xe2\x80\x893,\xe2\x80\x893},\xe2\x80\x89{3,\xe2\x80\x893,\xe2\x80\x890},\xe2\x80\x89{3,\xe2\x80\x893,\xe2\x80\x891},\xe2\x80\x89{3,\xe2\x80\x893,\xe2\x80\x892},\xe2\x80\x89{3,\xe2\x80\x893,\xe2\x80\x893}." "2100  x1967"
551C "GukiZ hates Boxes" "binary search, greedy" "Professor GukiZ is concerned about making his way to school, because massive piles of boxes are blocking his way. 
In total there are n piles of boxes, arranged in a line, from left to right, i-th pile (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) containing ai boxes. Luckily, m students are willing to help GukiZ by removing all the boxes from his way. Students are working simultaneously. At time 0, all students are located left of the first pile. It takes one second for every student to move from this position to the first pile, and after that, every student must start performing sequence of two possible operations, each taking one second to complete. Possible operations are:
GukiZ\'s students aren\'t smart at all, so they need you to tell them how to remove boxes before professor comes (he is very impatient man, and doesn\'t want to wait). They ask you to calculate minumum time t in seconds for which they can remove all the boxes from GukiZ\'s way. Note that students can be positioned in any manner after t seconds, but all the boxes must be removed.
The first line contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the number of piles of boxes and the number of GukiZ\'s students. 
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89... an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) where ai represents the number of boxes on i-th pile. It\'s guaranteed that at least one pile of is non-empty.
In a single line, print one number, minimum time needed to remove all the boxes in seconds.
First sample: Student will first move to the first pile (1 second), then remove box from first pile (1 second), then move to the second pile (1 second) and finally remove the box from second pile (1 second).
Second sample: One of optimal solutions is to send one student to remove a box from the first pile and a box from the third pile, and send another student to remove a box from the third pile. Overall, 5 seconds.
Third sample: With a lot of available students, send three of them to remove boxes from the first pile, four of them to remove boxes from the second pile, five of them to remove boxes from the third pile, and four of them to remove boxes from the fourth pile. Process will be over in 5 seconds, when removing the boxes from the last pile is finished." "2200  x3596"
551B ZgukistringZ "brute force, constructive algorithms, implementation, strings" "Professor GukiZ doesn\'t accept string as they are. He likes to swap some letters in string to obtain a new one.
GukiZ has strings a, b, and c. He wants to obtain string k by swapping some letters in a, so that k should contain as many non-overlapping substrings equal either to b or c as possible. Substring of string x is a string formed by consecutive segment of characters from x. Two substrings of string x overlap if there is position i in string x occupied by both of them.
GukiZ was disappointed because none of his students managed to solve the problem. Can you help them and find one of possible strings k?
The first line contains string a, the second line contains string b, and the third line contains string c (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|a|,\xe2\x80\x89|b|,\xe2\x80\x89|c|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, where |s| denotes the length of string s).
All three strings consist only of lowercase English letters. 
It is possible that b and c coincide.
Find one of possible strings k, as described in the problem statement. If there are multiple possible answers, print any of them.
In the third sample, this optimal solutions has three non-overlaping substrings equal to either b or c on positions 1\xe2\x80\x89\xe2\x80\x93\xe2\x80\x892 (ab), 3\xe2\x80\x89\xe2\x80\x93\xe2\x80\x894 (ab), 5\xe2\x80\x89\xe2\x80\x93\xe2\x80\x897 (aca). In this sample, there exist many other optimal solutions, one of them would be acaababbcc." "1800  x3861"
551A "GukiZ and Contest" "brute force, implementation, sortings" "Professor GukiZ likes programming contests. He especially likes to rate his students on the contests he prepares. Now, he has decided to prepare a new contest. 
In total, n students will attend, and before the start, every one of them has some positive integer rating. Students are indexed from 1 to n. Let\'s denote the rating of i-th student as ai. After the contest ends, every student will end up with some positive integer position. GukiZ expects that his students will take places according to their ratings. 
He thinks that each student will take place equal to . In particular, if student A has rating strictly lower then student B, A will get the strictly better position than B, and if two students have equal ratings, they will share the same position. 
GukiZ would like you to reconstruct the results by following his expectations. Help him and determine the position after the end of the contest for each of his students if everything goes as expected.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000), number of GukiZ\'s students. 
The second line contains n numbers a1,\xe2\x80\x89a2,\xe2\x80\x89... an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000) where ai is the rating of i-th student (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
In a single line, print the position after the end of the contest for each of n students in the same order as they appear in the input.
In the first sample, students 2 and 3 are positioned first (there is no other student with higher rating), and student 1 is positioned third since there are two students with higher rating.
In the second sample, first student is the only one on the contest.
In the third sample, students 2 and 5 share the first position with highest rating, student 4 is next with third position, and students 1 and 3 are the last sharing fourth position." "800  x16416"
550E "Brackets in Implications" "constructive algorithms, greedy, implementation, math" "Implication is a function of two logical arguments, its value is false if and only if the value of the first argument is true and the value of the second argument is false. 
Implication is written by using character \'\', and the arguments and the result of the implication are written as \'0\' (false) and \'1\' (true). According to the definition of the implication: 
 

 

When a logical expression contains multiple implications, then when there are no brackets, it will be calculated from left to fight. For example,
. 
When there are brackets, we first calculate the expression in brackets. For example,
.
For the given logical expression  determine if it is possible to place there brackets so that the value of a logical expression is false. If it is possible, your task is to find such an arrangement of brackets.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of arguments in a logical expression.
The second line contains n numbers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (), which means the values of arguments in the expression in the order they occur.
Print ""NO"" (without the quotes), if it is impossible to place brackets in the expression so that its value was equal to 0.
Otherwise, print ""YES"" in the first line and the logical expression with the required arrangement of brackets in the second line.
The expression should only contain characters \'0\', \'1\', \'-\' (character with ASCII code 45), \'>\' (character with ASCII code 62), \'(\' and \')\'. Characters \'-\' and \'>\' can occur in an expression only paired like that: (""->"") and represent implication. The total number of logical arguments (i.e. digits \'0\' and \'1\') in the expression must be equal to n. The order in which the digits follow in the expression from left to right must coincide with a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an.
The expression should be correct. More formally, a correct expression is determined as follows:
The total number of characters in the resulting expression mustn\'t exceed 106.
If there are multiple possible answers, you are allowed to print any of them." "2200  x1396"
550D "Regular Bridge" "constructive algorithms, graphs, implementation" "An undirected graph is called k-regular, if the degrees of all its vertices are equal k. An edge of a connected graph is called a bridge, if after removing it the graph is being split into two connected components.
Build a connected undirected k-regular graph containing at least one bridge, or else state that such graph doesn\'t exist.
The single line of the input contains integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the required degree of the vertices of the regular graph.
Print ""NO"" (without quotes), if such graph doesn\'t exist. 
Otherwise, print ""YES"" in the first line and the description of any suitable graph in the next lines.
The description of the made graph must start with numbers n and m \xe2\x80\x94 the number of vertices and edges respectively. 
Each of the next m lines must contain two integers, a and b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, a\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89b), that mean that there is an edge connecting the vertices a and b. A graph shouldn\'t contain multiple edges and edges that lead from a vertex to itself. A graph must be connected, the degrees of all vertices of the graph must be equal k. At least one edge of the graph must be a bridge. You can print the edges of the graph in any order. You can print the ends of each edge in any order.
The constructed graph must contain at most 106 vertices and 106 edges (it is guaranteed that if at least one graph that meets the requirements exists, then there also exists the graph with at most 106 vertices and at most 106 edges). 
In the sample from the statement there is a suitable graph consisting of two vertices, connected by a single edge." "1900  x3481"
550C "Divisibility by Eight" "brute force, dp, math" "You are given a non-negative integer n, its decimal representation consists of at most 100 digits and doesn\'t contain leading zeroes.
Your task is to determine if it is possible in this case to remove some of the digits (possibly not remove any digit at all) so that the result contains at least one digit, forms a non-negative integer, doesn\'t have leading zeroes and is divisible by 8. After the removing, it is forbidden to rearrange the digits.
If a solution exists, you should print it.
The single line of the input contains a non-negative integer n. The representation of number n doesn\'t contain any leading zeroes and its length doesn\'t exceed 100 digits. 
Print ""NO"" (without quotes), if there is no such way to remove some digits from number n. 
Otherwise, print ""YES"" in the first line and the resulting number after removing digits from number n in the second line. The printed number must be divisible by 8.
If there are multiple possible answers, you may print any of them." "1500  x28857"
550B "Preparing Olympiad" "bitmasks, brute force" "You have n problems. You have estimated the difficulty of the i-th one as integer ci. Now you want to prepare a problemset for a contest, using some of the problems you\'ve made.
A problemset for the contest must consist of at least two problems. You think that the total difficulty of the problems of the contest must be at least l and at most r. Also, you think that the difference between difficulties of the easiest and the hardest of the chosen problems must be at least x.
Find the number of ways to choose a problemset for the contest.
The first line contains four integers n, l, r, x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8915, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the number of problems you have, the minimum and maximum value of total difficulty of the problemset and the minimum difference in difficulty between the hardest problem in the pack and the easiest one, respectively.
The second line contains n integers c1,\xe2\x80\x89c2,\xe2\x80\x89...,\xe2\x80\x89cn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the difficulty of each problem.
Print the number of ways to choose a suitable problemset for the contest. 
In the first example two sets are suitable, one consisting of the second and third problem, another one consisting of all three problems.
In the second example, two sets of problems are suitable \xe2\x80\x94 the set of problems with difficulties 10 and 30 as well as the set of problems with difficulties 20 and 30.
In the third example any set consisting of one problem of difficulty 10 and one problem of difficulty 20 is suitable." "1400  x21598"
550A "Two Substrings" "brute force, dp, greedy, implementation, strings" "You are given string s. Your task is to determine if the given string s contains two non-overlapping substrings ""AB"" and ""BA"" (the substrings can go in any order).
The only line of input contains a string s of length between 1 and 105 consisting of uppercase Latin letters.
Print ""YES"" (without the quotes), if string s contains two non-overlapping substrings ""AB"" and ""BA"", and ""NO"" otherwise.
In the first sample test, despite the fact that there are substrings ""AB"" and ""BA"", their occurrences overlap, so the answer is ""NO"".
In the second sample test there are the following occurrences of the substrings: BACFAB.
In the third sample test there is no substring ""AB"" nor substring ""BA""." "1500  x38243"
549H "Degenerate Matrix" "binary search, math" "The determinant of a matrix 2\xe2\x80\x89\xc3\x97\xe2\x80\x892 is defined as follows:
A matrix is called degenerate if its determinant is equal to zero. 
The norm ||A|| of a matrix A is defined as a maximum of absolute values of its elements.
You are given a matrix . Consider any degenerate matrix B such that norm ||A\xe2\x80\x89-\xe2\x80\x89B|| is minimum possible. Determine ||A\xe2\x80\x89-\xe2\x80\x89B||.
The first line contains two integers a and b (|a|,\xe2\x80\x89|b|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), the elements of the first row of matrix A. 
The second line contains two integers c and d (|c|,\xe2\x80\x89|d|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) the elements of the second row of matrix A.
Output a single real number, the minimum possible value of ||A\xe2\x80\x89-\xe2\x80\x89B||. Your answer is considered to be correct if its absolute or relative error does not exceed 10\xe2\x80\x89-\xe2\x80\x899.
In the first sample matrix B is 
In the second sample matrix B is " "2100  x1993"
549G "Happy Line" "constructive algorithms, greedy, sortings" "Do you like summer? Residents of Berland do. They especially love eating ice cream in the hot summer. So this summer day a large queue of n Berland residents lined up in front of the ice cream stall. We know that each of them has a certain amount of berland dollars with them. The residents of Berland are nice people, so each person agrees to swap places with the person right behind him for just 1 dollar. More formally, if person a stands just behind person b, then person a can pay person b 1 dollar, then a and b get swapped. Of course, if person a has zero dollars, he can not swap places with person b.
Residents of Berland are strange people. In particular, they get upset when there is someone with a strictly smaller sum of money in the line in front of them.
Can you help the residents of Berland form such order in the line so that they were all happy? A happy resident is the one who stands first in the line or the one in front of who another resident stands with not less number of dollars. Note that the people of Berland are people of honor and they agree to swap places only in the manner described above.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the number of residents who stand in the line.
The second line contains n space-separated integers ai (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), where ai is the number of Berland dollars of a man standing on the i-th position in the line. The positions are numbered starting from the end of the line. 
If it is impossible to make all the residents happy, print "":("" without the quotes. Otherwise, print in the single line n space-separated integers, the i-th of them must be equal to the number of money of the person on position i in the new line. If there are multiple answers, print any of them.
In the first sample two residents should swap places, after that the first resident has 10 dollars and he is at the head of the line and the second resident will have 9 coins and he will be at the end of the line. 
In the second sample it is impossible to achieve the desired result.
In the third sample the first person can swap with the second one, then they will have the following numbers of dollars: 4 11 3, then the second person (in the new line) swaps with the third one, and the resulting numbers of dollars will equal to: 4 4 10. In this line everybody will be happy." "2200  x2453"
549F "Yura and Developers" "data structures, divide and conquer" "Yura has a team of k developers and a list of n tasks numbered from 1 to n. Yura is going to choose some tasks to be done this week. Due to strange Looksery habits the numbers of chosen tasks should be a segment of consecutive integers containing no less than 2 numbers, i. e. a sequence of form l,\xe2\x80\x89l\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89r for some 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89<\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n. 
Every task i has an integer number ai associated with it denoting how many man-hours are required to complete the i-th task. Developers are not self-confident at all, and they are actually afraid of difficult tasks. Knowing that, Yura decided to pick up a hardest task (the one that takes the biggest number of man-hours to be completed, among several hardest tasks with same difficulty level he chooses arbitrary one) and complete it on his own. So, if tasks with numbers [l,\xe2\x80\x89r] are chosen then the developers are left with r\xe2\x80\x89-\xe2\x80\x89l tasks to be done by themselves. 
Every developer can spend any integer amount of hours over any task, but when they are done with the whole assignment there should be exactly ai man-hours spent over the i-th task. 
The last, but not the least problem with developers is that one gets angry if he works more than another developer. A set of tasks [l,\xe2\x80\x89r] is considered good if it is possible to find such a distribution of work that allows to complete all the tasks and to have every developer working for the same amount of time (amount of work performed by Yura doesn\'t matter for other workers as well as for him).
For example, let\'s suppose that Yura have chosen tasks with following difficulties: a\xe2\x80\x89=\xe2\x80\x89[1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894], and he has three developers in his disposal. He takes the hardest fourth task to finish by himself, and the developers are left with tasks with difficulties [1,\xe2\x80\x892,\xe2\x80\x893]. If the first one spends an hour on the first task and an hour on the third one, the second developer spends two hours on the second task and the third developer spends two hours on the third task, then they are done, since every developer worked exactly for two hours and every task has been worked over for the required amount of time. As another example, if the first task required two hours instead of one to be completed then it would be impossible to assign the tasks in a way described above. 
Besides work, Yura is fond of problem solving. He wonders how many pairs (l,\xe2\x80\x89r) (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89<\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) exists such that a segment [l,\xe2\x80\x89r] is good? Yura has already solved this problem, but he has no time to write the code. Please, help Yura and implement the solution for this problem. 
The first line of input contains two positive integers: n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300\xe2\x80\x89000,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000), the number of tasks in the list and the number of developers in Yura\'s disposal. 
The second line contains n integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). 
Output a single integer \xe2\x80\x94 the number of pairs (l,\xe2\x80\x89r) satisfying the conditions from the statement.
In the first sample there are three good segments:" "2800  x888"
549E "Sasha Circle" "geometry, math" "Berlanders like to eat cones after a hard day. Misha Square and Sasha Circle are local authorities of Berland. Each of them controls its points of cone trade. Misha has n points, Sasha \xe2\x80\x94 m. Since their subordinates constantly had conflicts with each other, they decided to build a fence in the form of a circle, so that the points of trade of one businessman are strictly inside a circle, and points of the other one are strictly outside. It doesn\'t matter which of the two gentlemen will have his trade points inside the circle.
Determine whether they can build a fence or not.
The first line contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910000), numbers of Misha\'s and Sasha\'s trade points respectively.
The next n lines contains pairs of space-separated integers Mx,\xe2\x80\x89My (\xe2\x80\x89-\xe2\x80\x89104\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89Mx,\xe2\x80\x89My\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104), coordinates of Misha\'s trade points.
The next m lines contains pairs of space-separated integers Sx,\xe2\x80\x89Sy (\xe2\x80\x89-\xe2\x80\x89104\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89Sx,\xe2\x80\x89Sy\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104), coordinates of Sasha\'s trade points.
It is guaranteed that all n\xe2\x80\x89+\xe2\x80\x89m points are distinct.
The only output line should contain either word ""YES"" without quotes in case it is possible to build a such fence or word ""NO"" in the other case.
In the first sample there is no possibility to separate points, because any circle that contains both points (\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x890),\xe2\x80\x89(1,\xe2\x80\x890) also contains at least one point from the set (0,\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891),\xe2\x80\x89(0,\xe2\x80\x891), and vice-versa: any circle that contains both points (0,\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891),\xe2\x80\x89(0,\xe2\x80\x891) also contains at least one point from the set (\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x890),\xe2\x80\x89(1,\xe2\x80\x890)
In the second sample one of the possible solution is shown below. Misha\'s points are marked with red colour and Sasha\'s are marked with blue. " "2700  x155"
549D "Haar Features" "greedy, implementation" "The first algorithm for detecting a face on the image working in realtime was developed by Paul Viola and Michael Jones in 2001. A part of the algorithm is a procedure that computes Haar features. As part of this task, we consider a simplified model of this concept.
Let\'s consider a rectangular image that is represented with a table of size n\xe2\x80\x89\xc3\x97\xe2\x80\x89m. The table elements are integers that specify the brightness of each pixel in the image.
A feature also is a rectangular table of size n\xe2\x80\x89\xc3\x97\xe2\x80\x89m. Each cell of a feature is painted black or white.
To calculate the value of the given feature at the given image, you must perform the following steps. First the table of the feature is put over the table of the image (without rotations or reflections), thus each pixel is entirely covered with either black or white cell. The value of a feature in the image is the value of W\xe2\x80\x89-\xe2\x80\x89B, where W is the total brightness of the pixels in the image, covered with white feature cells, and B is the total brightness of the pixels covered with black feature cells.
Some examples of the most popular Haar features are given below. 
Your task is to determine the number of operations that are required to calculate the feature by using the so-called prefix rectangles.
A prefix rectangle is any rectangle on the image, the upper left corner of which coincides with the upper left corner of the image.
You have a variable value, whose value is initially zero. In one operation you can count the sum of pixel values \xe2\x80\x8b\xe2\x80\x8bat any prefix rectangle, multiply it by any integer and add to variable value.
You are given a feature. It is necessary to calculate the minimum number of operations required to calculate the values of this attribute at an arbitrary image. For a better understanding of the statement, read the explanation of the first sample.
The first line contains two space-separated integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of rows and columns in the feature.
Next n lines contain the description of the feature. Each line consists of m characters, the j-th character of the i-th line equals to ""W"", if this element of the feature is white and ""B"" if it is black.
Print a single number \xe2\x80\x94 the minimum number of operations that you need to make to calculate the value of the feature.
The first sample corresponds to feature B, the one shown in the picture. The value of this feature in an image of size 6\xe2\x80\x89\xc3\x97\xe2\x80\x898 equals to the difference of the total brightness of the pixels in the lower and upper half of the image. To calculate its value, perform the following two operations:
Thus, all the pixels in the lower three rows of the image will be included with factor 1, and all pixels in the upper three rows of the image will be included with factor 1\xe2\x80\x89-\xe2\x80\x892\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891, as required." "1900  x2141"
549C "The Game Of Parity" games "There are n cities in Westeros. The i-th city is inhabited by ai people. Daenerys and Stannis play the following game: in one single move, a player chooses a certain town and burns it to the ground. Thus all its residents, sadly, die. Stannis starts the game. The game ends when Westeros has exactly k cities left.
The prophecy says that if the total number of surviving residents is even, then Daenerys wins: Stannis gets beheaded, and Daenerys rises on the Iron Throne. If the total number of surviving residents is odd, Stannis wins and everything goes in the completely opposite way.
Lord Petyr Baelish wants to know which candidates to the throne he should support, and therefore he wonders, which one of them has a winning strategy. Answer to this question of Lord Baelish and maybe you will become the next Lord of Harrenholl.
The first line contains two positive space-separated integers, n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the initial number of cities in Westeros and the number of cities at which the game ends. 
The second line contains n space-separated positive integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), which represent the population of each city in Westeros.
Print string ""Daenerys"" (without the quotes), if Daenerys wins and ""Stannis"" (without the quotes), if Stannis wins.
In the first sample Stannis will use his move to burn a city with two people and Daenerys will be forced to burn a city with one resident. The only survivor city will have one resident left, that is, the total sum is odd, and thus Stannis wins.
In the second sample, if Stannis burns a city with two people, Daenerys burns the city with one resident, or vice versa. In any case, the last remaining city will be inhabited by two people, that is, the total sum is even, and hence Daenerys wins." "2200  x1738"
549B "Looksery Party" "constructive algorithms, dfs and similar, graphs, greedy" "The Looksery company, consisting of n staff members, is planning another big party. Every employee has his phone number and the phone numbers of his friends in the phone book. Everyone who comes to the party, sends messages to his contacts about how cool it is. At the same time everyone is trying to spend as much time on the fun as possible, so they send messages to everyone without special thinking, moreover, each person even sends a message to himself or herself.
Igor and Max, Looksery developers, started a dispute on how many messages each person gets. Igor indicates n numbers, the i-th of which indicates how many messages, in his view, the i-th employee is going to take. If Igor guesses correctly at least one of these numbers, he wins, otherwise Max wins.
You support Max in this debate, so you need, given the contact lists of the employees, to determine whether there is a situation where Igor loses. Specifically, you need to determine which employees should come to the party, and which should not, so after all the visitors send messages to their contacts, each employee received a number of messages that is different from what Igor stated.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of employees of company Looksery.
Next n lines contain the description of the contact lists of the employees. The i-th of these lines contains a string of length n, consisting of digits zero and one, specifying the contact list of the i-th employee. If the j-th character of the i-th string equals 1, then the j-th employee is in the i-th employee\'s contact list, otherwise he isn\'t. It is guaranteed that the i-th character of the i-th line is always equal to 1.
The last line contains n space-separated integers: a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), where ai represents the number of messages that the i-th employee should get according to Igor.
In the first line print a single integer m \xe2\x80\x94 the number of employees who should come to the party so that Igor loses the dispute.
In the second line print m space-separated integers \xe2\x80\x94 the numbers of these employees in an arbitrary order.
If Igor wins the dispute in any case, print -1.
If there are multiple possible solutions, print any of them.
In the first sample Igor supposes that the first employee will receive 0 messages. Since he isn\'t contained in any other contact list he must come to the party in order to receive one message from himself. If he is the only who come to the party then he will receive 1 message, the second employee will receive 0 messages and the third will also receive 1 message. Thereby Igor won\'t guess any number.
In the second sample if the single employee comes to the party he receives 1 message and Igor wins, so he shouldn\'t do it.
In the third sample the first employee will receive 2 messages, the second \xe2\x80\x94 3, the third \xe2\x80\x94 2, the fourth \xe2\x80\x94 3." "2300  x1503"
549A "Face Detection" "implementation, strings" "The developers of Looksery have to write an efficient algorithm that detects faces on a picture. Unfortunately, they are currently busy preparing a contest for you, so you will have to do it for them. 
In this problem an image is a rectangular table that consists of lowercase Latin letters. A face on the image is a 2\xe2\x80\x89\xc3\x97\xe2\x80\x892 square, such that from the four letters of this square you can make word ""face"". 
You need to write a program that determines the number of faces on the image. The squares that correspond to the faces can overlap.
The first line contains two space-separated integers, n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) \xe2\x80\x94 the height and the width of the image, respectively.
Next n lines define the image. Each line contains m lowercase Latin letters.
In the single line print the number of faces on the image.
In the first sample the image contains a single face, located in a square with the upper left corner at the second line and the second column: 
In the second sample the image also contains exactly one face, its upper left corner is at the second row and the first column.
In the third sample two faces are shown: 
In the fourth sample the image has no faces on it." "900  x9480"
548B "Mike and Fun" "brute force, dp, greedy, implementation" "Mike and some bears are playing a game just for fun. Mike is the judge. All bears except Mike are standing in an n\xe2\x80\x89\xc3\x97\xe2\x80\x89m grid, there\'s exactly one bear in each cell. We denote the bear standing in column number j of row number i by (i,\xe2\x80\x89j). Mike\'s hands are on his ears (since he\'s the judge) and each bear standing in the grid has hands either on his mouth or his eyes.
They play for q rounds. In each round, Mike chooses a bear (i,\xe2\x80\x89j) and tells him to change his state i. e. if his hands are on his mouth, then he\'ll put his hands on his eyes or he\'ll put his hands on his mouth otherwise. After that, Mike wants to know the score of the bears.
Score of the bears is the maximum over all rows of number of consecutive bears with hands on their eyes in that row.
Since bears are lazy, Mike asked you for help. For each round, tell him the score of these bears after changing the state of a bear selected in that round. 
The first line of input contains three integers n, m and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500 and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000).
The next n lines contain the grid description. There are m integers separated by spaces in each line. Each of these numbers is either 0 (for mouth) or 1 (for eyes).
The next q lines contain the information about the rounds. Each of them contains two integers i and j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m), the row number and the column number of the bear changing his state.
After each round, print the current score of the bears." "1400  x8466"
548A "Mike and Fax" "brute force, implementation, strings" "While Mike was walking in the subway, all the stuff in his back-bag dropped on the ground. There were several fax messages among them. He concatenated these strings in some order and now he has string s.
He is not sure if this is his own back-bag or someone else\'s. He remembered that there were exactly k messages in his own bag, each was a palindrome string and all those strings had the same length.
He asked you to help him and tell him if he has worn his own back-bag. Check if the given string s is a concatenation of k palindromes of the same length.
The first line of input contains string s containing lowercase English letters (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000).
The second line contains integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000).
Print ""YES""(without quotes) if he has worn his own back-bag or ""NO""(without quotes) otherwise.
Palindrome is a string reading the same forward and backward.
In the second sample, the faxes in his back-bag can be ""saddas"" and ""tavvat""." "1100  x10009"
547E "Mike and Friends" "data structures, string suffix structures, strings, trees" "What-The-Fatherland is a strange country! All phone numbers there are strings consisting of lowercase English letters. What is double strange that a phone number can be associated with several bears!
In that country there is a rock band called CF consisting of n bears (including Mike) numbered from 1 to n. 
Phone number of i-th member of CF is si. May 17th is a holiday named Phone Calls day. In the last Phone Calls day, everyone called all the numbers that are substrings of his/her number (one may call some number several times). In particular, everyone called himself (that was really strange country).
Denote as call(i,\xe2\x80\x89j) the number of times that i-th member of CF called the j-th member of CF. 
The geek Mike has q questions that he wants to ask you. In each question he gives you numbers l,\xe2\x80\x89r and k and you should tell him the number 
The first line of input contains integers n and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105 and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xe2\x80\x89\xc3\x97\xe2\x80\x89105).
The next n lines contain the phone numbers, i-th line contains a string si consisting of lowercase English letters ().
The next q lines contain the information about the questions, each of them contains integers l,\xe2\x80\x89r and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
Print the answer for each question in a separate line." "2800  x2115"
547D "Mike and Fish" "constructive algorithms, dfs and similar, graphs" "As everyone knows, bears love fish. But Mike is a strange bear; He hates fish! The even more strange thing about him is he has an infinite number of blue and red fish. 
He has marked n distinct points in the plane. i-th point is point (xi,\xe2\x80\x89yi). He wants to put exactly one fish in each of these points such that the difference between the number of red fish and the blue fish on each horizontal or vertical line is at most 1.
He can\'t find a way to perform that! Please help him.
The first line of input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105).
The next n lines contain the information about the points, i-th line contains two integers xi and yi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105), the i-th point coordinates.
It is guaranteed that there is at least one valid answer.
Print the answer as a sequence of n characters \'r\' (for red) or \'b\' (for blue) where i-th character denotes the color of the fish in the i-th point." "2600  x2630"
547C "Mike and Foam" "bitmasks, combinatorics, dp, math, number theory" "Mike is a bartender at Rico\'s bar. At Rico\'s, they put beer glasses in a special shelf. There are n kinds of beer at Rico\'s numbered from 1 to n. i-th kind of beer has ai milliliters of foam on it.
Maxim is Mike\'s boss. Today he told Mike to perform q queries. Initially the shelf is empty. In each request, Maxim gives him a number x. If beer number x is already in the shelf, then Mike should remove it from the shelf, otherwise he should put it in the shelf.
After each query, Mike should tell him the score of the shelf. Bears are geeks. So they think that the score of a shelf is the number of pairs (i,\xe2\x80\x89j) of glasses in the shelf such that i\xe2\x80\x89<\xe2\x80\x89j and  where  is the greatest common divisor of numbers a and b.
Mike is tired. So he asked you to help him in performing these requests.
The first line of input contains numbers n and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105), the number of different kinds of beer and number of queries.
The next line contains n space separated integers, a1,\xe2\x80\x89a2,\xe2\x80\x89... ,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xe2\x80\x89\xc3\x97\xe2\x80\x89105), the height of foam in top of each kind of beer.
The next q lines contain the queries. Each query consists of a single integer integer x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), the index of a beer that should be added or removed from the shelf.
For each query, print the answer for that query in one line." "2300  x2888"
547B "Mike and Feet" "binary search, data structures, dp, dsu" "Mike is the president of country What-The-Fatherland. There are n bears living in this country besides Mike. All of them are standing in a line and they are numbered from 1 to n from left to right. i-th bear is exactly ai feet high. 
A group of bears is a non-empty contiguous segment of the line. The size of a group is the number of bears in that group. The strength of a group is the minimum height of the bear in that group.
Mike is a curious to know for each x such that 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n the maximum strength among all groups of size x.
The first line of input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105), the number of bears.
The second line contains n integers separated by space, a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), heights of bears.
Print n integers in one line. For each x from 1 to n, print the maximum strength among all groups of size x." "1900  x8813"
547A "Mike and Frog" "brute force, greedy, implementation, math" "Mike has a frog and a flower. His frog is named Xaniar and his flower is named Abol. Initially(at time 0), height of Xaniar is h1 and height of Abol is h2. Each second, Mike waters Abol and Xaniar.
So, if height of Xaniar is h1 and height of Abol is h2, after one second height of Xaniar will become  and height of Abol will become  where x1,\xe2\x80\x89y1,\xe2\x80\x89x2 and y2 are some integer numbers and  denotes the remainder of a modulo b.
Mike is a competitive programmer fan. He wants to know the minimum time it takes until height of Xania is a1 and height of Abol is a2.
Mike has asked you for your help. Calculate the minimum time or say it will never happen.
The first line of input contains integer m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
The second line of input contains integers h1 and a1 (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89h1,\xe2\x80\x89a1\xe2\x80\x89<\xe2\x80\x89m).
The third line of input contains integers x1 and y1 (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x1,\xe2\x80\x89y1\xe2\x80\x89<\xe2\x80\x89m).
The fourth line of input contains integers h2 and a2 (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89h2,\xe2\x80\x89a2\xe2\x80\x89<\xe2\x80\x89m).
The fifth line of input contains integers x2 and y2 (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x2,\xe2\x80\x89y2\xe2\x80\x89<\xe2\x80\x89m).
It is guaranteed that h1\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89a1 and h2\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89a2.
Print the minimum number of seconds until Xaniar reaches height a1 and Abol reaches height a2 or print -1 otherwise.
In the first sample, heights sequences are following:
Xaniar: 
Abol: " "2200  x2595"
546E "Soldier and Traveling" "flows, graphs, math" "In the country there are n cities and m bidirectional roads between them. Each city has an army. Army of the i-th city consists of ai soldiers. Now soldiers roam. After roaming each soldier has to either stay in his city or to go to the one of neighboring cities by at moving along at most one road.
Check if is it possible that after roaming there will be exactly bi soldiers in the i-th city.
First line of input consists of two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200).
Next line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100).
Next line contains n integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100).
Then m lines follow, each of them consists of two integers p and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, p\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89q) denoting that there is an undirected road between cities p and q. 
It is guaranteed that there is at most one road between each pair of cities.
If the conditions can not be met output single word ""NO"".
Otherwise output word ""YES"" and then n lines, each of them consisting of n integers. Number in the i-th line in the j-th column should denote how many soldiers should road from city i to city j (if i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j) or how many soldiers should stay in city i (if i\xe2\x80\x89=\xe2\x80\x89j).
If there are several possible answers you may output any of them." "2100  x3668"
546D "Soldier and Number Game" "constructive algorithms, dp, math, number theory" "Two soldiers are playing a game. At the beginning first of them chooses a positive integer n and gives it to the second soldier. Then the second one tries to make maximum possible number of rounds. Each round consists of choosing a positive integer x\xe2\x80\x89>\xe2\x80\x891, such that n is divisible by x and replacing n with n\xe2\x80\x89/\xe2\x80\x89x. When n becomes equal to 1 and there is no more possible valid moves the game is over and the score of the second soldier is equal to the number of rounds he performed.
To make the game more interesting, first soldier chooses n of form a!\xe2\x80\x89/\xe2\x80\x89b! for some positive integer a and b (a\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89b). Here by k! we denote the factorial of k that is defined as a product of all positive integers not large than k.
What is the maximum possible score of the second soldier?
First line of input consists of single integer t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000) denoting number of games soldiers play.
Then follow t lines, each contains pair of integers a and b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xe2\x80\x89000\xe2\x80\x89000) defining the value of n for a game.
For each game output a maximum score that the second soldier can get." "1700  x11962"
546C "Soldier and Cards" "brute force, dfs and similar, games" "Two bored soldiers are playing card war. Their card deck consists of exactly n cards, numbered from 1 to n, all values are different. They divide cards between them in some manner, it\'s possible that they have different number of cards. Then they play a ""war""-like card game. 
The rules are following. On each turn a fight happens. Each of them picks card from the top of his stack and puts on the table. The one whose card value is bigger wins this fight and takes both cards from the table to the bottom of his stack. More precisely, he first takes his opponent\'s card and puts to the bottom of his stack, and then he puts his card to the bottom of his stack. If after some turn one of the player\'s stack becomes empty, he loses and the other one wins. 
You have to calculate how many fights will happen and who will win the game, or state that game won\'t end.
First line contains a single integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910), the number of cards.
Second line contains integer k1 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891), the number of the first soldier\'s cards. Then follow k1 integers that are the values on the first soldier\'s cards, from top to bottom of his stack.
Third line contains integer k2 (k1\xe2\x80\x89+\xe2\x80\x89k2\xe2\x80\x89=\xe2\x80\x89n), the number of the second soldier\'s cards. Then follow k2 integers that are the values on the second soldier\'s cards, from top to bottom of his stack.
All card values are different.
If somebody wins in this game, print 2 integers where the first one stands for the number of fights before end of game and the second one is 1 or 2 showing which player has won.
If the game won\'t end and will continue forever output \xe2\x80\x89-\xe2\x80\x891.
First sample: 
Second sample: " "1400  x17692"
546B "Soldier and Badges" "brute force, greedy, implementation, sortings" "Colonel has n badges. He wants to give one badge to every of his n soldiers. Each badge has a coolness factor, which shows how much it\'s owner reached. Coolness factor can be increased by one for the cost of one coin. 
For every pair of soldiers one of them should get a badge with strictly higher factor than the second one. Exact values of their factors aren\'t important, they just need to have distinct factors. 
Colonel knows, which soldier is supposed to get which badge initially, but there is a problem. Some of badges may have the same factor of coolness. Help him and calculate how much money has to be paid for making all badges have different factors of coolness.
First line of input consists of one integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893000).
Next line consists of n integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), which stand for coolness factor of each badge.
Output single integer \xe2\x80\x94 minimum amount of coins the colonel has to pay.
In first sample test we can increase factor of first badge by 1.
In second sample test we can increase factors of the second and the third badge by 1." "1200  x17648"
546A "Soldier and Bananas" "brute force, implementation, math" "A soldier wants to buy w bananas in the shop. He has to pay k dollars for the first banana, 2k dollars for the second one and so on (in other words, he has to pay i\xc2\xb7k dollars for the i-th banana). 
He has n dollars. How many dollars does he have to borrow from his friend soldier to buy w bananas?
The first line contains three positive integers k,\xe2\x80\x89n,\xe2\x80\x89w (1\xe2\x80\x89\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89\xe2\x80\x89k,\xe2\x80\x89w\xe2\x80\x89\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89\xe2\x80\x891000, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), the cost of the first banana, initial number of dollars the soldier has and number of bananas he wants. 
Output one integer \xe2\x80\x94 the amount of dollars that the soldier must borrow from his friend. If he doesn\'t have to borrow money, output 0." "800  x184793"
545E "Paths and Trees" "graphs, greedy, shortest paths" "Little girl Susie accidentally found her elder brother\'s notebook. She has many things to do, more important than solving problems, but she found this problem too interesting, so she wanted to know its solution and decided to ask you about it. So, the problem statement is as follows.
Let\'s assume that we are given a connected weighted undirected graph G\xe2\x80\x89=\xe2\x80\x89(V,\xe2\x80\x89E) (here V is the set of vertices, E is the set of edges). The shortest-path tree from vertex u is such graph G1\xe2\x80\x89=\xe2\x80\x89(V,\xe2\x80\x89E1) that is a tree with the set of edges E1 that is the subset of the set of edges of the initial graph E, and the lengths of the shortest paths from u to any vertex to G and to G1 are the same. 
You are given a connected weighted undirected graph G and vertex u. Your task is to find the shortest-path tree of the given graph from vertex u, the total weight of whose edges is minimum possible.
The first line contains two numbers, n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xc2\xb7105, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xc2\xb7105) \xe2\x80\x94 the number of vertices and edges of the graph, respectively.
Next m lines contain three integers each, representing an edge \xe2\x80\x94 ui,\xe2\x80\x89vi,\xe2\x80\x89wi \xe2\x80\x94 the numbers of vertices connected by an edge and the weight of the edge (ui\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89vi,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). It is guaranteed that graph is connected and that there is no more than one edge between any pair of vertices.
The last line of the input contains integer u (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89u\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the number of the start vertex.
In the first line print the minimum total weight of the edges of the tree.
In the next line print the indices of the edges that are included in the tree, separated by spaces. The edges are numbered starting from 1 in the order they follow in the input. You may print the numbers of the edges in any order.
If there are multiple answers, print any of them.
In the first sample there are two possible shortest path trees:
And, for example, a tree with edges 1\xe2\x80\x89\xe2\x80\x93\xe2\x80\x892 and 1\xe2\x80\x89\xe2\x80\x93\xe2\x80\x893 won\'t be a shortest path tree for vertex 3, because the distance from vertex 3 to vertex 2 in this tree equals 3, and in the original graph it is 1." "2000  x4678"
545D Queue "greedy, implementation, sortings" "Little girl Susie went shopping with her mom and she wondered how to improve service quality. 
There are n people in the queue. For each person we know time ti needed to serve him. A person will be disappointed if the time he waits is more than the time needed to serve him. The time a person waits is the total time when all the people who stand in the queue in front of him are served. Susie thought that if we swap some people in the queue, then we can decrease the number of people who are disappointed. 
Help Susie find out what is the maximum number of not disappointed people can be achieved by swapping people in the queue.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The next line contains n integers ti (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), separated by spaces.
Print a single number \xe2\x80\x94 the maximum number of not disappointed people in the queue.
Value 4 is achieved at such an arrangement, for example: 1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x895,\xe2\x80\x8915. Thus, you can make everything feel not disappointed except for the person with time 5." "1300  x25302"
545C Woodcutters "dp, greedy" "Little Susie listens to fairy tales before bed every day. Today\'s fairy tale was about wood cutters and the little girl immediately started imagining the choppers cutting wood. She imagined the situation that is described below.
There are n trees located along the road at points with coordinates x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn. Each tree has its height hi. Woodcutters can cut down a tree and fell it to the left or to the right. After that it occupies one of the segments [xi\xe2\x80\x89-\xe2\x80\x89hi,\xe2\x80\x89xi] or [xi;xi\xe2\x80\x89+\xe2\x80\x89hi]. The tree that is not cut down occupies a single point with coordinate xi. Woodcutters can fell a tree if the segment to be occupied by the fallen tree doesn\'t contain any occupied point. The woodcutters want to process as many trees as possible, so Susie wonders, what is the maximum number of trees to fell. 
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of trees.
Next n lines contain pairs of integers xi,\xe2\x80\x89hi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the coordinate and the height of the \xd1\x96-th tree.
The pairs are given in the order of ascending xi. No two trees are located at the point with the same coordinate.
Print a single number \xe2\x80\x94 the maximum number of trees that you can cut down by the given rules.
In the first sample you can fell the trees like that: 
In the second sample you can also fell 4-th tree to the right, after that it will occupy segment [10;19]." "1500  x28256"
545B "Equidistant String" greedy "Little Susie loves strings. Today she calculates distances between them. As Susie is a small girl after all, her strings contain only digits zero and one. She uses the definition of Hamming distance:
We will define the distance between two strings s and t of the same length consisting of digits zero and one as the number of positions i, such that si isn\'t equal to ti. 
As besides everything else Susie loves symmetry, she wants to find for two strings s and t of length n such string p of length n, that the distance from p to s was equal to the distance from p to t.
It\'s time for Susie to go to bed, help her find such string p or state that it is impossible.
The first line contains string s of length n. 
The second line contains string t of length n.
The length of string n is within range from 1 to 105. It is guaranteed that both strings contain only digits zero and one.
Print a string of length n, consisting of digits zero and one, that meets the problem statement. If no such string exist, print on a single line ""impossible"" (without the quotes).
If there are multiple possible answers, print any of them.
In the first sample different answers are possible, namely \xe2\x80\x94 0010, 0011, 0110, 0111, 1000, 1001, 1100, 1101." "1100  x11662"
545A "Toy Cars" implementation "Little Susie, thanks to her older brother, likes to play with cars. Today she decided to set up a tournament between them. The process of a tournament is described in the next paragraph.
There are n toy cars. Each pair collides. The result of a collision can be one of the following: no car turned over, one car turned over, both cars turned over. A car is good if it turned over in no collision. The results of the collisions are determined by an n\xe2\x80\x89\xc3\x97\xe2\x80\x89n matrix \xd0\x90: there is a number on the intersection of the \xd1\x96-th row and j-th column that describes the result of the collision of the \xd1\x96-th and the j-th car: 
Susie wants to find all the good cars. She quickly determined which cars are good. Can you cope with the task?
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of cars.
Each of the next n lines contains n space-separated integers that determine matrix A. 
It is guaranteed that on the main diagonal there are \xe2\x80\x89-\xe2\x80\x891, and \xe2\x80\x89-\xe2\x80\x891 doesn\'t appear anywhere else in the matrix.
It is guaranteed that the input is correct, that is, if Aij\xe2\x80\x89=\xe2\x80\x891, then Aji\xe2\x80\x89=\xe2\x80\x892, if Aij\xe2\x80\x89=\xe2\x80\x893, then Aji\xe2\x80\x89=\xe2\x80\x893, and if Aij\xe2\x80\x89=\xe2\x80\x890, then Aji\xe2\x80\x89=\xe2\x80\x890.
Print the number of good cars and in the next line print their space-separated indices in the increasing order." "900  x11612"
544B "Sea and Islands" "constructive algorithms, implementation" "A map of some object is a rectangular field consisting of n rows and n columns. Each cell is initially occupied by the sea but you can cover some some cells of the map with sand so that exactly k islands appear on the map. We will call a set of sand cells to be island if it is possible to get from each of them to each of them by moving only through sand cells and by moving from a cell only to a side-adjacent cell. The cells are called to be side-adjacent if they share a vertical or horizontal side. It is easy to see that islands do not share cells (otherwise they together form a bigger island).
Find a way to cover some cells with sand so that exactly k islands appear on the n\xe2\x80\x89\xc3\x97\xe2\x80\x89n map, or determine that no such way exists. 
The single line contains two positive integers n, k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n2) \xe2\x80\x94 the size of the map and the number of islands you should form.
If the answer doesn\'t exist, print ""NO"" (without the quotes) in a single line.
Otherwise, print ""YES"" in the first line. In the next n lines print the description of the map. Each of the lines of the description must consist only of characters \'S\' and \'L\', where \'S\' is a cell that is occupied by the sea and \'L\' is the cell covered with sand. The length of each line of the description must equal n.
If there are multiple answers, you may print any of them.
You should not maximize the sizes of islands." "1400  x8033"
544A "Set of Strings" "implementation, strings" "You are given a string q. A sequence of k strings s1,\xe2\x80\x89s2,\xe2\x80\x89...,\xe2\x80\x89sk is called beautiful, if the concatenation of these strings is string q (formally, s1\xe2\x80\x89+\xe2\x80\x89s2\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89sk\xe2\x80\x89=\xe2\x80\x89q) and the first characters of these strings are distinct.
Find any beautiful sequence of strings or determine that the beautiful sequence doesn\'t exist.
The first line contains a positive integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8926) \xe2\x80\x94 the number of strings that should be in a beautiful sequence. 
The second line contains string q, consisting of lowercase Latin letters. The length of the string is within range from 1 to 100, inclusive.
If such sequence doesn\'t exist, then print in a single line ""NO"" (without the quotes). Otherwise, print in the first line ""YES"" (without the quotes) and in the next k lines print the beautiful sequence of strings s1,\xe2\x80\x89s2,\xe2\x80\x89...,\xe2\x80\x89sk.
If there are multiple possible answers, print any of them.
In the second sample there are two possible answers: {""aaaca"",\xe2\x80\x89""s""} and {""aaa"",\xe2\x80\x89""cas""}." "1100  x8272"
543E "Listening to Music" "constructive algorithms, data structures" "Please note that the memory limit differs from the standard.
You really love to listen to music. During the each of next s days you will listen to exactly m songs from the playlist that consists of exactly n songs. Let\'s number the songs from the playlist with numbers from 1 to n, inclusive. The quality of song number i is ai.
On the i-th day you choose some integer v (li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89v\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri) and listen to songs number v,\xe2\x80\x89v\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89v\xe2\x80\x89+\xe2\x80\x89m\xe2\x80\x89-\xe2\x80\x891. On the i-th day listening to one song with quality less than qi increases your displeasure by exactly one.
Determine what minimum displeasure you can get on each of the s next days. 
The first line contains two positive integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105). The second line contains n positive integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89<\xe2\x80\x89230) \xe2\x80\x94 the description of songs from the playlist. 
The next line contains a single number s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of days that you consider.
The next s lines contain three integers each li,\xe2\x80\x89ri,\xe2\x80\x89xi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x89m\xe2\x80\x89+\xe2\x80\x891; 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89<\xe2\x80\x89230) \xe2\x80\x94 the description of the parameters for the i-th day. In order to calculate value qi, you need to use formula: , where ansi is the answer to the problem for day i. Assume that ans0\xe2\x80\x89=\xe2\x80\x890. 
Print exactly s integers ans1,\xe2\x80\x89ans2,\xe2\x80\x89...,\xe2\x80\x89anss, where ansi is the minimum displeasure that you can get on day i." "3200  x300"
543D "Road Improvement" "dp, trees" "The country has n cities and n\xe2\x80\x89-\xe2\x80\x891 bidirectional roads, it is possible to get from every city to any other one if you move only along the roads. The cities are numbered with integers from 1 to n inclusive.
All the roads are initially bad, but the government wants to improve the state of some roads. We will assume that the citizens are happy about road improvement if the path from the capital located in city x to any other city contains at most one bad road.
Your task is \xe2\x80\x94 for every possible x determine the number of ways of improving the quality of some roads in order to meet the citizens\' condition. As those values can be rather large, you need to print each value modulo 1\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89007 (109\xe2\x80\x89+\xe2\x80\x897).
The first line of the input contains a single integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of cities in the country. Next line contains n\xe2\x80\x89-\xe2\x80\x891 positive integers p2,\xe2\x80\x89p3,\xe2\x80\x89p4,\xe2\x80\x89...,\xe2\x80\x89pn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89-\xe2\x80\x891) \xe2\x80\x94 the description of the roads in the country. Number pi means that the country has a road connecting city pi and city i. 
Print n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an, where ai is the sought number of ways to improve the quality of the roads modulo 1\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89007 (109\xe2\x80\x89+\xe2\x80\x897), if the capital of the country is at city number i." "2300  x2753"
543C "Remembering Strings" "bitmasks, dp" "You have multiset of n strings of the same length, consisting of lowercase English letters. We will say that those strings are easy to remember if for each string there is some position i and some letter c of the English alphabet, such that this string is the only string in the multiset that has letter c in position i.
For example, a multiset of strings {""abc"", ""aba"", ""adc"", ""ada""} are not easy to remember. And multiset {""abc"", ""ada"", ""ssa""} is easy to remember because: 
You want to change your multiset a little so that it is easy to remember. For aij coins, you can change character in the j-th position of the i-th string into any other lowercase letter of the English alphabet. Find what is the minimum sum you should pay in order to make the multiset of strings easy to remember.
The first line contains two integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920) \xe2\x80\x94 the number of strings in the multiset and the length of the strings respectively. Next n lines contain the strings of the multiset, consisting only of lowercase English letters, each string\'s length is m.
Next n lines contain m integers each, the i-th of them contains integers ai1,\xe2\x80\x89ai2,\xe2\x80\x89...,\xe2\x80\x89aim (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89aij\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
Print a single number \xe2\x80\x94 the answer to the problem." "2500  x1402"
543B "Destroying Roads" "constructive algorithms, graphs, shortest paths" "In some country there are exactly n cities and m bidirectional roads connecting the cities. Cities are numbered with integers from 1 to n. If cities a and b are connected by a road, then in an hour you can go along this road either from city a to city b, or from city b to city a. The road network is such that from any city you can get to any other one by moving along the roads.
You want to destroy the largest possible number of roads in the country so that the remaining roads would allow you to get from city s1 to city t1 in at most l1 hours and get from city s2 to city t2 in at most l2 hours.
Determine what maximum number of roads you need to destroy in order to meet the condition of your plan. If it is impossible to reach the desired result, print -1.
The first line contains two integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893000, ) \xe2\x80\x94 the number of cities and roads in the country, respectively. 
Next m lines contain the descriptions of the roads as pairs of integers ai, bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi). It is guaranteed that the roads that are given in the description can transport you from any city to any other one. It is guaranteed that each pair of cities has at most one road between them.
The last two lines contains three integers each, s1, t1, l1 and s2, t2, l2, respectively (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89si,\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
Print a single number \xe2\x80\x94 the answer to the problem. If the it is impossible to meet the conditions, print -1." "2100  x4138"
543A "Writing Code" dp "Programmers working on a large project have just received a task to write exactly m lines of code. There are n programmers working on a project, the i-th of them makes exactly ai bugs in every line of code that he writes. 
Let\'s call a sequence of non-negative integers v1,\xe2\x80\x89v2,\xe2\x80\x89...,\xe2\x80\x89vn a plan, if v1\xe2\x80\x89+\xe2\x80\x89v2\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89vn\xe2\x80\x89=\xe2\x80\x89m. The programmers follow the plan like that: in the beginning the first programmer writes the first v1 lines of the given task, then the second programmer writes v2 more lines of the given task, and so on. In the end, the last programmer writes the remaining lines of the code. Let\'s call a plan good, if all the written lines of the task contain at most b bugs in total.
Your task is to determine how many distinct good plans are there. As the number of plans can be large, print the remainder of this number modulo given positive integer mod.
The first line contains four integers n, m, b, mod (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500; 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89mod\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109\xe2\x80\x89+\xe2\x80\x897) \xe2\x80\x94 the number of programmers, the number of lines of code in the task, the maximum total number of bugs respectively and the modulo you should use when printing the answer.
The next line contains n space-separated integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500) \xe2\x80\x94 the number of bugs per line for each programmer.
Print a single integer \xe2\x80\x94 the answer to the problem modulo mod." "1800  x8009"
542F Quest "dp, greedy" "Polycarp is making a quest for his friends. He has already made n tasks, for each task the boy evaluated how interesting it is as an integer qi, and the time ti in minutes needed to complete the task. 
An interesting feature of his quest is: each participant should get the task that is best suited for him, depending on his preferences. The task is chosen based on an interactive quiz that consists of some questions. The player should answer these questions with ""yes"" or ""no"". Depending on the answer to the question, the participant either moves to another question or goes to one of the tasks that are in the quest. In other words, the quest is a binary tree, its nodes contain questions and its leaves contain tasks. 
We know that answering any of the questions that are asked before getting a task takes exactly one minute from the quest player. Polycarp knows that his friends are busy people and they can\'t participate in the quest for more than T minutes. Polycarp wants to choose some of the n tasks he made, invent the corresponding set of questions for them and use them to form an interactive quiz as a binary tree so that no matter how the player answers quiz questions, he spends at most T minutes on completing the whole quest (that is, answering all the questions and completing the task). Specifically, the quest can contain zero questions and go straight to the task. Each task can only be used once (i.e., the people who give different answers to questions should get different tasks).
Polycarp wants the total ""interest"" value of the tasks involved in the quest to be as large as possible. Help him determine the maximum possible total interest value of the task considering that the quest should be completed in T minutes at any variant of answering questions.
The first line contains two integers n and T (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89T\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of tasks made by Polycarp and the maximum time a quest player should fit into.
Next n lines contain two integers ti,\xe2\x80\x89qi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89T, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89qi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) each \xe2\x80\x94 the time in minutes needed to complete the i-th task and its interest value.
Print a single integer \xe2\x80\x94 the maximum possible total interest value of all the tasks in the quest.
In the first sample test all the five tasks can be complemented with four questions and joined into one quest.
In the second sample test it is impossible to use all the five tasks, but you can take two of them, the most interesting ones.
In the third sample test the optimal strategy is to include only the second task into the quest.
Here is the picture that illustrates the answers to the sample tests. The blue circles represent the questions, the two arrows that go from every circle represent where a person goes depending on his answer to that question. The tasks are the red ovals." "2100  x927"
542E "Playing on Graph" "graphs, shortest paths" "Vova and Marina love offering puzzles to each other. Today Marina offered Vova to cope with the following task.
Vova has a non-directed graph consisting of n vertices and m edges without loops and multiple edges. Let\'s define the operation of contraction two vertices a and b that are not connected by an edge. As a result of this operation vertices a and b are deleted and instead of them a new vertex x is added into the graph, and also edges are drawn from it to all vertices that were connected with a or with b (specifically, if the vertex was connected with both a and b, then also exactly one edge is added from x to it). Thus, as a result of contraction again a non-directed graph is formed, it contains no loops nor multiple edges, and it contains (n\xe2\x80\x89-\xe2\x80\x891) vertices.
Vova must perform the contraction an arbitrary number of times to transform the given graph into a chain of the maximum length. A chain of length k (k\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x890) is a connected graph whose vertices can be numbered with integers from 1 to k\xe2\x80\x89+\xe2\x80\x891 so that the edges of the graph connect all pairs of vertices (i,\xe2\x80\x89i\xe2\x80\x89+\xe2\x80\x891) (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k) and only them. Specifically, the graph that consists of one vertex is a chain of length 0. The vertices that are formed as a result of the contraction are allowed to be used in the following operations of contraction.
Help Vova cope with his girlfriend\'s task. Find the maximum length of the chain that can be obtained from the resulting graph or else determine that it is impossible to obtain the chain.
The first line contains two integers n,\xe2\x80\x89m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of vertices and the number of edges in the original graph.
Next m lines contain the descriptions of edges in the format ai,\xe2\x80\x89bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi), which means that there is an edge between vertices ai and bi. It is guaranteed that there is at most one edge between each pair of vertexes.
If it is impossible to obtain a chain from the given graph, print \xe2\x80\x89-\xe2\x80\x891. Otherwise, print the maximum possible number of edges in the resulting chain.
In the first sample test you can contract vertices 4 and 5 and obtain a chain of length 3.
In the second sample test it is initially impossible to contract any pair of vertexes, so it is impossible to achieve the desired result.
In the third sample test you can contract vertices 1 and 2 and obtain a chain of length 2." "2600  x865"
542D "Superhero's Job" "dfs and similar, dp, hashing, math, number theory" "It\'s tough to be a superhero. And it\'s twice as tough to resist the supervillain who is cool at math. Suppose that you\'re an ordinary Batman in an ordinary city of Gotham. Your enemy Joker mined the building of the city administration and you only have several minutes to neutralize the charge. To do that you should enter the cancel code on the bomb control panel.
However, that mad man decided to give you a hint. This morning the mayor found a playing card under his pillow. There was a line written on the card:
The bomb has a note saying ""J(x)\xe2\x80\x89=\xe2\x80\x89A"", where A is some positive integer. You suspect that the cancel code is some integer x that meets the equation J(x)\xe2\x80\x89=\xe2\x80\x89A. Now in order to decide whether you should neutralize the bomb or run for your life, you\'ve got to count how many distinct positive integers x meet this equation.
The single line of the input contains a single integer A (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891012).
Print the number of solutions of the equation J(x)\xe2\x80\x89=\xe2\x80\x89A.
Record x|n means that number n divides number x.
 is defined as the largest positive integer that divides both a and b.
In the first sample test the only suitable value of x is 2. Then J(2)\xe2\x80\x89=\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x892.
In the second sample test the following values of x match:" "2600  x514"
542C "Idempotent functions" "constructive algorithms, graphs, math" "Some time ago Leonid have known about idempotent functions. Idempotent function defined on a set {1,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89n} is such function , that for any  the formula g(g(x))\xe2\x80\x89=\xe2\x80\x89g(x) holds.
Let\'s denote as f(k)(x) the function f applied k times to the value x. More formally, f(1)(x)\xe2\x80\x89=\xe2\x80\x89f(x), f(k)(x)\xe2\x80\x89=\xe2\x80\x89f(f(k\xe2\x80\x89-\xe2\x80\x891)(x)) for each k\xe2\x80\x89>\xe2\x80\x891.
You are given some function . Your task is to find minimum positive integer k such that function f(k)(x) is idempotent.
In the first line of the input there is a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200) \xe2\x80\x94 the size of function f domain.
In the second line follow f(1),\xe2\x80\x89f(2),\xe2\x80\x89...,\xe2\x80\x89f(n) (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89f(i)\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n for each 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), the values of a function.
Output minimum k such that function f(k)(x) is idempotent.
In the first sample test function f(x)\xe2\x80\x89=\xe2\x80\x89f(1)(x) is already idempotent since f(f(1))\xe2\x80\x89=\xe2\x80\x89f(1)\xe2\x80\x89=\xe2\x80\x891, f(f(2))\xe2\x80\x89=\xe2\x80\x89f(2)\xe2\x80\x89=\xe2\x80\x892, f(f(3))\xe2\x80\x89=\xe2\x80\x89f(3)\xe2\x80\x89=\xe2\x80\x892, f(f(4))\xe2\x80\x89=\xe2\x80\x89f(4)\xe2\x80\x89=\xe2\x80\x894.
In the second sample test: 
In the third sample test: " "2000  x1135"
542B "Duck Hunt" "data structures" "A duck hunter is doing his favorite thing, hunting. He lives in a two dimensional world and is located at point (0,\xe2\x80\x890). As he doesn\'t like walking for his prey, he prefers to shoot only vertically up (because in this case, the ducks fall straight into his hands). The hunter doesn\'t reload the gun immediately \xe2\x80\x94 r or more seconds must pass between the shots. When the hunter shoots up, the bullet immediately hits all the ducks who are directly above the hunter.
In a two dimensional world each duck is a horizontal segment that moves horizontally in the negative direction of the Ox axis at the speed 1 length unit per second. For each duck we know the values hi and ti \xe2\x80\x94 the x-coordinates of its head (the left end of the segment) and its tail (the right end of the segment) at time 0. The height where the duck is flying isn\'t important as the gun shoots vertically up to the infinite height and hits all the ducks on its way. 
What maximum number of ducks can the hunter shoot? The duck is considered shot by the hunter if at the moment of the shot at least one of its point intersects the Oy axis. After the hunter shoots the duck, it falls and it can\'t be shot anymore. The hunter cannot make shots before the moment of time 0.
The first line of the input contains integers n, r (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of ducks and the minimum time in seconds between the shots. 
Then n lines follow, each of them contains two integers hi,\xe2\x80\x89ti (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89<\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the x-coordinate of the head and tail of the i-th duck at the moment 0.
Print a single integer \xe2\x80\x94 the maximum number of ducks that can be shot by the hunter.
In the first sample the hunter must shoot at time 0, this shot kills ducks 1 and 3. Then the hunter needs to reload the gun and shoot again at time 3. His second shot hits the tail of duck 2.
In the second sample the hunter can make shots at times 0 and 6 to hit three ducks." "3100  x205"
542A "Place Your Ad Here" "data structures, sortings" "Ivan Anatolyevich\'s agency is starting to become famous in the town. 
They have already ordered and made n TV commercial videos. Each video is made in a special way: the colors and the soundtrack are adjusted to the time of the day and the viewers\' mood. That\'s why the i-th video can only be shown within the time range of [li,\xe2\x80\x89ri] (it is not necessary to use the whole segment but the broadcast time should be within this segment).
Now it\'s time to choose a TV channel to broadcast the commercial. Overall, there are m TV channels broadcasting in the city, the j-th one has cj viewers, and is ready to sell time [aj,\xe2\x80\x89bj] to broadcast the commercial.
Ivan Anatolyevich is facing a hard choice: he has to choose exactly one video i and exactly one TV channel j to broadcast this video and also a time range to broadcast [x,\xe2\x80\x89y]. At that the time range should be chosen so that it is both within range [li,\xe2\x80\x89ri] and within range [aj,\xe2\x80\x89bj].
Let\'s define the efficiency of the broadcast as value (y\xe2\x80\x89-\xe2\x80\x89x)\xc2\xb7cj \xe2\x80\x94 the total sum of time that all the viewers of the TV channel are going to spend watching the commercial. Help Ivan Anatolyevich choose the broadcast with the maximum efficiency!
The first line contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of commercial videos and channels, respectively.
Each of the following n lines contains two integers li, ri (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the segment of time when it is possible to show the corresponding video.
Each of the following m lines contains three integers aj, bj, cj (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89aj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89cj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), characterizing the TV channel.
In the first line print an integer \xe2\x80\x94 the maximum possible efficiency of the broadcast. If there is no correct way to get a strictly positive efficiency, print a zero.
If the maximum efficiency is strictly positive, in the second line also print the number of the video i (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and the number of the TV channel j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) in the most effective broadcast.
If there are multiple optimal answers, you can print any of them.
In the first sample test the most optimal solution is to show the second commercial using the first TV channel at time [2,\xe2\x80\x894]. The efficiency of such solution is equal to (4\xe2\x80\x89-\xe2\x80\x892)\xc2\xb72\xe2\x80\x89=\xe2\x80\x894.
In the second sample test Ivan Anatolievich\'s wish does not meet the options of the TV channel, the segments do not intersect, so the answer is zero." "2400  x575"
540E "Infinite Inversions" "binary search, data structures, implementation, sortings, trees" "There is an infinite sequence consisting of all positive integers in the increasing order: p\xe2\x80\x89=\xe2\x80\x89{1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x89...}. We performed n swap operations with this sequence. A swap(a,\xe2\x80\x89b) is an operation of swapping the elements of the sequence on positions a and b. Your task is to find the number of inversions in the resulting sequence, i.e. the number of such index pairs (i,\xe2\x80\x89j), that i\xe2\x80\x89<\xe2\x80\x89j and pi\xe2\x80\x89>\xe2\x80\x89pj.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of swap operations applied to the sequence.
Each of the next n lines contains two integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi) \xe2\x80\x94 the arguments of the swap operation.
Print a single integer \xe2\x80\x94 the number of inversions in the resulting sequence.
In the first sample the sequence is being modified as follows: . It has 4 inversions formed by index pairs (1,\xe2\x80\x894), (2,\xe2\x80\x893), (2,\xe2\x80\x894) and (3,\xe2\x80\x894)." "2100  x2134"
540D "Bad Luck Island" "dp, probabilities" "The Bad Luck Island is inhabited by three kinds of species: r rocks, s scissors and p papers. At some moments of time two random individuals meet (all pairs of individuals can meet equiprobably), and if they belong to different species, then one individual kills the other one: a rock kills scissors, scissors kill paper, and paper kills a rock. Your task is to determine for each species what is the probability that this species will be the only one to inhabit this island after a long enough period of time.
The single line contains three integers r, s and p (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r,\xe2\x80\x89s,\xe2\x80\x89p\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the original number of individuals in the species of rock, scissors and paper, respectively.
Print three space-separated real numbers: the probabilities, at which the rocks, the scissors and the paper will be the only surviving species, respectively. The answer will be considered correct if the relative or absolute error of each number doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x899." "1900  x5528"
540C "Ice Cave" "dfs and similar" "You play a computer game. Your character stands on some level of a multilevel ice cave. In order to move on forward, you need to descend one level lower and the only way to do this is to fall through the ice.
The level of the cave where you are is a rectangular square grid of n rows and m columns. Each cell consists either from intact or from cracked ice. From each cell you can move to cells that are side-adjacent with yours (due to some limitations of the game engine you cannot make jumps on the same place, i.e. jump from a cell to itself). If you move to the cell with cracked ice, then your character falls down through it and if you move to the cell with intact ice, then the ice on this cell becomes cracked.
Let\'s number the rows with integers from 1 to n from top to bottom and the columns with integers from 1 to m from left to right. Let\'s denote a cell on the intersection of the r-th row and the c-th column as (r,\xe2\x80\x89c). 
You are staying in the cell (r1,\xe2\x80\x89c1) and this cell is cracked because you\'ve just fallen here from a higher level. You need to fall down through the cell (r2,\xe2\x80\x89c2) since the exit to the next level is there. Can you do this?
The first line contains two integers, n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500) \xe2\x80\x94 the number of rows and columns in the cave description.
Each of the next n lines describes the initial state of the level of the cave, each line consists of m characters ""."" (that is, intact ice) and ""X"" (cracked ice).
The next line contains two integers, r1 and c1 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) \xe2\x80\x94 your initial coordinates. It is guaranteed that the description of the cave contains character \'X\' in cell (r1,\xe2\x80\x89c1), that is, the ice on the starting cell is initially cracked.
The next line contains two integers r2 and c2 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) \xe2\x80\x94 the coordinates of the cell through which you need to fall. The final cell may coincide with the starting one.
If you can reach the destination, print \'YES\', otherwise print \'NO\'.
In the first sample test one possible path is:

After the first visit of cell (2,\xe2\x80\x892) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended." "2000  x7351"
540B "School Marks" "greedy, implementation" "Little Vova studies programming in an elite school. Vova and his classmates are supposed to write n progress tests, for each test they will get a mark from 1 to p. Vova is very smart and he can write every test for any mark, but he doesn\'t want to stand out from the crowd too much. If the sum of his marks for all tests exceeds value x, then his classmates notice how smart he is and start distracting him asking to let them copy his homework. And if the median of his marks will be lower than y points (the definition of a median is given in the notes), then his mom will decide that he gets too many bad marks and forbid him to play computer games.
Vova has already wrote k tests and got marks a1,\xe2\x80\x89...,\xe2\x80\x89ak. He doesn\'t want to get into the first or the second situation described above and now he needs to determine which marks he needs to get for the remaining tests. Help him do that.
The first line contains 5 space-separated integers: n, k, p, x and y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89999, n is odd, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89<\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000, n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xc2\xb7p, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p). Here n is the number of tests that Vova is planned to write, k is the number of tests he has already written, p is the maximum possible mark for a test, x is the maximum total number of points so that the classmates don\'t yet disturb Vova, y is the minimum median point so that mom still lets him play computer games.
The second line contains k space-separated integers: a1,\xe2\x80\x89...,\xe2\x80\x89ak (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p) \xe2\x80\x94 the marks that Vova got for the tests he has already written.
If Vova cannot achieve the desired result, print ""-1"".
Otherwise, print n\xe2\x80\x89-\xe2\x80\x89k space-separated integers \xe2\x80\x94 the marks that Vova should get for the remaining tests. If there are multiple possible solutions, print any of them.
The median of sequence a1, ..., an where n is odd (in this problem n is always odd) is the element staying on (n\xe2\x80\x89+\xe2\x80\x891)\xe2\x80\x89/\xe2\x80\x892 position in the sorted list of ai.
In the first sample the sum of marks equals 3 + 5 + 4 + 4 + 1 = 17, what doesn\'t exceed 18, that means that Vova won\'t be disturbed by his classmates. And the median point of the sequence {1, 3, 4, 4, 5} equals to 4, that isn\'t less than 4, so his mom lets him play computer games.
Please note that you do not have to maximize the sum of marks or the median mark. Any of the answers: ""4 2"", ""2 4"", ""5 1"", ""1 5"", ""4 1"", ""1 4"" for the first test is correct.
In the second sample Vova got three \'5\' marks, so even if he gets two \'1\' marks, the sum of marks will be 17, that is more than the required value of 16. So, the answer to this test is ""-1""." "1700  x4710"
540A "Combination Lock" implementation "Scrooge McDuck keeps his most treasured savings in a home safe with a combination lock. Each time he wants to put there the treasures that he\'s earned fair and square, he has to open the lock.
The combination lock is represented by n rotating disks with digits from 0 to 9 written on them. Scrooge McDuck has to turn some disks so that the combination of digits on the disks forms a secret combination. In one move, he can rotate one disk one digit forwards or backwards. In particular, in one move he can go from digit 0 to digit 9 and vice versa. What minimum number of actions does he need for that?
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the number of disks on the combination lock.
The second line contains a string of n digits \xe2\x80\x94 the original state of the disks.
The third line contains a string of n digits \xe2\x80\x94 Scrooge McDuck\'s combination that opens the lock.
Print a single integer \xe2\x80\x94 the minimum number of moves Scrooge McDuck needs to open the lock.
In the sample he needs 13 moves:" "800  x32806"
538H "Summer Dichotomy" "2-sat, data structures, dfs and similar, greedy" "T students applied into the ZPP class of Summer Irrelevant School. The organizing committee of the school may enroll any number of them, but at least t students must be enrolled. The enrolled students should be divided into two groups in any manner (it is possible that one of the groups will be empty!)
During a shift the students from the ZPP grade are tutored by n teachers. Due to the nature of the educational process, each of the teachers should be assigned to exactly one of two groups (it is possible that no teacher will be assigned to some of the groups!). The i-th teacher is willing to work in a group as long as the group will have at least li and at most ri students (otherwise it would be either too boring or too hard). Besides, some pairs of the teachers don\'t like each other other and therefore can not work in the same group; in total there are m pairs of conflicting teachers.
You, as the head teacher of Summer Irrelevant School, have got a difficult task: to determine how many students to enroll in each of the groups and in which group each teacher will teach.
The first line contains two space-separated integers, t and T (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89T\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
The second line contains two space-separated integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The i-th of the next n lines contain integers li and ri (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
The next m lines describe the pairs of conflicting teachers. Each of these lines contain two space-separated integers \xe2\x80\x94 the indices of teachers in the pair. The teachers are indexed starting from one. It is guaranteed that no teacher has a conflict with himself and no pair of conflicting teachers occurs in the list more than once.
If the distribution is possible, print in the first line a single word \'POSSIBLE\' (without the quotes). In the second line print two space-separated integers n1 and n2 \xe2\x80\x94 the number of students in the first and second group, correspondingly, the contstraint t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n1\xe2\x80\x89+\xe2\x80\x89n2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89T should be met. In the third line print n characters, the i-th of which should be 1 or 2, if the i-th teacher should be assigned to the first or second group, correspondingly. If there are multiple possible distributions of students and teachers in groups, you can print any of them.
If the sought distribution doesn\'t exist, print a single word \'IMPOSSIBLE\' (without the quotes)." "3200  x662"
538G "Berserk Robot" "constructive algorithms, math, sortings" "Help! A robot escaped our lab and we need help finding it. 
The lab is at the point (0,\xe2\x80\x890) of the coordinate plane, at time 0 the robot was there. The robot\'s movements are defined by a program \xe2\x80\x94 a string of length l, consisting of characters U, L, D, R. Each second the robot executes the next command in his program: if the current coordinates of the robot are (x,\xe2\x80\x89y), then commands U, L, D, R move it to cells (x,\xe2\x80\x89y\xe2\x80\x89+\xe2\x80\x891), (x\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89y), (x,\xe2\x80\x89y\xe2\x80\x89-\xe2\x80\x891), (x\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89y) respectively. The execution of the program started at time 0. The program is looped, i.e. each l seconds of executing the program start again from the first character. Unfortunately, we don\'t know what program was loaded into the robot when he left the lab.
Our radars managed to find out the position of the robot at n moments of time: we know that at the moment of time ti the robot is at the point (xi,\xe2\x80\x89yi). Given this data, either help to determine what program could be loaded into the robot, or determine that no possible program meets the data and the robot must have broken down.
The first line of the input contains two space-separated integers n and l (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7106).
Next n lines contain three space-separated integers \xe2\x80\x94 ti, xi, yi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018, \xe2\x80\x89-\xe2\x80\x891018\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018). The radar data is given chronologically, i.e. ti\xe2\x80\x89<\xe2\x80\x89ti\xe2\x80\x89+\xe2\x80\x891 for all i from 1 to n\xe2\x80\x89-\xe2\x80\x891.
Print any of the possible programs that meet the data. If no program meets the data, print a single word \'NO\' (without the quotes)." "3100  x470"
538F "A Heap of Heaps" "brute force, data structures, math, sortings" "Andrew skipped lessons on the subject \'Algorithms and Data Structures\' for the entire term. When he came to the final test, the teacher decided to give him a difficult task as a punishment.
The teacher gave Andrew an array of n numbers a1, ..., an. After that he asked Andrew for each k from 1 to n\xe2\x80\x89-\xe2\x80\x891 to build a k-ary heap on the array and count the number of elements for which the property of the minimum-rooted heap is violated, i.e. the value of an element is less than the value of its parent.
Andrew looked up on the Wikipedia that a k-ary heap is a rooted tree with vertices in elements of the array. If the elements of the array are indexed from 1 to n, then the children of element v are elements with indices k(v\xe2\x80\x89-\xe2\x80\x891)\xe2\x80\x89+\xe2\x80\x892, ..., kv\xe2\x80\x89+\xe2\x80\x891 (if some of these elements lie outside the borders of the array, the corresponding children are absent). In any k-ary heap every element except for the first one has exactly one parent; for the element 1 the parent is absent (this element is the root of the heap). Denote p(v) as the number of the parent of the element with the number v. Let\'s say that for a non-root element v the property of the heap is violated if av\xe2\x80\x89<\xe2\x80\x89ap(v).
Help Andrew cope with the task!
The first line contains a single integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105).
The second line contains n space-separated integers a1, ..., an (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
in a single line print n\xe2\x80\x89-\xe2\x80\x891 integers, separate the consecutive numbers with a single space \xe2\x80\x94 the number of elements for which the property of the k-ary heap is violated, for k\xe2\x80\x89=\xe2\x80\x891, 2, ..., n\xe2\x80\x89-\xe2\x80\x891.
Pictures with the heaps for the first sample are given below; elements for which the property of the heap is violated are marked with red.
In the second sample all elements are equal, so the property holds for all pairs." "2200  x1737"
538E "Demiurges Play Again" "dfs and similar, dp, math, trees" "Demiurges Shambambukli and Mazukta love to watch the games of ordinary people. Today, they noticed two men who play the following game.
There is a rooted tree on n nodes, m of which are leaves (a leaf is a nodes that does not have any children), edges of the tree are directed from parent to children. In the leaves of the tree integers from 1 to m are placed in such a way that each number appears exactly in one leaf.
Initially, the root of the tree contains a piece. Two players move this piece in turns, during a move a player moves the piece from its current nodes to one of its children; if the player can not make a move, the game ends immediately. The result of the game is the number placed in the leaf where a piece has completed its movement. The player who makes the first move tries to maximize the result of the game and the second player, on the contrary, tries to minimize the result. We can assume that both players move optimally well.
Demiurges are omnipotent, so before the game they can arbitrarily rearrange the numbers placed in the leaves. Shambambukli wants to rearrange numbers so that the result of the game when both players play optimally well is as large as possible, and Mazukta wants the result to be as small as possible. What will be the outcome of the game, if the numbers are rearranged by Shambambukli, and what will it be if the numbers are rearranged by Mazukta? Of course, the Demiurges choose the best possible option of arranging numbers.
The first line contains a single integer n \xe2\x80\x94 the number of nodes in the tree (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105).
Each of the next n\xe2\x80\x89-\xe2\x80\x891 lines contains two integers ui and vi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ui,\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the ends of the edge of the tree; the edge leads from node ui to node vi. It is guaranteed that the described graph is a rooted tree, and the root is the node 1.
Print two space-separated integers \xe2\x80\x94 the maximum possible and the minimum possible result of the game.
Consider the first sample. The tree contains three leaves: 3, 4 and 5. If we put the maximum number 3 at node 3, then the first player moves there and the result will be 3. On the other hand, it is easy to see that for any rearrangement the first player can guarantee the result of at least 2.
In the second sample no matter what the arragment is the first player can go along the path that ends with a leaf with number 3." "2200  x1547"
538D "Weird Chess" "brute force, constructive algorithms, implementation" "Igor has been into chess for a long time and now he is sick of the game by the ordinary rules. He is going to think of new rules of the game and become world famous.
Igor\'s chessboard is a square of size n\xe2\x80\x89\xc3\x97\xe2\x80\x89n cells. Igor decided that simple rules guarantee success, that\'s why his game will have only one type of pieces. Besides, all pieces in his game are of the same color. The possible moves of a piece are described by a set of shift vectors. The next passage contains a formal description of available moves.
Let the rows of the board be numbered from top to bottom and the columns be numbered from left to right from 1 to n. Let\'s assign to each square a pair of integers (x,\xe2\x80\x89y) \xe2\x80\x94 the number of the corresponding column and row. Each of the possible moves of the piece is defined by a pair of integers (dx,\xe2\x80\x89dy); using this move, the piece moves from the field (x,\xe2\x80\x89y) to the field (x\xe2\x80\x89+\xe2\x80\x89dx,\xe2\x80\x89y\xe2\x80\x89+\xe2\x80\x89dy). You can perform the move if the cell (x\xe2\x80\x89+\xe2\x80\x89dx,\xe2\x80\x89y\xe2\x80\x89+\xe2\x80\x89dy) is within the boundaries of the board and doesn\'t contain another piece. Pieces that stand on the cells other than (x,\xe2\x80\x89y) and (x\xe2\x80\x89+\xe2\x80\x89dx,\xe2\x80\x89y\xe2\x80\x89+\xe2\x80\x89dy) are not important when considering the possibility of making the given move (for example, like when a knight moves in usual chess).
Igor offers you to find out what moves his chess piece can make. He placed several pieces on the board and for each unoccupied square he told you whether it is attacked by any present piece (i.e. whether some of the pieces on the field can move to that cell). Restore a possible set of shift vectors of the piece, or else determine that Igor has made a mistake and such situation is impossible for any set of shift vectors.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950).
The next n lines contain n characters each describing the position offered by Igor. The j-th character of the i-th string can have the following values:
It is guaranteed that there is at least one piece on the board.
If there is a valid set of moves, in the first line print a single word \'YES\' (without the quotes). Next, print the description of the set of moves of a piece in the form of a (2n\xe2\x80\x89-\xe2\x80\x891)\xe2\x80\x89\xc3\x97\xe2\x80\x89(2n\xe2\x80\x89-\xe2\x80\x891) board, the center of the board has a piece and symbols \'x\' mark cells that are attacked by it, in a format similar to the input. See examples of the output for a full understanding of the format. If there are several possible answers, print any of them.
If a valid set of moves does not exist, print a single word \'NO\'.
In the first sample test the piece is a usual chess rook, and in the second sample test the piece is a usual chess knight." "1800  x2430"
538C "Tourist's Notes" "binary search, brute force, greedy, implementation, math" "A tourist hiked along the mountain range. The hike lasted for n days, during each day the tourist noted height above the sea level. On the i-th day height was equal to some integer hi. The tourist pick smooth enough route for his hike, meaning that the between any two consecutive days height changes by at most 1, i.e. for all i\'s from 1 to n\xe2\x80\x89-\xe2\x80\x891 the inequality |hi\xe2\x80\x89-\xe2\x80\x89hi\xe2\x80\x89+\xe2\x80\x891|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891 holds.
At the end of the route the tourist rafted down a mountain river and some notes in the journal were washed away. Moreover, the numbers in the notes could have been distorted. Now the tourist wonders what could be the maximum height during his hike. Help him restore the maximum possible value of the maximum height throughout the hike or determine that the notes were so much distorted that they do not represent any possible height values that meet limits |hi\xe2\x80\x89-\xe2\x80\x89hi\xe2\x80\x89+\xe2\x80\x891|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891.
The first line contains two space-separated numbers, n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of days of the hike and the number of notes left in the journal.
Next m lines contain two space-separated integers di and hdi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hdi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108) \xe2\x80\x94 the number of the day when the i-th note was made and height on the di-th day. It is guaranteed that the notes are given in the chronological order, i.e. for all i from 1 to m\xe2\x80\x89-\xe2\x80\x891 the following condition holds: di\xe2\x80\x89<\xe2\x80\x89di\xe2\x80\x89+\xe2\x80\x891.
If the notes aren\'t contradictory, print a single integer \xe2\x80\x94 the maximum possible height value throughout the whole route.
If the notes do not correspond to any set of heights, print a single word \'IMPOSSIBLE\' (without the quotes).
For the first sample, an example of a correct height sequence with a maximum of 2: (0,\xe2\x80\x890,\xe2\x80\x891,\xe2\x80\x892,\xe2\x80\x891,\xe2\x80\x891,\xe2\x80\x890,\xe2\x80\x891).
In the second sample the inequality between h7 and h8 does not hold, thus the information is inconsistent." "1600  x5827"
538B "Quasi Binary" "constructive algorithms, dp, greedy, implementation" "A number is called quasibinary if its decimal representation contains only digits 0 or 1. For example, numbers 0, 1, 101, 110011 \xe2\x80\x94 are quasibinary and numbers 2, 12, 900 are not.
You are given a positive integer n. Represent it as a sum of minimum number of quasibinary numbers.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
In the first line print a single integer k \xe2\x80\x94 the minimum number of numbers in the representation of number n as a sum of quasibinary numbers.
In the second line print k numbers \xe2\x80\x94 the elements of the sum. All these numbers should be quasibinary according to the definition above, their sum should equal n. Do not have to print the leading zeroes in the numbers. The order of numbers doesn\'t matter. If there are multiple possible representations, you are allowed to print any of them." "1400  x18137"
538A "Cutting Banner" "brute force, implementation" "A large banner with word CODEFORCES was ordered for the 1000-th onsite round of Codeforces\xcf\x89 that takes place on the Miami beach. Unfortunately, the company that made the banner mixed up two orders and delivered somebody else\'s banner that contains someone else\'s word. The word on the banner consists only of upper-case English letters.
There is very little time to correct the mistake. All that we can manage to do is to cut out some substring from the banner, i.e. several consecutive letters. After that all the resulting parts of the banner will be glued into a single piece (if the beginning or the end of the original banner was cut out, only one part remains); it is not allowed change the relative order of parts of the banner (i.e. after a substring is cut, several first and last letters are left, it is allowed only to glue the last letters to the right of the first letters). Thus, for example, for example, you can cut a substring out from string \'TEMPLATE\' and get string \'TEMPLE\' (if you cut out string AT), \'PLATE\' (if you cut out TEM), \'T\' (if you cut out EMPLATE), etc.
Help the organizers of the round determine whether it is possible to cut out of the banner some substring in such a way that the remaining parts formed word CODEFORCES.
The single line of the input contains the word written on the banner. The word only consists of upper-case English letters. The word is non-empty and its length doesn\'t exceed 100 characters. It is guaranteed that the word isn\'t word CODEFORCES.
Print \'YES\', if there exists a way to cut out the substring, and \'NO\' otherwise (without the quotes)." "1400  x7144"
536E "Tavas on the Path" "data structures, divide and conquer, trees" "Tavas lives in Tavaspolis. Tavaspolis has n cities numbered from 1 to n connected by n\xe2\x80\x89-\xe2\x80\x891 bidirectional roads. There exists a path between any two cities. Also each road has a length.
Tavas\' favorite strings are binary strings (they contain only 0 and 1). For any binary string like s\xe2\x80\x89=\xe2\x80\x89s1s2... sk, T(s) is its Goodness. T(s) can be calculated as follows:
Consider there are exactly m blocks of 1s in this string (a block of 1s in s is a maximal consecutive substring of s that only contains 1) with lengths x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xm.
Define  where f is a given sequence (if m\xe2\x80\x89=\xe2\x80\x890, then T(s)\xe2\x80\x89=\xe2\x80\x890).
Tavas loves queries. He asks you to answer q queries. In each query he gives you numbers v,\xe2\x80\x89u,\xe2\x80\x89l and you should print following number:
Consider the roads on the path from city v to city u: e1,\xe2\x80\x89e2,\xe2\x80\x89...,\xe2\x80\x89ex.
Build the binary string b of length x such that: bi\xe2\x80\x89=\xe2\x80\x891 if and only if l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w(ei) where w(e) is the length of road e.
You should print T(b) for this query.
The first line of input contains integers n and q (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105 and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The next line contains n\xe2\x80\x89-\xe2\x80\x891 space separated integers f1,\xe2\x80\x89f2,\xe2\x80\x89...,\xe2\x80\x89fn\xe2\x80\x89-\xe2\x80\x891 (|fi|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000).
The next n\xe2\x80\x89-\xe2\x80\x891 lines contain the details of the roads. Each line contains integers v,\xe2\x80\x89u and w and it means that there\'s a road between cities v and u of length w (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89v,\xe2\x80\x89u\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
The next q lines contain the details of the queries. Each line contains integers v,\xe2\x80\x89u,\xe2\x80\x89l (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89v,\xe2\x80\x89u\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, v\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89u and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the answer of each query in a single line." "3100  x397"
536D "Tavas in Kansas" "dp, games" "Tavas lives in Kansas. Kansas has n cities numbered from 1 to n connected with m bidirectional roads. We can travel from any city to any other city via these roads. Kansas is as strange as Tavas. So there may be a road between a city and itself or more than one road between two cities.
Tavas invented a game and called it ""Dashti"". He wants to play Dashti with his girlfriends, Nafas.
In this game, they assign an arbitrary integer value to each city of Kansas. The value of i-th city equals to pi.
During the game, Tavas is in city s and Nafas is in city t. They play in turn and Tavas goes first. A player in his/her turn, must choose a non-negative integer x and his/her score increases by the sum of values of all cities with (shortest) distance no more than x from his/her city. Each city may be used once, or in the other words, after first time a player gets score from a city, city score becomes zero.
There is an additional rule: the player must choose x such that he/she gets the point of at least one city that was not used before. Note that city may initially have value 0, such city isn\'t considered as been used at the beginning of the game, i. e. each player may use it to fullfill this rule.
The game ends when nobody can make a move.
A player\'s score is the sum of the points he/she earned during the game. The winner is the player with greater score, or there is a draw if players score the same value. Both players start game with zero points.
If Tavas wins, he\'ll break his girlfriend\'s heart, and if Nafas wins, Tavas will cry. But if their scores are equal, they\'ll be happy and Tavas will give Nafas flowers.
They\'re not too emotional after all, so they\'ll play optimally. Your task is to tell Tavas what\'s going to happen after the game ends.
The first line of input contains two integers n and m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000, n\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line of input contains two integers s and t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s,\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, s\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89t).
The next line contains n integers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn separated by spaces (|pi|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
The next m lines contain the roads. Each line contains three integers v,\xe2\x80\x89u,\xe2\x80\x89w and it means that there\'s an road with length w between cities v and u (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89u,\xe2\x80\x89v\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). The road may lead from the city to itself, there may be several roads between each pair of cities.
If Tavas wins, print ""Break a heart"". If Nafas wins print ""Cry"" and if nobody wins (i. e. the game ended with draw) print ""Flowers""." "2900  x734"
535E "Tavas and Pashmaks" "geometry, math" "Tavas is a cheerleader in the new sports competition named ""Pashmaks"".
This competition consists of two part: swimming and then running. People will immediately start running R meters after they finished swimming exactly S meters. A winner is a such person that nobody else finishes running before him/her (there may be more than one winner).
Before the match starts, Tavas knows that there are n competitors registered for the match. Also, he knows that i-th person\'s swimming speed is si meters per second and his/her running speed is ri meters per second. Unfortunately, he doesn\'t know the values of R and S, but he knows that they are real numbers greater than 0.
As a cheerleader, Tavas wants to know who to cheer up. So, he wants to know all people that might win. We consider a competitor might win if and only if there are some values of R and S such that with these values, (s)he will be a winner.
Tavas isn\'t really familiar with programming, so he asked you to help him.
The first line of input contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105).
The next n lines contain the details of competitors. i-th line contains two integers si and ri (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89si,\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104).
In the first and the only line of output, print a sequence of numbers of possible winners in increasing order." "2600  x806"
535D "Tavas and Malekas" "greedy, hashing, string suffix structures, strings" "Tavas is a strange creature. Usually ""zzz"" comes out of people\'s mouth while sleeping, but string s of length n comes out from Tavas\' mouth instead.
Today Tavas fell asleep in Malekas\' place. While he was sleeping, Malekas did a little process on s. Malekas has a favorite string p. He determined all positions x1\xe2\x80\x89<\xe2\x80\x89x2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89xk where p matches s. More formally, for each xi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k) he condition sxisxi\xe2\x80\x89+\xe2\x80\x891... sxi\xe2\x80\x89+\xe2\x80\x89|p|\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89=\xe2\x80\x89p is fullfilled.
Then Malekas wrote down one of subsequences of x1,\xe2\x80\x89x2,\xe2\x80\x89... xk (possibly, he didn\'t write anything) on a piece of paper. Here a sequence b is a subsequence of sequence a if and only if we can turn a into b by removing some of its elements (maybe no one of them or all).
After Tavas woke up, Malekas told him everything. He couldn\'t remember string s, but he knew that both p and s only contains lowercase English letters and also he had the subsequence he had written on that piece of paper.
Tavas wonders, what is the number of possible values of s? He asked SaDDas, but he wasn\'t smart enough to solve this. So, Tavas asked you to calculate this number for him.
Answer can be very large, so Tavas wants you to print the answer modulo 109\xe2\x80\x89+\xe2\x80\x897.
The first line contains two integers n and m, the length of s and the length of the subsequence Malekas wrote down (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106 and 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x89|p|\xe2\x80\x89+\xe2\x80\x891).
The second line contains string p (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|p|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
The next line contains m space separated integers y1,\xe2\x80\x89y2,\xe2\x80\x89...,\xe2\x80\x89ym, Malekas\' subsequence (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y1\xe2\x80\x89<\xe2\x80\x89y2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89ym\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x89|p|\xe2\x80\x89+\xe2\x80\x891).
In a single line print the answer modulo 1000\xe2\x80\x89000\xe2\x80\x89007.
In the first sample test all strings of form ""ioioi?"" where the question mark replaces arbitrary English letter satisfy.
Here |x| denotes the length of string x.
Please note that it\'s possible that there is no such string (answer is 0)." "1900  x3959"
535C "Tavas and Karafs" "binary search, greedy, math" "Karafs is some kind of vegetable in shape of an 1\xe2\x80\x89\xc3\x97\xe2\x80\x89h rectangle. Tavaspolis people love Karafs and they use Karafs in almost any kind of food. Tavas, himself, is crazy about Karafs.
Each Karafs has a positive integer height. Tavas has an infinite 1-based sequence of Karafses. The height of the i-th Karafs is si\xe2\x80\x89=\xe2\x80\x89A\xe2\x80\x89+\xe2\x80\x89(i\xe2\x80\x89-\xe2\x80\x891)\xe2\x80\x89\xc3\x97\xe2\x80\x89B.
For a given m, let\'s define an m-bite operation as decreasing the height of at most m distinct not eaten Karafses by 1. Karafs is considered as eaten when its height becomes zero.
Now SaDDas asks you n queries. In each query he gives you numbers l, t and m and you should find the largest number r such that l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r and sequence sl,\xe2\x80\x89sl\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89sr can be eaten by performing m-bite no more than t times or print -1 if there is no such number r.
The first line of input contains three integers A, B and n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A,\xe2\x80\x89B\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
Next n lines contain information about queries. i-th line contains integers l,\xe2\x80\x89t,\xe2\x80\x89m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l,\xe2\x80\x89t,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) for i-th query.
For each query, print its answer in a single line." "1900  x3799"
535B "Tavas and SaDDas" "bitmasks, brute force, combinatorics, implementation" "Once again Tavas started eating coffee mix without water! Keione told him that it smells awful, but he didn\'t stop doing that. That\'s why Keione told his smart friend, SaDDas to punish him! SaDDas took Tavas\' headphones and told him: ""If you solve the following problem, I\'ll return it to you.""
The problem is: 
You are given a lucky number n. Lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.
If we sort all lucky numbers in increasing order, what\'s the 1-based index of n? 
Tavas is not as smart as SaDDas, so he asked you to do him a favor and solve this problem so he can have his headphones back.
The first and only line of input contains a lucky number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the index of n among all lucky numbers." "1100  x22638"
535A "Tavas and Nafas" "brute force, implementation" "Today Tavas got his test result as an integer score and he wants to share it with his girlfriend, Nafas.
His phone operating system is Tavdroid, and its keyboard doesn\'t have any digits! He wants to share his score with Nafas via text, so he has no choice but to send this number using words.
He ate coffee mix without water again, so right now he\'s really messed up and can\'t think.
Your task is to help him by telling him what to type.
The first and only line of input contains an integer s (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8999), Tavas\'s score. 
In the first and only line of output, print a single string consisting only from English lowercase letters and hyphens (\'-\'). Do not use spaces.
You can find all you need to know about English numerals in http://en.wikipedia.org/wiki/English_numerals ." "1000  x12222"
534F "Simplified Nonogram" "bitmasks, dp, hashing, meet-in-the-middle" "In this task you have to write a program dealing with nonograms on fields no larger than 5\xe2\x80\x89\xc3\x97\xe2\x80\x8920.
Simplified nonogram is a task where you have to build such field (each cell is either white or black) that satisfies the given information about rows and columns. For each row and each column the number of contiguous black segments is specified. 
For example if size of the field is n\xe2\x80\x89=\xe2\x80\x893,\xe2\x80\x89m\xe2\x80\x89=\xe2\x80\x895, \xd0\xb0nd numbers of contiguous black segments in rows are: [2,\xe2\x80\x893,\xe2\x80\x892] and in columns are: [1,\xe2\x80\x890,\xe2\x80\x891,\xe2\x80\x892,\xe2\x80\x891] then the solution may look like:
It is guaranteed that on each test in the testset there exists at least one solution.
In the first line there follow two integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920) \xe2\x80\x94 number of rows and number of columns respectively.
Second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an where ai is the number of contiguous black segments in i-th row of the field. 
Similarly, third line contains m integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bm where bi is the number of contiguous black segments in the i-th column of the field.
It is guaranteed that there exists at least one solution.
Output any possible solution. Output should consist of n lines each containing m characters. Denote white cell as ""."" and black cell as ""*""." "2400  x473"
534E "Berland Local Positioning System" "constructive algorithms, greedy, hashing, implementation" "In Berland a bus travels along the main street of the capital. The street begins from the main square and looks like a very long segment. There are n bus stops located along the street, the i-th of them is located at the distance ai from the central square, all distances are distinct, the stops are numbered in the order of increasing distance from the square, that is, ai\xe2\x80\x89<\xe2\x80\x89ai\xe2\x80\x89+\xe2\x80\x891 for all i from 1 to n\xe2\x80\x89-\xe2\x80\x891. The bus starts its journey from the first stop, it passes stops 2, 3 and so on. It reaches the stop number n, turns around and goes in the opposite direction to stop 1, passing all the intermediate stops in the reverse order. After that, it again starts to move towards stop n. During the day, the bus runs non-stop on this route.
The bus is equipped with the Berland local positioning system. When the bus passes a stop, the system notes down its number.
One of the key features of the system is that it can respond to the queries about the distance covered by the bus for the parts of its path between some pair of stops. A special module of the system takes the input with the information about a set of stops on a segment of the path, a stop number occurs in the set as many times as the bus drove past it. This module returns the length of the traveled segment of the path (or -1 if it is impossible to determine the length uniquely). The operation of the module is complicated by the fact that stop numbers occur in the request not in the order they were visited but in the non-decreasing order.
For example, if the number of stops is 6, and the part of the bus path starts at the bus stop number 5, ends at the stop number 3 and passes the stops as follows: , then the request about this segment of the path will have form: 3,\xe2\x80\x894,\xe2\x80\x895,\xe2\x80\x895,\xe2\x80\x896. If the bus on the segment of the path from stop 5 to stop 3 has time to drive past the 1-th stop (i.e., if we consider a segment that ends with the second visit to stop 3 on the way from 5), then the request will have form: 1,\xe2\x80\x892,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x893,\xe2\x80\x894,\xe2\x80\x895,\xe2\x80\x895,\xe2\x80\x896.
You will have to repeat the Berland programmers achievement and implement this function.
The first line contains integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of stops.
The second line contains n integers (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the distance from the i-th stop to the central square. The numbers in the second line go in the increasing order.
The third line contains integer m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894\xc2\xb7105) \xe2\x80\x94 the number of stops the bus visited on some segment of the path.
The fourth line contains m integers (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the sorted list of numbers of the stops visited by the bus on the segment of the path. The number of a stop occurs as many times as it was visited by a bus.
It is guaranteed that the query corresponds to some segment of the path.
In the single line please print the distance covered by a bus. If it is impossible to determine it unambiguously, print \xe2\x80\x89-\xe2\x80\x891.
The first test from the statement demonstrates the first example shown in the statement of the problem.
The second test from the statement demonstrates the second example shown in the statement of the problem.
In the third sample there are two possible paths that have distinct lengths, consequently, the sought length of the segment isn\'t defined uniquely.
In the fourth sample, even though two distinct paths correspond to the query, they have the same lengths, so the sought length of the segment is defined uniquely." "2400  x351"
534D Handshakes "binary search, constructive algorithms, data structures, greedy" "On February, 30th n students came in the Center for Training Olympiad Programmers (CTOP) of the Berland State University. They came one by one, one after another. Each of them went in, and before sitting down at his desk, greeted with those who were present in the room by shaking hands. Each of the students who came in stayed in CTOP until the end of the day and never left.
At any time any three students could join together and start participating in a team contest, which lasted until the end of the day. The team did not distract from the contest for a minute, so when another student came in and greeted those who were present, he did not shake hands with the members of the contest writing team. Each team consisted of exactly three students, and each student could not become a member of more than one team. Different teams could start writing contest at different times.
Given how many present people shook the hands of each student, get a possible order in which the students could have come to CTOP. If such an order does not exist, then print that this is impossible.
Please note that some students could work independently until the end of the day, without participating in a team contest.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of students who came to CTOP. The next line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89<\xe2\x80\x89n), where ai is the number of students with who the i-th student shook hands.
If the sought order of students exists, print in the first line ""Possible"" and in the second line print the permutation of the students\' numbers defining the order in which the students entered the center. Number i that stands to the left of number j in this permutation means that the i-th student came earlier than the j-th student. If there are multiple answers, print any of them.
If the sought order of students doesn\'t exist, in a single line print ""Impossible"".
In the first sample from the statement the order of events could be as follows: 
In the second sample from the statement the order of events could be as follows: 
In the third sample from the statement the order of events is restored unambiguously: " "1900  x2419"
534C "Polycarpus' Dice" math "Polycarp has n dice d1,\xe2\x80\x89d2,\xe2\x80\x89...,\xe2\x80\x89dn. The i-th dice shows numbers from 1 to di. Polycarp rolled all the dice and the sum of numbers they showed is A. Agrippina didn\'t see which dice showed what number, she knows only the sum A and the values d1,\xe2\x80\x89d2,\xe2\x80\x89...,\xe2\x80\x89dn. However, she finds it enough to make a series of statements of the following type: dice i couldn\'t show number r. For example, if Polycarp had two six-faced dice and the total sum is A\xe2\x80\x89=\xe2\x80\x8911, then Agrippina can state that each of the two dice couldn\'t show a value less than five (otherwise, the remaining dice must have a value of at least seven, which is impossible).
For each dice find the number of values for which it can be guaranteed that the dice couldn\'t show these values if the sum of the shown values is A.
The first line contains two integers n,\xe2\x80\x89A (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105,\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s) \xe2\x80\x94 the number of dice and the sum of shown values where s\xe2\x80\x89=\xe2\x80\x89d1\xe2\x80\x89+\xe2\x80\x89d2\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89dn.
The second line contains n integers d1,\xe2\x80\x89d2,\xe2\x80\x89...,\xe2\x80\x89dn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), where di is the maximum value that the i-th dice can show.
Print n integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn, where bi is the number of values for which it is guaranteed that the i-th dice couldn\'t show them.
In the first sample from the statement A equal to 8 could be obtained in the only case when both the first and the second dice show 4. Correspondingly, both dice couldn\'t show values 1, 2 or 3.
In the second sample from the statement A equal to 3 could be obtained when the single dice shows 3. Correspondingly, it couldn\'t show 1, 2, 4 or 5.
In the third sample from the statement A equal to 3 could be obtained when one dice shows 1 and the other dice shows 2. That\'s why the first dice doesn\'t have any values it couldn\'t show and the second dice couldn\'t show 3." "1600  x5032"
534B "Covered Path" "dp, greedy, math" "The on-board computer on Polycarp\'s car measured that the car speed at the beginning of some section of the path equals v1 meters per second, and in the end it is v2 meters per second. We know that this section of the route took exactly t seconds to pass.
Assuming that at each of the seconds the speed is constant, and between seconds the speed can change at most by d meters per second in absolute value (i.e., the difference in the speed of any two adjacent seconds does not exceed d in absolute value), find the maximum possible length of the path section in meters.
The first line contains two integers v1 and v2 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89v1,\xe2\x80\x89v2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the speeds in meters per second at the beginning of the segment and at the end of the segment, respectively.
The second line contains two integers t (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the time when the car moves along the segment in seconds, d (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910) \xe2\x80\x94 the maximum value of the speed change between adjacent seconds.
It is guaranteed that there is a way to complete the segment so that:
Print the maximum possible length of the path segment in meters. 
In the first sample the sequence of speeds of Polycarpus\' car can look as follows: 5, 7, 8, 6. Thus, the total path is 5\xe2\x80\x89+\xe2\x80\x897\xe2\x80\x89+\xe2\x80\x898\xe2\x80\x89+\xe2\x80\x896\xe2\x80\x89=\xe2\x80\x8926 meters.
In the second sample, as d\xe2\x80\x89=\xe2\x80\x890, the car covers the whole segment at constant speed v\xe2\x80\x89=\xe2\x80\x8910. In t\xe2\x80\x89=\xe2\x80\x8910 seconds it covers the distance of 100 meters." "1400  x10327"
534A Exam "constructive algorithms, implementation, math" "An exam for n students will take place in a long and narrow room, so the students will sit in a line in some order. The teacher suspects that students with adjacent numbers (i and i\xe2\x80\x89+\xe2\x80\x891) always studied side by side and became friends and if they take an exam sitting next to each other, they will help each other for sure.
Your task is to choose the maximum number of students and make such an arrangement of students in the room that no two students with adjacent numbers sit side by side.
A single line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000) \xe2\x80\x94 the number of students at an exam.
In the first line print integer k \xe2\x80\x94 the maximum number of students who can be seated so that no two students with adjacent numbers sit next to each other.
In the second line print k distinct integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89ak (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), where ai is the number of the student on the i-th position. The students on adjacent positions mustn\'t have adjacent numbers. Formally, the following should be true: |ai\xe2\x80\x89-\xe2\x80\x89ai\xe2\x80\x89+\xe2\x80\x891|\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x891 for all i from 1 to k\xe2\x80\x89-\xe2\x80\x891.
If there are several possible answers, output any of them." "1100  x12316"
533F Encoding "hashing, string suffix structures, strings" "Polycarp invented a new way to encode strings. Let\'s assume that we have string T, consisting of lowercase English letters. Let\'s choose several pairs of letters of the English alphabet in such a way that each letter occurs in at most one pair. Then let\'s replace each letter in T with its pair letter if there is a pair letter for it. For example, if you chose pairs (l, r), (p, q) and (a, o), then word ""parallelogram"" according to the given encoding principle transforms to word ""qolorreraglom"".
Polycarpus already has two strings, S and T. He suspects that string T was obtained after applying the given encoding method from some substring of string S. Find all positions mi in S (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89mi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|S|\xe2\x80\x89-\xe2\x80\x89|T|\xe2\x80\x89+\xe2\x80\x891), such that T can be obtained fro substring SmiSmi\xe2\x80\x89+\xe2\x80\x891... Smi\xe2\x80\x89+\xe2\x80\x89|T|\xe2\x80\x89-\xe2\x80\x891 by applying the described encoding operation by using some set of pairs of English alphabet letters
The first line of the input contains two integers, |S| and |T| (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|T|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|S|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the lengths of string S and string T, respectively.
The second and third line of the input contain strings S and T, respectively. Both strings consist only of lowercase English letters.
Print number k \xe2\x80\x94 the number of suitable positions in string S.
In the next line print k integers m1,\xe2\x80\x89m2,\xe2\x80\x89...,\xe2\x80\x89mk \xe2\x80\x94 the numbers of the suitable positions in the increasing order." "2400  x906"
533E "Correcting Mistakes" "constructive algorithms, dp, greedy, hashing, strings, two pointers" "Analyzing the mistakes people make while typing search queries is a complex and an interesting work. As there is no guaranteed way to determine what the user originally meant by typing some query, we have to use different sorts of heuristics.
Polycarp needed to write a code that could, given two words, check whether they could have been obtained from the same word as a result of typos. Polycarpus suggested that the most common typo is skipping exactly one letter as you type a word.
Implement a program that can, given two distinct words S and T of the same length n determine how many words W of length n\xe2\x80\x89+\xe2\x80\x891 are there with such property that you can transform W into both S, and T by deleting exactly one character. Words S and T consist of lowercase English letters. Word W also should consist of lowercase English letters.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the length of words S and T.
The second line contains word S.
The third line contains word T.
Words S and T consist of lowercase English letters. It is guaranteed that S and T are distinct words.
Print a single integer \xe2\x80\x94 the number of distinct words W that can be transformed to S and T due to a typo.
In the first sample test the two given words could be obtained only from word ""treading"" (the deleted letters are marked in bold).
In the second sample test the two given words couldn\'t be obtained from the same word by removing one letter.
In the third sample test the two given words could be obtained from either word ""tory"" or word ""troy""." "1800  x2267"
533D Landmarks "data structures, dp" "We have an old building with n\xe2\x80\x89+\xe2\x80\x892 columns in a row. These columns support the ceiling. These columns are located in points with coordinates 0\xe2\x80\x89=\xe2\x80\x89x0\xe2\x80\x89<\xe2\x80\x89x1\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89xn\xe2\x80\x89<\xe2\x80\x89xn\xe2\x80\x89+\xe2\x80\x891. The leftmost and the rightmost columns are special, we will call them bearing, the other columns are ordinary. 
For each column we know its durability di. Let\'s consider an ordinary column with coordinate x. Let\'s assume that the coordinate of the closest to it column to the left (bearing or ordinary) is a and the coordinate of the closest to it column to the right (also, bearing or ordinary) is b. In this task let\'s assume that this column supports the segment of the ceiling from point  to point  (here both fractions are considered as real division). If the length of the segment of the ceiling supported by the column exceeds di, then the column cannot support it and it crashes after a while, and after that the load is being redistributeed between the neighbouring columns according to the same principle.
Thus, ordinary columns will be crashing for some time until the process stops at some state. One can prove that the set of the remaining columns doesn\'t depend on the order in which columns crash. If there are only two bearing columns left in the end, then we assume that the whole construction crashes under the weight of the roof. But if at least one ordinary column stays in addition to the bearing ones, then the building doesn\'t crash.
To make the building stronger, we can add one extra ordinary column of arbitrary durability d\' at any (not necessarily integer) point 0\xe2\x80\x89<\xe2\x80\x89x\'\xe2\x80\x89<\xe2\x80\x89xn\xe2\x80\x89+\xe2\x80\x891. If point x\' is already occupied by an ordinary column, it is replaced by a new one.
Your task is to find out: what minimal durability can the added column have so that the building doesn\'t crash?
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of ordinary columns.
The second line contains n\xe2\x80\x89+\xe2\x80\x892 integers x0,\xe2\x80\x89x1,\xe2\x80\x89...,\xe2\x80\x89xn,\xe2\x80\x89xn\xe2\x80\x89+\xe2\x80\x891 (x0\xe2\x80\x89=\xe2\x80\x890, xi\xe2\x80\x89<\xe2\x80\x89xi\xe2\x80\x89+\xe2\x80\x891 for 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, xn\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the coordinates of the columns.
The third line contains n integers d1,\xe2\x80\x89d2,\xe2\x80\x89...,\xe2\x80\x89dn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print a single number \xe2\x80\x94 the minimum possible durability of the column that you need to add in order to make the building stay. If you do not have to add the column, please print 0. Your answer will be checked with the relative or absolute error 10\xe2\x80\x89-\xe2\x80\x894." "3000  x235"
533C "Board Game" "games, greedy, implementation, math" "Polycarp and Vasiliy love simple logical games. Today they play a game with infinite chessboard and one pawn for each player. Polycarp and Vasiliy move in turns, Polycarp starts. In each turn Polycarp can move his pawn from cell (x,\xe2\x80\x89y) to (x\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89y) or (x,\xe2\x80\x89y\xe2\x80\x89-\xe2\x80\x891). Vasiliy can move his pawn from (x,\xe2\x80\x89y) to one of cells: (x\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89y),\xe2\x80\x89(x\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89y\xe2\x80\x89-\xe2\x80\x891) and (x,\xe2\x80\x89y\xe2\x80\x89-\xe2\x80\x891). Both players are also allowed to skip move. 
There are some additional restrictions \xe2\x80\x94 a player is forbidden to move his pawn to a cell with negative x-coordinate or y-coordinate or to the cell containing opponent\'s pawn The winner is the first person to reach cell (0,\xe2\x80\x890). 
You are given the starting coordinates of both pawns. Determine who will win if both of them play optimally well.
The first line contains four integers: xp,\xe2\x80\x89yp,\xe2\x80\x89xv,\xe2\x80\x89yv (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xp,\xe2\x80\x89yp,\xe2\x80\x89xv,\xe2\x80\x89yv\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 Polycarp\'s and Vasiliy\'s starting coordinates.
It is guaranteed that in the beginning the pawns are in different cells and none of them is in the cell (0,\xe2\x80\x890).
Output the name of the winner: ""Polycarp"" or ""Vasiliy"".
In the first sample test Polycarp starts in (2,\xe2\x80\x891) and will move to (1,\xe2\x80\x891) in the first turn. No matter what his opponent is doing, in the second turn Polycarp can move to (1,\xe2\x80\x890) and finally to (0,\xe2\x80\x890) in the third turn." "1700  x2199"
533B "Work Group" "dfs and similar, dp, graphs, strings, trees" "One Big Software Company has n employees numbered from 1 to n. The director is assigned number 1. Every employee of the company except the director has exactly one immediate superior. The director, of course, doesn\'t have a superior.
We will call person a a subordinates of another person b, if either b is an immediate supervisor of a, or the immediate supervisor of a is a subordinate to person b. In particular, subordinates of the head are all other employees of the company.
To solve achieve an Important Goal we need to form a workgroup. Every person has some efficiency, expressed by a positive integer ai, where i is the person\'s number. The efficiency of the workgroup is defined as the total efficiency of all the people included in it.
The employees of the big software company are obsessed with modern ways of work process organization. Today pair programming is at the peak of popularity, so the workgroup should be formed with the following condition. Each person entering the workgroup should be able to sort all of his subordinates who are also in the workgroup into pairs. In other words, for each of the members of the workgroup the number of his subordinates within the workgroup should be even.
Your task is to determine the maximum possible efficiency of the workgroup formed at observing the given condition. Any person including the director of company can enter the workgroup.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of workers of the Big Software Company. 
Then n lines follow, describing the company employees. The i-th line contains two integers pi,\xe2\x80\x89ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of the person who is the i-th employee\'s immediate superior and i-th employee\'s efficiency. For the director p1\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891, for all other people the condition 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89<\xe2\x80\x89i is fulfilled.
Print a single integer \xe2\x80\x94 the maximum possible efficiency of the workgroup.
In the sample test the most effective way is to make a workgroup from employees number 1,\xe2\x80\x892,\xe2\x80\x894,\xe2\x80\x895,\xe2\x80\x896." "2000  x2407"
533A "Berland Miners" "binary search, data structures, dfs and similar, greedy, trees" "The biggest gold mine in Berland consists of n caves, connected by n\xe2\x80\x89-\xe2\x80\x891 transitions. The entrance to the mine leads to the cave number 1, it is possible to go from it to any remaining cave of the mine by moving along the transitions. 
The mine is being developed by the InMine Inc., k miners work for it. Each day the corporation sorts miners into caves so that each cave has at most one miner working there. 
For each cave we know the height of its ceiling hi in meters, and for each miner we know his height sj, also in meters. If a miner\'s height doesn\'t exceed the height of the cave ceiling where he is, then he can stand there comfortably, otherwise, he has to stoop and that makes him unhappy.
Unfortunately, miners typically go on strike in Berland, so InMine makes all the possible effort to make miners happy about their work conditions. To ensure that no miner goes on strike, you need make sure that no miner has to stoop at any moment on his way from the entrance to the mine to his cave (in particular, he must be able to stand comfortably in the cave where he works). 
To reach this goal, you can choose exactly one cave and increase the height of its ceiling by several meters. However enlarging a cave is an expensive and complex procedure. That\'s why InMine Inc. asks you either to determine the minimum number of meters you should raise the ceiling of some cave so that it is be possible to sort the miners into the caves and keep all miners happy with their working conditions or to determine that it is impossible to achieve by raising ceiling in exactly one cave.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105) \xe2\x80\x94 the number of caves in the mine.
Then follows a line consisting of n positive integers h1,\xe2\x80\x89h2,\xe2\x80\x89...,\xe2\x80\x89hn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), where hi is the height of the ceiling in the i-th cave.
Next n\xe2\x80\x89-\xe2\x80\x891 lines contain the descriptions of transitions between the caves. Each line has the form ai,\xe2\x80\x89bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi), where ai and bi are the numbers of the caves connected by a path.
The next line contains integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
The last line contains k integers s1,\xe2\x80\x89s2,\xe2\x80\x89...,\xe2\x80\x89sk (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89sj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), where sj is the j-th miner\'s height.
In the single line print the minimum number of meters that you need to raise the ceiling by in some cave so that all miners could be sorted into caves and be happy about the work conditions. If it is impossible to do, print \xe2\x80\x89-\xe2\x80\x891. If it is initially possible and there\'s no need to raise any ceiling, print 0. 
In the first sample test we should increase ceiling height in the first cave from 5 to 11. After that we can distribute miners as following (first goes index of a miner, then index of a cave): .
In the second sample test there is no need to do anything since it is already possible to distribute miners as following: .
In the third sample test it is impossible." "3000  x392"
530I "Different variables" "*special problem" "N variables X1,\xe2\x80\x89...,\xe2\x80\x89XN can have positive integer values. You are given K constraints for these value that look like ""the values of variables Xi1,\xe2\x80\x89Xi2,\xe2\x80\x89...,\xe2\x80\x89XiM are different"". Among all possible lists of values of these variables that satisfy these constraints select the ones which have minimum possible max(Xi). Output lexicographically least of these lists.
The first line of input contains two integers n and k (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89K\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of variables and the number of constraints.
The following K lines contain the constraints, formatted as follows: the first number in the line M (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89M\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N) gives the number of variables in the constraint. After it follow M space-separated integers i1,\xe2\x80\x89...,\xe2\x80\x89iM \xe2\x80\x94 the indices of the variables used in the constraint (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ij\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N). All ij in one constraint are different.
Output the values of X1,\xe2\x80\x89X2,\xe2\x80\x89...,\xe2\x80\x89XN in a single line, separated with single spaces." "2500  x47"
530H "Points in triangle" "*special problem, geometry" "You are given a set of points on a plane with positive integer coordinates. Find a triangle of minimum area with vertices in points (0,\xe2\x80\x890), (A,\xe2\x80\x890) and (0,\xe2\x80\x89B) (A and B are unknown positive integers) that contains all the given points inside it (points on the edges count towards being inside).
The first line of the input contains an integer N (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of points. The following N lines contain pairs of numbers X and Y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89X,\xe2\x80\x89Y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) - the coordinates of the points. All points are distinct.
Output one floating-point number \xe2\x80\x94 the minimal area of the triangle. The answer is considered to be correct if its absolute or relative error does not exceed 10\xe2\x80\x89-\xe2\x80\x894." "2100  x123"
530G "Levenshtein distance" "*special problem" "Levenshtein distance between two strings of letters is calculated as the minimal total cost of a sequence of edit actions that converts one of the strings into the other one. The allowed edit actions are:
You are given two strings. Find the Levenshtein distance between them.
The input data consists of two lines, each line contains a string of lowercase Latin letters. Each string is between 1 and 100 letters long, inclusive.
Output a single integer \xe2\x80\x94 the Levenshtein distance between the strings.
In the first example you should replace a with b (cost 1), r with u (cost 3) and c with g (cost 4).
In the second example you should insert r (cost 18) are replace m with n (cost 1)." "2100  x158"
530F "Jumping frogs" "*special problem" "A rectangular swamp is inhabited by 10 species of frogs. Frogs of species i can jump from hillocks to hillock exactly i units along X-axis or Y-axis. Initially frogs of all types sit at the hillock at coordinates (0, 0). You are given coordinates of all other hillocks in the swamp. Find the largest Manhattan distance from (0, 0) to any hillock to which one of the frogs can travel by jumping between hillocks.
Manhattan distance between (x1,\xe2\x80\x89y1) and (x2,\xe2\x80\x89y2) is |x1\xe2\x80\x89-\xe2\x80\x89x2|\xe2\x80\x89+\xe2\x80\x89|y1\xe2\x80\x89-\xe2\x80\x89y2|.
The first line of the input contains an integer N (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) - the number of hillocks. The following N lines contain the coordinates of the hillocks, formatted as ""X Y"" (\xe2\x80\x89-\xe2\x80\x8920\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89X,\xe2\x80\x89Y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920). All hillocks are distinct, and none of them is located at (0, 0).
Output a single integer \xe2\x80\x94 the largest Manhattan distance to any hillock reachable by one of the frogs by jumping between hillocks.
In the first example frogs of species 1, 2 and 3 can jump as far as the first, the second and the third hillocks, respectively.
In the second example frog of species 2 can jump to the second hillock, then to the fourth and finally to the fifth.
In the third example no frog can reach the hillock." "2100  x107"
530E "Sum and product" "*special problem" "You are given integers N and D. Find N positive integers x1...xN such that the difference of their product and their sum equals D.
The only line of input contains integers N (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) and D (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89D\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000).
Output N integers that satisfy the given condition in non-decreasing order (in a single line, separated with spaces). Note that some numbers can be equal. Numbers printed by you must not exceed 106." "1700  x308"
530D "Set subtraction" "*special problem" "You are given a starting set consisting of all integers from 1 to 1000, inclusive. You are also given several sets which need to be subtracted from the starting set (i.e., each number which is in at least one of these sets needs to be removed from the starting set). Each subtracted set is represented as an interval of integers from A to B, inclusive. Output the result after all subtractions.
The first line of input contains an integer N (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of intervals to be subtracted. The following N lines contain pairs of integers A and B (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89B\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 lower and upper bounds of the intervals. Intervals can intersect. An interval can consist of a single number.
Output the result of subtractions in the following format: in one line output first the number of integers in the resulting set and then the integers of the set, sorted in increasing order, separated by single space." "1600  x452"
530C "Diophantine equation" "*special problem" "You are given an equation A\xe2\x80\x89*\xe2\x80\x89X\xe2\x80\x89+\xe2\x80\x89B\xe2\x80\x89*\xe2\x80\x89Y\xe2\x80\x89=\xe2\x80\x89C, A,\xe2\x80\x89B,\xe2\x80\x89C are positive integer coefficients, X and Y are variables which can have positive integer values only. Output the number of solutions of this equation and the solutions themselves.
The only line of input contains integers A,\xe2\x80\x89B and C (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A,\xe2\x80\x89B,\xe2\x80\x89C\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000), separated with spaces.
In the first line of the output print the number of the solutions N. In the next N lines print the solutions, formatted as ""XY"", sorted in ascending order of X, one solution per line." "1500  x556"
530B "String inside out" "*special problem" "You are given a string S of even length s1..s2n . Perform the following manipulations:
Output the result of these manipulations.
The only line of the input contains a string of lowercase Latin letters. The length of the string is between 2 and 20, inclusive, and it is even. 
Output the string which is the result of the described manipulations." "1600  x542"
530A "Quadratic equation" "*special problem" "You are given a quadratic equation with integer coefficients A\xe2\x80\x89*\xe2\x80\x89X2\xe2\x80\x89+\xe2\x80\x89B\xe2\x80\x89*\xe2\x80\x89X\xe2\x80\x89+\xe2\x80\x89C\xe2\x80\x89=\xe2\x80\x890. It is guaranteed that A\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x890 and that the equation has at least one real root. Output the roots of the equation.
The only line of input contains integers A,\xe2\x80\x89B and C (\xe2\x80\x89-\xe2\x80\x891000\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89A,\xe2\x80\x89B,\xe2\x80\x89C\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000,\xe2\x80\x89A\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x890), separated by spaces.
Output the roots of the equation in increasing order. If the equation has a single root of multiplicity 2, output it once. The root is considered to be correct if its absolute or relative error does not exceed 10\xe2\x80\x89-\xe2\x80\x894." "1500  x675"
529B "Group Photo 2 (online mirror version)" "brute force, greedy, sortings" "Many years have passed, and n friends met at a party again. Technologies have leaped forward since the last meeting, cameras with timer appeared and now it is not obligatory for one of the friends to stand with a camera, and, thus, being absent on the photo.
Simply speaking, the process of photographing can be described as follows. Each friend occupies a rectangle of pixels on the photo: the i-th of them in a standing state occupies a wi pixels wide and a hi pixels high rectangle. But also, each person can lie down for the photo, and then he will occupy a hi pixels wide and a wi pixels high rectangle.
The total photo will have size W\xe2\x80\x89\xc3\x97\xe2\x80\x89H, where W is the total width of all the people rectangles, and H is the maximum of the heights. The friends want to determine what minimum area the group photo can they obtain if no more than n\xe2\x80\x89/\xe2\x80\x892 of them can lie on the ground (it would be strange if more than n\xe2\x80\x89/\xe2\x80\x892 gentlemen lie on the ground together, isn\'t it?..)
Help them to achieve this goal.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the number of friends.
The next n lines have two integers wi,\xe2\x80\x89hi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi,\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) each, representing the size of the rectangle, corresponding to the i-th friend.
Print a single integer equal to the minimum possible area of the photo containing all friends if no more than n\xe2\x80\x89/\xe2\x80\x892 of them can lie on the ground." "1900  x876"
527E "Data Center Drama" "dfs and similar, graphs" "The project of a data center of a Big Software Company consists of n computers connected by m cables. Simply speaking, each computer can be considered as a box with multiple cables going out of the box. Very Important Information is transmitted along each cable in one of the two directions. As the data center plan is not yet approved, it wasn\'t determined yet in which direction information will go along each cable. The cables are put so that each computer is connected with each one, perhaps through some other computers.
The person in charge of the cleaning the data center will be Claudia Ivanova, the janitor. She loves to tie cables into bundles using cable ties. For some reasons, she groups the cables sticking out of a computer into groups of two, and if it isn\'t possible, then she gets furious and attacks the computer with the water from the bucket.
It should also be noted that due to the specific physical characteristics of the Very Important Information, it is strictly forbidden to connect in one bundle two cables where information flows in different directions.
The management of the data center wants to determine how to send information along each cable so that Claudia Ivanova is able to group all the cables coming out of each computer into groups of two, observing the condition above. Since it may not be possible with the existing connections plan, you are allowed to add the minimum possible number of cables to the scheme, and then you need to determine the direction of the information flow for each cable (yes, sometimes data centers are designed based on the janitors\' convenience...)
The first line contains two numbers, n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the number of computers and the number of the already present cables, respectively.
Each of the next lines contains two numbers ai,\xe2\x80\x89bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the indices of the computers connected by the i-th cable. The data centers often have a very complex structure, so a pair of computers may have more than one pair of cables between them and some cables may connect a computer with itself.
In the first line print a single number p (p\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89m) \xe2\x80\x94 the minimum number of cables in the final scheme.
In each of the next p lines print a pair of numbers ci,\xe2\x80\x89di (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci,\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), describing another cable. Such entry means that information will go along a certain cable in direction from ci to di.
Among the cables you printed there should be all the cables presented in the original plan in some of two possible directions. It is guaranteed that there is a solution where p doesn\'t exceed 500\xe2\x80\x89000.
If there are several posible solutions with minimum possible value of p, print any of them.
Picture for the first sample test. The tied pairs of cables are shown going out from the same point.
Picture for the second test from the statement. The added cables are drawin in bold.
Alternative answer for the second sample test:" "2600  x2004"
527D "Clique Problem" "data structures, dp, greedy, implementation, sortings" "The clique problem is one of the most well-known NP-complete problems. Under some simplification it can be formulated as follows. Consider an undirected graph G. It is required to find a subset of vertices C of the maximum size such that any two of them are connected by an edge in graph G. Sounds simple, doesn\'t it? Nobody yet knows an algorithm that finds a solution to this problem in polynomial time of the size of the graph. However, as with many other NP-complete problems, the clique problem is easier if you consider a specific type of a graph.
Consider n distinct points on a line. Let the i-th point have the coordinate xi and weight wi. Let\'s form graph G, whose vertices are these points and edges connect exactly the pairs of points (i,\xe2\x80\x89j), such that the distance between them is not less than the sum of their weights, or more formally: |xi\xe2\x80\x89-\xe2\x80\x89xj|\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89wi\xe2\x80\x89+\xe2\x80\x89wj.
Find the size of the maximum clique in such graph.
The first line contains the integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the number of points.
Each of the next n lines contains two numbers xi, wi (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the coordinate and the weight of a point. All xi are different.
Print a single number \xe2\x80\x94 the number of vertexes in the maximum clique of the given graph.
If you happen to know how to solve this problem without using the specific properties of the graph formulated in the problem statement, then you are able to get a prize of one million dollars!
The picture for the sample test." "1800  x4803"
527C "Glass Carving" "binary search, data structures, implementation" "Leonid wants to become a glass carver (the person who creates beautiful artworks by cutting the glass). He already has a rectangular w mm \xe2\x80\x89\xc3\x97\xe2\x80\x89 h mm sheet of glass, a diamond glass cutter and lots of enthusiasm. What he lacks is understanding of what to carve and how.
In order not to waste time, he decided to practice the technique of carving. To do this, he makes vertical and horizontal cuts through the entire sheet. This process results in making smaller rectangular fragments of glass. Leonid does not move the newly made glass fragments. In particular, a cut divides each fragment of glass that it goes through into smaller fragments.
After each cut Leonid tries to determine what area the largest of the currently available glass fragments has. Since there appear more and more fragments, this question takes him more and more time and distracts him from the fascinating process.
Leonid offers to divide the labor \xe2\x80\x94 he will cut glass, and you will calculate the area of the maximum fragment after each cut. Do you agree?
The first line contains three integers w,\xe2\x80\x89h,\xe2\x80\x89n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w,\xe2\x80\x89h\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000).
Next n lines contain the descriptions of the cuts. Each description has the form H y or V x. In the first case Leonid makes the horizontal cut at the distance y millimeters (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89h\xe2\x80\x89-\xe2\x80\x891) from the lower edge of the original sheet of glass. In the second case Leonid makes a vertical cut at distance x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w\xe2\x80\x89-\xe2\x80\x891) millimeters from the left edge of the original sheet of glass. It is guaranteed that Leonid won\'t make two identical cuts.
After each cut print on a single line the area of the maximum available glass fragment in mm2.
Picture for the first sample test: " "1500  x6933"
527B "Error Correct System" greedy "Ford Prefect got a job as a web developer for a small company that makes towels. His current work task is to create a search engine for the website of the company. During the development process, he needs to write a subroutine for comparing strings S and T of equal length to be ""similar"". After a brief search on the Internet, he learned about the Hamming distance between two strings S and T of the same length, which is defined as the number of positions in which S and T have different characters. For example, the Hamming distance between words ""permanent"" and ""pergament"" is two, as these words differ in the fourth and sixth letters.
Moreover, as he was searching for information, he also noticed that modern search engines have powerful mechanisms to correct errors in the request to improve the quality of search. Ford doesn\'t know much about human beings, so he assumed that the most common mistake in a request is swapping two arbitrary letters of the string (not necessarily adjacent). Now he wants to write a function that determines which two letters should be swapped in string S, so that the Hamming distance between a new string S and string T would be as small as possible, or otherwise, determine that such a replacement cannot reduce the distance between the strings.
Help him do this!
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the length of strings S and T.
The second line contains string S.
The third line contains string T.
Each of the lines only contains lowercase Latin letters.
In the first line, print number x \xe2\x80\x94 the minimum possible Hamming distance between strings S and T if you swap at most one pair of letters in S.
In the second line, either print the indexes i and j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j), if reaching the minimum possible distance is possible by swapping letters on positions i and j, or print ""-1 -1"", if it is not necessary to swap characters.
If there are multiple possible answers, print any of them.
In the second test it is acceptable to print i\xe2\x80\x89=\xe2\x80\x892, j\xe2\x80\x89=\xe2\x80\x893." "1500  x3886"
527A "Playing with Paper" "implementation, math" "One day Vasya was sitting on a not so interesting Maths lesson and making an origami from a rectangular a mm \xe2\x80\x89\xc3\x97\xe2\x80\x89 b mm sheet of paper (a\xe2\x80\x89>\xe2\x80\x89b). Usually the first step in making an origami is making a square piece of paper from the rectangular sheet by folding the sheet along the bisector of the right angle, and cutting the excess part.
After making a paper ship from the square piece, Vasya looked on the remaining (a\xe2\x80\x89-\xe2\x80\x89b) mm \xe2\x80\x89\xc3\x97\xe2\x80\x89 b mm strip of paper. He got the idea to use this strip of paper in the same way to make an origami, and then use the remainder (if it exists) and so on. At the moment when he is left with a square piece of paper, he will make the last ship from it and stop.
Can you determine how many ships Vasya will make during the lesson?
The first line of the input contains two integers a, b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b\xe2\x80\x89<\xe2\x80\x89a\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891012) \xe2\x80\x94 the sizes of the original sheet of paper.
Print a single integer \xe2\x80\x94 the number of ships that Vasya will make.
Pictures to the first and second sample test." "1100  x14479"
526G "Spiders Evil Plan" "greedy, trees" "Spiders are Om Nom\'s old enemies. They love eating candies as much as he does and that\'s why they keep trying to keep the monster away from his favorite candies. They came up with an evil plan to trap Om Nom.
Let\'s consider a rope structure consisting of n nodes and n\xe2\x80\x89-\xe2\x80\x891 ropes connecting the nodes. The structure is connected, thus, the ropes and the nodes form a tree. Each rope of the formed structure is associated with its length. A candy is tied to node x of the structure. Om Nom really wants to eat this candy.
The y spiders are trying to stop him from doing it. They decided to entangle the candy and some part of the structure into a web, thus attaching the candy to as large as possible part of the rope structure. 
Each spider can use his web to cover all ropes on the path between two arbitrary nodes a and b. Thus, y spiders can cover the set of ropes which is a union of y paths in the given tree. These y paths can arbitrarily intersect each other. The spiders want the following conditions to be hold:
The spiders haven\'t yet decided to what node of the structure they will tie the candy and how many spiders will cover the structure with web, so they asked you to help them. Help them calculate the optimal plan for multiple values of x and y.
The first line contains numbers n and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of nodes in the structure and the number of questions that the spiders want to ask you.
The next n\xe2\x80\x89-\xe2\x80\x891 lines determine the rope structure. The i-th line contains three integers ui,\xe2\x80\x89vi,\xe2\x80\x89li (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ui,\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ui\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89vi, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000), showing that there is a rope of length li between nodes ui and vi.
Next q lines describe the spiders\' questions. As they want you to answer their question online, they encoded their messages in a special manner.
Each of the next q lines contains two numbers xi,\xe2\x80\x89yi. In the first question of the spiders x\xe2\x80\x89=\xe2\x80\x89x1,\xe2\x80\x89y\xe2\x80\x89=\xe2\x80\x89y1.
To calculate values x and y in the spiders\' i-th (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q) question, you need to use the following formulas:


where Ansi\xe2\x80\x89-\xe2\x80\x891 is the total length of the ropes covered by a web in the answer for the (i\xe2\x80\x89-\xe2\x80\x891)-th question.
The following inequality holds: 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n.
For each question of the spiders print on a separate line a single integer Ansi \xe2\x80\x94 the total length of the ropes covered with web in the optimal plan." "3300  x749"
526F "Pudding Monsters" "data structures, divide and conquer" "In this problem you will meet the simplified model of game Pudding Monsters.
An important process in developing any game is creating levels. A game field in Pudding Monsters is an n\xe2\x80\x89\xc3\x97\xe2\x80\x89n rectangular grid, n of its cells contain monsters and some other cells contain game objects. The gameplay is about moving the monsters around the field. When two monsters are touching each other, they glue together into a single big one (as they are from pudding, remember?).
Statistics showed that the most interesting maps appear if initially each row and each column contains exactly one monster and the rest of map specifics is set up by the correct positioning of the other game objects. 
A technique that\'s widely used to make the development process more efficient is reusing the available resources. For example, if there is a large n\xe2\x80\x89\xc3\x97\xe2\x80\x89n map, you can choose in it a smaller k\xe2\x80\x89\xc3\x97\xe2\x80\x89k square part, containing exactly k monsters and suggest it as a simplified version of the original map.
You wonder how many ways there are to choose in the initial map a k\xe2\x80\x89\xc3\x97\xe2\x80\x89k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) square fragment, containing exactly k pudding monsters. Calculate this number.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xe2\x80\x89\xc3\x97\xe2\x80\x89105) \xe2\x80\x94 the size of the initial field.
Next n lines contain the coordinates of the cells initially containing monsters. The i-th of the next lines contains two numbers ri,\xe2\x80\x89ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri,\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the row number and the column number of the cell that initially contains the i-th monster.
It is guaranteed that all ri are distinct numbers and all ci are distinct numbers.
Print the number of distinct square fragments of the original field that can form a new map." "3000  x2578"
526E "Transmitting Levels" "dp, implementation" "Optimizing the amount of data transmitted via a network is an important and interesting part of developing any network application.
In one secret game developed deep in the ZeptoLab company, the game universe consists of n levels, located in a circle. You can get from level i to levels i\xe2\x80\x89-\xe2\x80\x891 and i\xe2\x80\x89+\xe2\x80\x891, also you can get from level 1 to level n and vice versa. The map of the i-th level description size is ai bytes.
In order to reduce the transmitted traffic, the game gets levels as follows. All the levels on the server are divided into m groups and each time a player finds himself on one of the levels of a certain group for the first time, the server sends all levels of the group to the game client as a single packet. Thus, when a player travels inside the levels of a single group, the application doesn\'t need any new information. Due to the technical limitations the packet can contain an arbitrary number of levels but their total size mustn\'t exceed b bytes, where b is some positive integer constant.
Usual situation is that players finish levels one by one, that\'s why a decision was made to split n levels into m groups so that each group was a continuous segment containing multiple neighboring levels (also, the group can have two adjacent levels, n and 1). Specifically, if the descriptions of all levels have the total weight of at most b bytes, then they can all be united into one group to be sent in a single packet.
Determine, what minimum number of groups do you need to make in order to organize the levels of the game observing the conditions above?
As developing a game is a long process and technology never stagnates, it is yet impossible to predict exactly what value will take constant value b limiting the packet size when the game is out. That\'s why the developers ask you to find the answer for multiple values of b.
The first line contains two integers n, q (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) \xe2\x80\x94 the number of levels in the game universe and the number of distinct values of b that you need to process.
The second line contains n integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the sizes of the levels in bytes.
The next q lines contain integers bj (), determining the values of constant b, for which you need to determine the answer.
For each value of kj from the input print on a single line integer mj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89mj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), determining the minimum number of groups to divide game levels into for transmission via network observing the given conditions. 
In the test from the statement you can do in the following manner." "2400  x1085"
526D "Om Nom and Necklace" "hashing, string suffix structures, strings" "One day Om Nom found a thread with n beads of different colors. He decided to cut the first several beads from this thread to make a bead necklace and present it to his girlfriend Om Nelly.
Om Nom knows that his girlfriend loves beautiful patterns. That\'s why he wants the beads on the necklace to form a regular pattern. A sequence of beads S is regular if it can be represented as S\xe2\x80\x89=\xe2\x80\x89A\xe2\x80\x89+\xe2\x80\x89B\xe2\x80\x89+\xe2\x80\x89A\xe2\x80\x89+\xe2\x80\x89B\xe2\x80\x89+\xe2\x80\x89A\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89A\xe2\x80\x89+\xe2\x80\x89B\xe2\x80\x89+\xe2\x80\x89A, where A and B are some bead sequences, ""\xe2\x80\x89+\xe2\x80\x89"" is the concatenation of sequences, there are exactly 2k\xe2\x80\x89+\xe2\x80\x891 summands in this sum, among which there are k\xe2\x80\x89+\xe2\x80\x891 ""A"" summands and k ""B"" summands that follow in alternating order. Om Nelly knows that her friend is an eager mathematician, so she doesn\'t mind if A or B is an empty sequence.
Help Om Nom determine in which ways he can cut off the first several beads from the found thread (at least one; probably, all) so that they form a regular pattern. When Om Nom cuts off the beads, he doesn\'t change their order.
The first line contains two integers n, k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000) \xe2\x80\x94 the number of beads on the thread that Om Nom found and number k from the definition of the regular sequence above.
The second line contains the sequence of n lowercase Latin letters that represent the colors of the beads. Each color corresponds to a single letter.
Print a string consisting of n zeroes and ones. Position i (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) must contain either number one if the first i beads on the thread form a regular sequence, or a zero otherwise.
In the first sample test a regular sequence is both a sequence of the first 6 beads (we can take A\xe2\x80\x89=\xe2\x80\x89"""", B\xe2\x80\x89=\xe2\x80\x89""bca""), and a sequence of the first 7 beads (we can take A\xe2\x80\x89=\xe2\x80\x89""b"", B\xe2\x80\x89=\xe2\x80\x89""ca"").
In the second sample test, for example, a sequence of the first 13 beads is regular, if we take A\xe2\x80\x89=\xe2\x80\x89""aba"", B\xe2\x80\x89=\xe2\x80\x89""ba""." "2200  x2178"
526C "Om Nom and Candies" "brute force, greedy, math" "A sweet little monster Om Nom loves candies very much. One day he found himself in a rather tricky situation that required him to think a bit in order to enjoy candies the most. Would you succeed with the same task if you were on his place?
One day, when he came to his friend Evan, Om Nom didn\'t find him at home but he found two bags with candies. The first was full of blue candies and the second bag was full of red candies. Om Nom knows that each red candy weighs Wr grams and each blue candy weighs Wb grams. Eating a single red candy gives Om Nom Hr joy units and eating a single blue candy gives Om Nom Hb joy units.
Candies are the most important thing in the world, but on the other hand overeating is not good. Om Nom knows if he eats more than C grams of candies, he will get sick. Om Nom thinks that it isn\'t proper to leave candy leftovers, so he can only eat a whole candy. Om Nom is a great mathematician and he quickly determined how many candies of what type he should eat in order to get the maximum number of joy units. Can you repeat his achievement? You can assume that each bag contains more candies that Om Nom can eat.
The single line contains five integers C,\xe2\x80\x89Hr,\xe2\x80\x89Hb,\xe2\x80\x89Wr,\xe2\x80\x89Wb (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89C,\xe2\x80\x89Hr,\xe2\x80\x89Hb,\xe2\x80\x89Wr,\xe2\x80\x89Wb\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print a single integer \xe2\x80\x94 the maximum number of joy units that Om Nom can get.
In the sample test Om Nom can eat two candies of each type and thus get 16 joy units." "2000  x2524"
526B "Om Nom and Dark Park" "dfs and similar, greedy, implementation" "Om Nom is the main character of a game ""Cut the Rope"". He is a bright little monster who likes visiting friends living at the other side of the park. However the dark old parks can scare even somebody as fearless as Om Nom, so he asks you to help him.
The park consists of 2n\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89-\xe2\x80\x891 squares connected by roads so that the scheme of the park is a full binary tree of depth n. More formally, the entrance to the park is located at the square 1. The exits out of the park are located at squares 2n,\xe2\x80\x892n\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x892n\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89-\xe2\x80\x891 and these exits lead straight to the Om Nom friends\' houses. From each square i (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89<\xe2\x80\x892n\xe2\x80\x89+\xe2\x80\x891) there is a road to the square . Thus, it is possible to go from the park entrance to each of the exits by walking along exactly n roads. 
Om Nom loves counting lights on the way to his friend. Om Nom is afraid of spiders who live in the park, so he doesn\'t like to walk along roads that are not enough lit. What he wants is that the way to any of his friends should have in total the same number of lights. That will make him feel safe. 
He asked you to help him install additional lights. Determine what minimum number of lights it is needed to additionally place on the park roads so that a path from the entrance to any exit of the park contains the same number of street lights. You may add an arbitrary number of street lights to each of the roads.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910) \xe2\x80\x94 the number of roads on the path from the entrance to any exit.
The next line contains 2n\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89-\xe2\x80\x892 numbers a2,\xe2\x80\x89a3,\xe2\x80\x89... a2n\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89-\xe2\x80\x891 \xe2\x80\x94 the initial numbers of street lights on each road of the park. Here ai is the number of street lights on the road between squares i and . All numbers ai are positive integers, not exceeding 100.
Print the minimum number of street lights that we should add to the roads of the park to make Om Nom feel safe.
Picture for the sample test. Green color denotes the additional street lights." "1400  x4505"
526A "King of Thieves" "brute force, implementation" "In this problem you will meet the simplified model of game King of Thieves.
In a new ZeptoLab game called ""King of Thieves"" your aim is to reach a chest with gold by controlling your character, avoiding traps and obstacles on your way.
An interesting feature of the game is that you can design your own levels that will be available to other players. Let\'s consider the following simple design of a level.
A dungeon consists of n segments located at a same vertical level, each segment is either a platform that character can stand on, or a pit with a trap that makes player lose if he falls into it. All segments have the same length, platforms on the scheme of the level are represented as \'*\' and pits are represented as \'.\'. 
One of things that affects speedrun characteristics of the level is a possibility to perform a series of consecutive jumps of the same length. More formally, when the character is on the platform number i1, he can make a sequence of jumps through the platforms i1\xe2\x80\x89<\xe2\x80\x89i2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89ik, if i2\xe2\x80\x89-\xe2\x80\x89i1\xe2\x80\x89=\xe2\x80\x89i3\xe2\x80\x89-\xe2\x80\x89i2\xe2\x80\x89=\xe2\x80\x89...\xe2\x80\x89=\xe2\x80\x89ik\xe2\x80\x89-\xe2\x80\x89ik\xe2\x80\x89-\xe2\x80\x891. Of course, all segments i1,\xe2\x80\x89i2,\xe2\x80\x89... ik should be exactly the platforms, not pits. 
Let\'s call a level to be good if you can perform a sequence of four jumps of the same length or in the other words there must be a sequence i1,\xe2\x80\x89i2,\xe2\x80\x89...,\xe2\x80\x89i5, consisting of five platforms so that the intervals between consecutive platforms are of the same length. Given the scheme of the level, check if it is good.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of segments on the level.
Next line contains the scheme of the level represented as a string of n characters \'*\' and \'.\'.
If the level is good, print the word ""yes"" (without the quotes), otherwise print the word ""no"" (without the quotes).
In the first sample test you may perform a sequence of jumps through platforms 2,\xe2\x80\x895,\xe2\x80\x898,\xe2\x80\x8911,\xe2\x80\x8914." "1300  x4783"
525E "Anya and Cubes" "binary search, bitmasks, brute force, dp, math, meet-in-the-middle" "Anya loves to fold and stick. Today she decided to do just that.
Anya has n cubes lying in a line and numbered from 1 to n from left to right, with natural numbers written on them. She also has k stickers with exclamation marks. We know that the number of stickers does not exceed the number of cubes.
Anya can stick an exclamation mark on the cube and get the factorial of the number written on the cube. For example, if a cube reads 5, then after the sticking it reads 5!, which equals 120.
You need to help Anya count how many ways there are to choose some of the cubes and stick on some of the chosen cubes at most k exclamation marks so that the sum of the numbers written on the chosen cubes after the sticking becomes equal to S. Anya can stick at most one exclamation mark on each cube. Can you do it?
Two ways are considered the same if they have the same set of chosen cubes and the same set of cubes with exclamation marks.
The first line of the input contains three space-separated integers n, k and S (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8925, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89S\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891016) \xe2\x80\x94 the number of cubes and the number of stickers that Anya has, and the sum that she needs to get. 
The second line contains n positive integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the numbers, written on the cubes. The cubes in the input are described in the order from left to right, starting from the first one. 
Multiple cubes can contain the same numbers.
Output the number of ways to choose some number of cubes and stick exclamation marks on some of them so that the sum of the numbers became equal to the given number S.
In the first sample the only way is to choose both cubes and stick an exclamation mark on each of them.
In the second sample the only way is to choose both cubes but don\'t stick an exclamation mark on any of them.
In the third sample it is possible to choose any of the cubes in three ways, and also we may choose to stick or not to stick the exclamation mark on it. So, the total number of ways is six." "2100  x3312"
525D "Arthur and Walls" "constructive algorithms, data structures, graphs, greedy, shortest paths" "Finally it is a day when Arthur has enough money for buying an apartment. He found a great option close to the center of the city with a nice price.
Plan of the apartment found by Arthur looks like a rectangle n\xe2\x80\x89\xc3\x97\xe2\x80\x89m consisting of squares of size 1\xe2\x80\x89\xc3\x97\xe2\x80\x891. Each of those squares contains either a wall (such square is denoted by a symbol ""*"" on the plan) or a free space (such square is denoted on the plan by a symbol ""."").
Room in an apartment is a maximal connected area consisting of free squares. Squares are considered adjacent if they share a common side.
The old Arthur dream is to live in an apartment where all rooms are rectangles. He asks you to calculate minimum number of walls you need to remove in order to achieve this goal. After removing a wall from a square it becomes a free square. While removing the walls it is possible that some rooms unite into a single one.
The first line of the input contains two integers n,\xe2\x80\x89m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000) denoting the size of the Arthur apartments.
Following n lines each contain m symbols \xe2\x80\x94 the plan of the apartment.
If the cell is denoted by a symbol ""*"" then it contains a wall.
If the cell is denoted by a symbol ""."" then it this cell is free from walls and also this cell is contained in some of the rooms.
Output n rows each consisting of m symbols that show how the Arthur apartment plan should look like after deleting the minimum number of walls in order to make each room (maximum connected area free from walls) be a rectangle. 
If there are several possible answers, output any of them." "2400  x1789"
525C "Ilya and Sticks" "greedy, math, sortings" "In the evening, after the contest Ilya was bored, and he really felt like maximizing. He remembered that he had a set of n sticks and an instrument. Each stick is characterized by its length li.
Ilya decided to make a rectangle from the sticks. And due to his whim, he decided to make rectangles in such a way that maximizes their total area. Each stick is used in making at most one rectangle, it is possible that some of sticks remain unused. Bending sticks is not allowed.
Sticks with lengths a1, a2, a3 and a4 can make a rectangle if the following properties are observed:
A rectangle can be made of sticks with lengths of, for example, 3 3 3 3 or 2 2 4 4. A rectangle cannot be made of, for example, sticks 5 5 5 7.
Ilya also has an instrument which can reduce the length of the sticks. The sticks are made of a special material, so the length of each stick can be reduced by at most one. For example, a stick with length 5 can either stay at this length or be transformed into a stick of length 4.
You have to answer the question \xe2\x80\x94 what maximum total area of the rectangles can Ilya get with a file if makes rectangles from the available sticks?
The first line of the input contains a positive integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of the available sticks.
The second line of the input contains n positive integers li (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the lengths of the sticks.
The first line of the output must contain a single non-negative integer \xe2\x80\x94 the maximum total area of the rectangles that Ilya can make from the available sticks." "1600  x5827"
525B "Pasha and String" "constructive algorithms, greedy, math, strings" "Pasha got a very beautiful string s for his birthday, the string consists of lowercase Latin letters. The letters in the string are numbered from 1 to |s| from left to right, where |s| is the length of the given string.
Pasha didn\'t like his present very much so he decided to change it. After his birthday Pasha spent m days performing the following transformations on his string \xe2\x80\x94 each day he chose integer ai and reversed a piece of string (a segment) from position ai to position |s|\xe2\x80\x89-\xe2\x80\x89ai\xe2\x80\x89+\xe2\x80\x891. It is guaranteed that 2\xc2\xb7ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|.
You face the following task: determine what Pasha\'s string will look like after m days.
The first line of the input contains Pasha\'s string s of length from 2 to 2\xc2\xb7105 characters, consisting of lowercase Latin letters.
The second line contains a single integer m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94  the number of days when Pasha changed his string.
The third line contains m space-separated elements ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai; 2\xc2\xb7ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|) \xe2\x80\x94 the position from which Pasha started transforming the string on the i-th day.
In the first line of the output print what Pasha\'s string s will look like after m days." "1400  x9438"
525A "Vitaliy and Pie" "greedy, hashing, strings" "After a hard day Vitaly got very hungry and he wants to eat his favorite potato pie. But it\'s not that simple. Vitaly is in the first room of the house with n room located in a line and numbered starting from one from left to right. You can go from the first room to the second room, from the second room to the third room and so on \xe2\x80\x94 you can go from the (n\xe2\x80\x89-\xe2\x80\x891)-th room to the n-th room. Thus, you can go to room x only from room x\xe2\x80\x89-\xe2\x80\x891.
The potato pie is located in the n-th room and Vitaly needs to go there. 
Each pair of consecutive rooms has a door between them. In order to go to room x from room x\xe2\x80\x89-\xe2\x80\x891, you need to open the door between the rooms with the corresponding key. 
In total the house has several types of doors (represented by uppercase Latin letters) and several types of keys (represented by lowercase Latin letters). The key of type t can open the door of type T if and only if t and T are the same letter, written in different cases. For example, key f can open door F.
Each of the first n\xe2\x80\x89-\xe2\x80\x891 rooms contains exactly one key of some type that Vitaly can use to get to next rooms. Once the door is open with some key, Vitaly won\'t get the key from the keyhole but he will immediately run into the next room. In other words, each key can open no more than one door.
Vitaly realizes that he may end up in some room without the key that opens the door to the next room. Before the start his run for the potato pie Vitaly can buy any number of keys of any type that is guaranteed to get to room n.
Given the plan of the house, Vitaly wants to know what is the minimum number of keys he needs to buy to surely get to the room n, which has a delicious potato pie. Write a program that will help Vitaly find out this number.
The first line of the input contains a positive integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of rooms in the house.
The second line of the input contains string s of length 2\xc2\xb7n\xe2\x80\x89-\xe2\x80\x892. Let\'s number the elements of the string from left to right, starting from one. 
The odd positions in the given string s contain lowercase Latin letters \xe2\x80\x94 the types of the keys that lie in the corresponding rooms. Thus, each odd position i of the given string s contains a lowercase Latin letter \xe2\x80\x94 the type of the key that lies in room number (i\xe2\x80\x89+\xe2\x80\x891)\xe2\x80\x89/\xe2\x80\x892.
The even positions in the given string contain uppercase Latin letters \xe2\x80\x94 the types of doors between the rooms. Thus, each even position i of the given string s contains an uppercase letter \xe2\x80\x94 the type of the door that leads from room i\xe2\x80\x89/\xe2\x80\x892 to room i\xe2\x80\x89/\xe2\x80\x892\xe2\x80\x89+\xe2\x80\x891.
Print the only integer \xe2\x80\x94 the minimum number of keys that Vitaly needs to buy to surely get from room one to room n." "1100  x14664"
524F "And Yet Another Bracket Sequence" "data structures, greedy, hashing, string suffix structures, strings" "Polycarpus has a finite sequence of opening and closing brackets. In order not to fall asleep in a lecture, Polycarpus is having fun with his sequence. He is able to perform two operations:
Polycarpus can apply any number of operations to his sequence and adding a cyclic shift in any order. As a result, he wants to get the correct bracket sequence of the minimum possible length. If there are several such sequences, Polycarpus is interested in the lexicographically smallest one. Help him find such a sequence.
Acorrect bracket sequence is a sequence of opening and closing brackets, from which you can get a correct arithmetic expression by adding characters ""1"" and ""+"" . Each opening bracket must correspond to a closed one. For example, the sequences ""(())()"", ""()"", ""(()(()))"" are correct and "")("", ""(()"" and ""(()))("" are not.
The sequence a1 a2... an is lexicographically smaller than sequence b1 b2... bn, if there is such number i from 1 to n, thatak\xe2\x80\x89=\xe2\x80\x89bk for 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89<\xe2\x80\x89i and ai\xe2\x80\x89<\xe2\x80\x89bi. Consider that ""("" \xe2\x80\x89<\xe2\x80\x89 "")"".
The first line contains Polycarpus\'s sequence consisting of characters ""("" and "")"". The length of a line is from 1 to 1\xe2\x80\x89000\xe2\x80\x89000.
Print a correct bracket sequence of the minimum length that Polycarpus can obtain by his operations. If there are multiple such sequences, print the lexicographically minimum one.
The sequence in the first example is already correct, but to get the lexicographically minimum answer, you need to perform four cyclic shift operations. In the second example you need to add a closing parenthesis between the second and third brackets and make a cyclic shift. You can first make the shift, and then add the bracket at the end." "2700  x535"
524E "Rooks and Rectangles" "data structures, sortings" "Polycarpus has a chessboard of size n\xe2\x80\x89\xc3\x97\xe2\x80\x89m, where k rooks are placed. Polycarpus hasn\'t yet invented the rules of the game he will play. However, he has already allocated q rectangular areas of special strategic importance on the board, they must be protected well. According to Polycarpus, a rectangular area of \xe2\x80\x8b\xe2\x80\x8bthe board is well protected if all its vacant squares can be beaten by the rooks that stand on this area. The rooks on the rest of the board do not affect the area\'s defense. The position of the rooks is fixed and cannot be changed. We remind you that the the rook beats the squares located on the same vertical or horizontal line with it, if there are no other pieces between the square and the rook. Help Polycarpus determine whether all strategically important areas are protected.
The first line contains four integers n, m, k and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the sizes of the board, the number of rooks and the number of strategically important sites. We will consider that the cells of the board are numbered by integers from 1 to n horizontally and from 1 to m vertically. Next k lines contain pairs of integers ""x y"", describing the positions of the rooks (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m). It is guaranteed that all the rooks are in distinct squares. Next q lines describe the strategically important areas as groups of four integers ""x1 y1 x2 y2"" (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m). The corresponding rectangle area consists of cells (x,\xe2\x80\x89y), for which x1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x2, y1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y2. Strategically important areas can intersect of coincide.
Print q lines. For each strategically important site print ""YES"" if it is well defended and ""NO"" otherwise.
Picture to the sample:  For the last area the answer is ""NO"", because cell (1,\xe2\x80\x892) cannot be hit by a rook." "2400  x1209"
524D "Social Network" "greedy, two pointers" "Polycarpus got an internship in one well-known social network. His test task is to count the number of unique users who have visited a social network during the day. Polycarpus was provided with information on all user requests for this time period. For each query, we know its time... and nothing else, because Polycarpus has already accidentally removed the user IDs corresponding to the requests from the database. Thus, it is now impossible to determine whether any two requests are made by the same person or by different people.
But wait, something is still known, because that day a record was achieved \xe2\x80\x94 M simultaneous users online! In addition, Polycarpus believes that if a user made a request at second s, then he was online for T seconds after that, that is, at seconds s, s\xe2\x80\x89+\xe2\x80\x891, s\xe2\x80\x89+\xe2\x80\x892, ..., s\xe2\x80\x89+\xe2\x80\x89T\xe2\x80\x89-\xe2\x80\x891. So, the user\'s time online can be calculated as the union of time intervals of the form [s,\xe2\x80\x89s\xe2\x80\x89+\xe2\x80\x89T\xe2\x80\x89-\xe2\x80\x891] over all times s of requests from him.
Guided by these thoughts, Polycarpus wants to assign a user ID to each request so that:
Help Polycarpus cope with the test.
The first line contains three integers n, M and T (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89M\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89T\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8986400) \xe2\x80\x94 the number of queries, the record number of online users and the time when the user was online after a query was sent. Next n lines contain the times of the queries in the format ""hh:mm:ss"", where hh are hours, mm are minutes, ss are seconds. The times of the queries follow in the non-decreasing order, some of them can coincide. It is guaranteed that all the times and even all the segments of type [s,\xe2\x80\x89s\xe2\x80\x89+\xe2\x80\x89T\xe2\x80\x89-\xe2\x80\x891] are within one 24-hour range (from 00:00:00 to 23:59:59). 
In the first line print number R \xe2\x80\x94 the largest possible number of distinct users. The following n lines should contain the user IDs for requests in the same order in which the requests are given in the input. User IDs must be integers from 1 to R. The requests of the same user must correspond to the same identifiers, the requests of distinct users must correspond to distinct identifiers. If there are multiple solutions, print any of them. If there is no solution, print ""No solution"" (without the quotes).
Consider the first sample. The user who sent the first request was online from 17:05:53 to 17:06:02, the user who sent the second request was online from 17:05:58 to 17:06:07, the user who sent the third request, was online from 17:06:01 to 17:06:10. Thus, these IDs cannot belong to three distinct users, because in that case all these users would be online, for example, at 17:06:01. That is impossible, because M\xe2\x80\x89=\xe2\x80\x892. That means that some two of these queries belonged to the same user. One of the correct variants is given in the answer to the sample. For it user 1 was online from 17:05:53 to 17:06:02, user 2 \xe2\x80\x94 from 17:05:58 to 17:06:10 (he sent the second and third queries), user 3 \xe2\x80\x94 from 22:39:47 to 22:39:56.
In the second sample there is only one query. So, only one user visited the network within the 24-hour period and there couldn\'t be two users online on the network simultaneously. (The time the user spent online is the union of time intervals for requests, so users who didn\'t send requests could not be online in the network.) " "2100  x956"
524C "The Art of Dealing with ATM" "binary search, sortings" "ATMs of a well-known bank of a small country are arranged so that they can not give any amount of money requested by the user. Due to the limited size of the bill dispenser (the device that is directly giving money from an ATM) and some peculiarities of the ATM structure, you can get at most k bills from it, and the bills may be of at most two distinct denominations.
For example, if a country uses bills with denominations 10, 50, 100, 500, 1000 and 5000 burles, then at k\xe2\x80\x89=\xe2\x80\x8920 such ATM can give sums 100\xe2\x80\x89000 burles and 96\xe2\x80\x89000 burles, but it cannot give sums 99\xe2\x80\x89000 and 101\xe2\x80\x89000 burles.
Let\'s suppose that the country uses bills of n distinct denominations, and the ATM that you are using has an unlimited number of bills of each type. You know that during the day you will need to withdraw a certain amount of cash q times. You know that when the ATM has multiple ways to give money, it chooses the one which requires the minimum number of bills, or displays an error message if it cannot be done. Determine the result of each of the q of requests for cash withdrawal.
The first line contains two integers n, k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920).
The next line contains n space-separated integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89107) \xe2\x80\x94 the denominations of the bills that are used in the country. Numbers ai follow in the strictly increasing order.
The next line contains integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920) \xe2\x80\x94 the number of requests for cash withdrawal that you will make.
The next q lines contain numbers xi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7108) \xe2\x80\x94 the sums of money in burles that you are going to withdraw from the ATM.
For each request for cash withdrawal print on a single line the minimum number of bills it can be done, or print \xe2\x80\x89-\xe2\x80\x891, if it is impossible to get the corresponding sum." "1900  x2057"
524B "Фото на память - 2 (round version)" "dp, greedy" "\xd0\x9f\xd1\x80\xd0\xbe\xd1\x88\xd0\xbb\xd0\xbe \xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbb\xd0\xb5\xd1\x82, \xd0\xb8 \xd0\xbd\xd0\xb0 \xd0\xb2\xd0\xb5\xd1\x87\xd0\xb5\xd1\x80\xd0\xb8\xd0\xbd\xd0\xba\xd0\xb5 \xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb0 \xd0\xb2\xd1\x81\xd1\x82\xd1\x80\xd0\xb5\xd1\x82\xd0\xb8\xd0\xbb\xd0\xb8\xd1\x81\xd1\x8c n \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9. \xd0\xa1 \xd0\xbc\xd0\xbe\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb0 \xd0\xbf\xd0\xbe\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb5\xd0\xb9 \xd0\xb2\xd1\x81\xd1\x82\xd1\x80\xd0\xb5\xd1\x87\xd0\xb8 \xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xb8\xd0\xba\xd0\xb0 \xd1\x88\xd0\xb0\xd0\xb3\xd0\xbd\xd1\x83\xd0\xbb\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xba\xd0\xbe \xd0\xb2\xd0\xbf\xd0\xb5\xd1\x80\xd1\x91\xd0\xb4, \xd0\xbf\xd0\xbe\xd1\x8f\xd0\xb2\xd0\xb8\xd0\xbb\xd0\xb8\xd1\x81\xd1\x8c \xd1\x84\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb0\xd0\xbf\xd0\xbf\xd0\xb0\xd1\x80\xd0\xb0\xd1\x82\xd1\x8b \xd1\x81 \xd0\xb0\xd0\xb2\xd1\x82\xd0\xbe\xd1\x81\xd0\xbf\xd1\x83\xd1\x81\xd0\xba\xd0\xbe\xd0\xbc, \xd0\xb8 \xd1\x82\xd0\xb5\xd0\xbf\xd0\xb5\xd1\x80\xd1\x8c \xd0\xbd\xd0\xb5 \xd1\x82\xd1\x80\xd0\xb5\xd0\xb1\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f, \xd1\x87\xd1\x82\xd0\xbe\xd0\xb1\xd1\x8b \xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbd \xd0\xb8\xd0\xb7 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9 \xd1\x81\xd1\x82\xd0\xbe\xd1\x8f\xd0\xbb \xd1\x81 \xd1\x84\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb0\xd0\xbf\xd0\xbf\xd0\xb0\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xbc, \xd0\xb8, \xd1\x82\xd0\xb5\xd0\xbc \xd1\x81\xd0\xb0\xd0\xbc\xd1\x8b\xd0\xbc, \xd0\xbe\xd0\xba\xd0\xb0\xd0\xb7\xd1\x8b\xd0\xb2\xd0\xb0\xd0\xbb\xd1\x81\xd1\x8f \xd0\xbd\xd0\xb5 \xd0\xb7\xd0\xb0\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb0\xd1\x82\xd0\xbb\xd1\x91\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xbd\xd0\xb0 \xd1\x81\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xba\xd0\xb5.
\xd0\xa3\xd0\xbf\xd1\x80\xd0\xbe\xd1\x89\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd1\x86\xd0\xb5\xd1\x81\xd1\x81 \xd1\x84\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbe\xd0\xbf\xd0\xb8\xd1\x81\xd0\xb0\xd1\x82\xd1\x8c \xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8e\xd1\x89\xd0\xb8\xd0\xbc \xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd0\xb7\xd0\xbe\xd0\xbc. \xd0\x9d\xd0\xb0 \xd1\x84\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd0\xb8 \xd0\xba\xd0\xb0\xd0\xb6\xd0\xb4\xd1\x8b\xd0\xb9 \xd0\xb8\xd0\xb7 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9 \xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbf\xd1\x80\xd1\x8f\xd0\xbc\xd0\xbe\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb8\xd0\xba \xd0\xb8\xd0\xb7 \xd0\xbf\xd0\xb8\xd0\xba\xd1\x81\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9: \xd0\xb2 \xd1\x81\xd1\x82\xd0\xbe\xd1\x8f\xd1\x87\xd0\xb5\xd0\xbc \xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb8 i-\xd0\xb9 \xd0\xb8\xd0\xb7 \xd0\xbd\xd0\xb8\xd1\x85 \xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbf\xd1\x80\xd1\x8f\xd0\xbc\xd0\xbe\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb8\xd0\xba \xd1\x88\xd0\xb8\xd1\x80\xd0\xb8\xd0\xbd\xd1\x8b wi \xd0\xbf\xd0\xb8\xd0\xba\xd1\x81\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9 \xd0\xb8 \xd0\xb2\xd1\x8b\xd1\x81\xd0\xbe\xd1\x82\xd1\x8b hi \xd0\xbf\xd0\xb8\xd0\xba\xd1\x81\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9. \xd0\x9d\xd0\xbe \xd1\x82\xd0\xb0\xd0\xba\xd0\xb6\xd0\xb5, \xd0\xbf\xd1\x80\xd0\xb8 \xd1\x84\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb8 \xd0\xba\xd0\xb0\xd0\xb6\xd0\xb4\xd1\x8b\xd0\xb9 \xd1\x87\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb5\xd0\xba \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xbb\xd0\xb5\xd1\x87\xd1\x8c, \xd0\xb8 \xd1\x82\xd0\xbe\xd0\xb3\xd0\xb4\xd0\xb0 \xd0\xbe\xd0\xbd \xd0\xb1\xd1\x83\xd0\xb4\xd0\xb5\xd1\x82 \xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x82\xd1\x8c \xd0\xbf\xd1\x80\xd1\x8f\xd0\xbc\xd0\xbe\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb8\xd0\xba \xd1\x88\xd0\xb8\xd1\x80\xd0\xb8\xd0\xbd\xd1\x8b hi \xd0\xbf\xd0\xb8\xd0\xba\xd1\x81\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9 \xd0\xb8 \xd0\xb2\xd1\x8b\xd1\x81\xd0\xbe\xd1\x82\xd1\x8b wi \xd0\xbf\xd0\xb8\xd0\xba\xd1\x81\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9.
\xd0\x9e\xd0\xb1\xd1\x89\xd0\xb0\xd1\x8f \xd1\x84\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd1\x8f \xd0\xb1\xd1\x83\xd0\xb4\xd0\xb5\xd1\x82 \xd0\xb8\xd0\xbc\xd0\xb5\xd1\x82\xd1\x8c \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbc\xd0\xb5\xd1\x80\xd1\x8b W\xe2\x80\x89\xc3\x97\xe2\x80\x89H, \xd0\xb3\xd0\xb4\xd0\xb5 W \xe2\x80\x94 \xd1\x81\xd1\x83\xd0\xbc\xd0\xbc\xd0\xb0\xd1\x80\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x88\xd0\xb8\xd1\x80\xd0\xb8\xd0\xbd\xd0\xb0 \xd0\xb2\xd1\x81\xd0\xb5\xd1\x85 \xd0\xbf\xd1\x80\xd1\x8f\xd0\xbc\xd0\xbe\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2-\xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xb9, \xd0\xb0 H \xe2\x80\x94 \xd0\xbc\xd0\xb0\xd0\xba\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xb8\xd0\xb7 \xd0\xb2\xd1\x8b\xd1\x81\xd0\xbe\xd1\x82. \xd0\x94\xd1\x80\xd1\x83\xd0\xb7\xd1\x8c\xd1\x8f \xd1\x85\xd0\xbe\xd1\x82\xd1\x8f\xd1\x82 \xd0\xbe\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x82\xd1\x8c, \xd0\xba\xd0\xb0\xd0\xba\xd1\x83\xd1\x8e \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x83\xd1\x8e \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xb8\xd0\xbc\xd0\xb5\xd1\x82\xd1\x8c \xd0\xbe\xd0\xb1\xd1\x89\xd0\xb0\xd1\x8f \xd1\x84\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd1\x8f. \xd0\x9f\xd0\xbe\xd0\xbc\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbc \xd0\xb2 \xd1\x8d\xd1\x82\xd0\xbe\xd0\xbc.
\xd0\x92 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb2\xd0\xbe\xd0\xb9 \xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xba\xd0\xb5 \xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd0\xb5\xd1\x82 \xd1\x86\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xb5 \xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd0\xbe n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 \xd0\xba\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9.
\xd0\x92 \xd0\xbf\xd0\xbe\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8e\xd1\x89\xd0\xb8\xd1\x85 n \xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x85 \xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8e\xd1\x82 \xd0\xbf\xd0\xbe \xd0\xb4\xd0\xb2\xd0\xb0 \xd1\x86\xd0\xb5\xd0\xbb\xd1\x8b\xd1\x85 \xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd0\xb0 wi,\xe2\x80\x89hi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi,\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000), \xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb0\xd1\x8e\xd1\x89\xd0\xb8\xd0\xb5 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbc\xd0\xb5\xd1\x80\xd1\x8b \xd0\xbf\xd1\x80\xd1\x8f\xd0\xbc\xd0\xbe\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb8\xd0\xba\xd0\xb0, \xd1\x81\xd0\xbe\xd0\xbe\xd1\x82\xd0\xb2\xd0\xb5\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd1\x8e\xd1\x89\xd0\xb5\xd0\xb3\xd0\xbe i-\xd0\xbc\xd1\x83 \xd0\xb8\xd0\xb7 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9.
\xd0\x92\xd1\x8b\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb5\xd0\xb4\xd0\xb8\xd0\xbd\xd1\x81\xd1\x82\xd0\xb2\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \xd1\x86\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xb5 \xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd0\xbe, \xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xbe\xd0\xb5 \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb2\xd0\xbe\xd0\xb7\xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd0\xb8 \xd1\x84\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd0\xb8, \xd0\xb2\xd0\xbc\xd0\xb5\xd1\x89\xd0\xb0\xd1\x8e\xd1\x89\xd0\xb5\xd0\xb9 \xd0\xb2\xd1\x81\xd0\xb5\xd1\x85 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9." "1700  x1464"
524A "Возможно, вы знаете этих людей?" implementation "\xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb9 \xd0\xbb\xd1\x8e\xd0\xb1\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xbe\xd1\x86\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8 \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xbe\xd1\x82\xd0\xbd\xd0\xbe\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb6\xd0\xb1\xd1\x8b \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xb4\xd0\xb2\xd1\x83\xd0\xbc\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8f\xd0\xbc\xd0\xb8 \xd0\xb2 \xd1\x82\xd0\xbe\xd0\xbc \xd0\xb8\xd0\xbb\xd0\xb8 \xd0\xb8\xd0\xbd\xd0\xbe\xd0\xbc \xd1\x81\xd0\xbc\xd1\x8b\xd1\x81\xd0\xbb\xd0\xb5. \xd0\x92 \xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8\xd0\xb7\xd0\xb2\xd0\xb5\xd1\x81\xd1\x82\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xbe\xd1\x86\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb6\xd0\xb1\xd0\xb0 \xd1\x81\xd0\xb8\xd0\xbc\xd0\xbc\xd0\xb5\xd1\x82\xd1\x80\xd0\xb8\xd1\x87\xd0\xbd\xd0\xb0, \xd1\x82\xd0\xbe \xd0\xb5\xd1\x81\xd1\x82\xd1\x8c \xd0\xb5\xd1\x81\xd0\xbb\xd0\xb8 a \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbc b, \xd1\x82\xd0\xbe b \xd1\x82\xd0\xb0\xd0\xba\xd0\xb6\xd0\xb5 \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbc a. 
\xd0\x92 \xd1\x8d\xd1\x82\xd0\xbe\xd0\xb9 \xd0\xb6\xd0\xb5 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8 \xd0\xb5\xd1\x81\xd1\x82\xd1\x8c \xd1\x84\xd1\x83\xd0\xbd\xd0\xba\xd1\x86\xd0\xb8\xd1\x8f, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0\xd1\x8f \xd0\xb4\xd0\xb5\xd0\xbc\xd0\xbe\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd1\x82 \xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xb9, \xd0\xb8\xd0\xbc\xd0\xb5\xd1\x8e\xd1\x89\xd0\xb8\xd1\x85 \xd0\xb2\xd1\x8b\xd1\x81\xd0\xbe\xd0\xba\xd1\x83\xd1\x8e \xd0\xb2\xd0\xb5\xd1\x80\xd0\xbe\xd1\x8f\xd1\x82\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xb7\xd0\xbd\xd0\xb0\xd0\xba\xd0\xbe\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8f. \xd0\xad\xd1\x82\xd0\xb0 \xd1\x84\xd1\x83\xd0\xbd\xd0\xba\xd1\x86\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0\xd0\xb5\xd1\x82 \xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8e\xd1\x89\xd0\xb8\xd0\xbc \xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd0\xb7\xd0\xbe\xd0\xbc. \xd0\x97\xd0\xb0\xd1\x84\xd0\xb8\xd0\xba\xd1\x81\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd0\xbc \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8f x. \xd0\x9f\xd1\x83\xd1\x81\xd1\x82\xd1\x8c \xd0\xbd\xd0\xb5\xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xb9 \xd1\x87\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb5\xd0\xba y, \xd0\xbd\xd0\xb5 \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd1\x8e\xd1\x89\xd0\xb8\xd0\xb9\xd1\x81\xd1\x8f \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbc x \xd0\xbd\xd0\xb0 \xd1\x82\xd0\xb5\xd0\xba\xd1\x83\xd1\x89\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82, \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbc \xd0\xbd\xd0\xb5 \xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb5, \xd1\x87\xd0\xb5\xd0\xbc \xd0\xb4\xd0\xbb\xd1\x8f k% \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9 x. \xd0\xa2\xd0\xbe\xd0\xb3\xd0\xb4\xd0\xb0 \xd0\xbe\xd0\xbd \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xbc \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbc \xd0\xb4\xd0\xbb\xd1\x8f x.
\xd0\xa3 \xd0\xba\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xbe\xd0\xb3\xd0\xbe \xd1\x87\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb5\xd0\xba\xd0\xb0 \xd0\xb2 \xd1\x81\xd0\xbe\xd1\x86\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8 \xd0\xb5\xd1\x81\xd1\x82\xd1\x8c \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb9 \xd1\x83\xd0\xbd\xd0\xb8\xd0\xba\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb8\xd0\xb4\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x82\xd0\xbe\xd1\x80 \xe2\x80\x94 \xd1\x8d\xd1\x82\xd0\xbe \xd1\x86\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xb5 \xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd0\xbe \xd0\xbe\xd1\x82 1 \xd0\xb4\xd0\xbe 109. \xd0\x92\xd0\xb0\xd0\xbc \xd0\xb4\xd0\xb0\xd0\xbd \xd1\x81\xd0\xbf\xd0\xb8\xd1\x81\xd0\xbe\xd0\xba \xd0\xbf\xd0\xb0\xd1\x80 \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9, \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd1\x8e\xd1\x89\xd0\xb8\xd1\x85\xd1\x81\xd1\x8f \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd1\x8c\xd1\x8f\xd0\xbc\xd0\xb8. \xd0\x9e\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xba\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xbe\xd0\xb3\xd0\xbe \xd1\x83\xd0\xbf\xd0\xbe\xd0\xbc\xd1\x8f\xd0\xbd\xd1\x83\xd1\x82\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8f \xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xb5\xd0\xb3\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9.
\xd0\x92 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb2\xd0\xbe\xd0\xb9 \xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xba\xd0\xb5 \xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8e\xd1\x82 \xd0\xb4\xd0\xb2\xd0\xb0 \xd1\x86\xd0\xb5\xd0\xbb\xd1\x8b\xd1\x85 \xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd0\xb0 m \xd0\xb8 k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 \xd0\xba\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xbf\xd0\xb0\xd1\x80 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9 \xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd1\x82 \xd0\xbe\xd0\xb1\xd1\x89\xd0\xb8\xd1\x85 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x82\xd0\xbe\xd0\xb3\xd0\xbe, \xd1\x87\xd1\x82\xd0\xbe\xd0\xb1\xd1\x8b \xd1\x81\xd1\x87\xd0\xb8\xd1\x82\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xbc \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbc.
\xd0\x92 \xd0\xbf\xd0\xbe\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8e\xd1\x89\xd0\xb8\xd1\x85 m \xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x85 \xd0\xb7\xd0\xb0\xd0\xbf\xd0\xb8\xd1\x81\xd0\xb0\xd0\xbd\xd0\xbe \xd0\xbf\xd0\xbe \xd0\xb4\xd0\xb2\xd0\xb0 \xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd0\xb0 ai,\xe2\x80\x89bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi), \xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb0\xd1\x8e\xd1\x89\xd0\xb8\xd1\x85 \xd0\xb8\xd0\xb4\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9, \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd1\x8e\xd1\x89\xd0\xb8\xd1\x85\xd1\x81\xd1\x8f \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd1\x8c\xd1\x8f\xd0\xbc\xd0\xb8. 
\xd0\x93\xd0\xb0\xd1\x80\xd0\xb0\xd0\xbd\xd1\x82\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f, \xd1\x87\xd1\x82\xd0\xbe \xd0\xba\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb0\xd1\x80\xd0\xb0 \xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xb9 \xd1\x84\xd0\xb8\xd0\xb3\xd1\x83\xd1\x80\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd1\x82 \xd0\xb2 \xd1\x81\xd0\xbf\xd0\xb8\xd1\x81\xd0\xba\xd0\xb5 \xd0\xbd\xd0\xb5 \xd0\xb1\xd0\xbe\xd0\xbb\xd0\xb5\xd0\xb5 \xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd1\x80\xd0\xb0\xd0\xb7\xd0\xb0.
\xd0\x94\xd0\xbb\xd1\x8f \xd0\xb2\xd1\x81\xd0\xb5\xd1\x85 \xd1\x83\xd0\xbf\xd0\xbe\xd0\xbc\xd1\x8f\xd0\xbd\xd1\x83\xd1\x82\xd1\x8b\xd1\x85 \xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xb9 \xd0\xb2 \xd0\xbf\xd0\xbe\xd1\x80\xd1\x8f\xd0\xb4\xd0\xba\xd0\xb5 \xd0\xb2\xd0\xbe\xd0\xb7\xd1\x80\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f id \xd0\xb2\xd1\x8b\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbd\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8e \xd0\xbe \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd1\x8c\xd1\x8f\xd1\x85. \xd0\x98\xd0\xbd\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xbd\xd0\xb0 \xd0\xb8\xd0\xbc\xd0\xb5\xd1\x82\xd1\x8c \xd0\xb2\xd0\xb8\xd0\xb4 ""id:\xe2\x80\x89 k id1 id2 ... idk"", \xd0\xb3\xd0\xb4\xd0\xb5 id \xe2\x80\x94 \xd1\x8d\xd1\x82\xd0\xbe id \xd1\x81\xd0\xb0\xd0\xbc\xd0\xbe\xd0\xb3\xd0\xbe \xd1\x87\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb5\xd0\xba\xd0\xb0, k \xe2\x80\x94 \xd0\xba\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xb5\xd0\xb3\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9, \xd0\xb0 id1, id2, ..., idk \xe2\x80\x94 \xd0\xb8\xd0\xb4\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b \xd0\xb5\xd0\xb3\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb7\xd0\xb5\xd0\xb9 \xd0\xb2 \xd0\xb2\xd0\xbe\xd0\xb7\xd1\x80\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd1\x8e\xd1\x89\xd0\xb5\xd0\xbc \xd0\xbf\xd0\xbe\xd1\x80\xd1\x8f\xd0\xb4\xd0\xba\xd0\xb5. " "1600  x1413"
523D "Statistics of Recompressing Videos" "*special problem, data structures, implementation" "A social network for dogs called DH (DogHouse) has k special servers to recompress uploaded videos of cute cats. After each video is uploaded, it should be recompressed on one (any) of the servers, and only after that it can be saved in the social network.
We know that each server takes one second to recompress a one minute fragment. Thus, any server takes m seconds to recompress a m minute video.
We know the time when each of the n videos were uploaded to the network (in seconds starting from the moment all servers started working). All videos appear at different moments of time and they are recompressed in the order they appear. If some video appeared at time s, then its recompressing can start at that very moment, immediately. Some videos can await recompressing when all the servers are busy. In this case, as soon as a server is available, it immediately starts recompressing another video. The videos that await recompressing go in a queue. If by the moment the videos started being recompressed some servers are available, then any of them starts recompressing the video.
For each video find the moment it stops being recompressed.
The first line of the input contains integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105) \xe2\x80\x94 the number of videos and servers, respectively.
Next n lines contain the descriptions of the videos as pairs of integers si,\xe2\x80\x89mi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89si,\xe2\x80\x89mi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), where si is the time in seconds when the i-th video appeared and mi is its duration in minutes. It is guaranteed that all the si\'s are distinct and the videos are given in the chronological order of upload, that is in the order of increasing si.
Print n numbers e1,\xe2\x80\x89e2,\xe2\x80\x89...,\xe2\x80\x89en, where ei is the time in seconds after the servers start working, when the i-th video will be recompressed." "1600  x2348"
523C "Name Quest" "*special problem, greedy" "A Martian boy is named s \xe2\x80\x94 he has got this name quite recently from his parents for his coming of age birthday. Now he enjoys looking for his name everywhere. If he sees that he can obtain his name from some string by removing zero or more letters (at that, the remaining letters remain in the same order), he gets happy. For example, if s=\xc2\xababa\xc2\xbb, then strings \xc2\xabbaobab\xc2\xbb, \xc2\xabaabbaa\xc2\xbb, \xc2\xabhelloabahello\xc2\xbb make him very happy and strings \xc2\xabaab\xc2\xbb, \xc2\xabbaaa\xc2\xbb and \xc2\xabhelloabhello\xc2\xbb do not.
However rather than being happy once, he loves twice as much being happy twice! So, when he got string t as a present, he wanted to cut it in two parts (the left part and the right part) so that each part made him happy.
Help s determine the number of distinct ways to cut the given string t into two parts in the required manner.
The first line contains string s, consisting of lowercase English letters. The length of string s is from 1 to 1000 letters.
The second line contains string t, that also consists of lowercase English letters. The length of string t is from 1 to 106 letters.
Print the sought number of ways to cut string t in two so that each part made s happy. " "1400  x2501"
523B "Mean Requests" "*special problem, implementation" "In this problem you will have to deal with a real algorithm that is used in the VK social network.
As in any other company that creates high-loaded websites, the VK developers have to deal with request statistics regularly. An important indicator reflecting the load of the site is the mean number of requests for a certain period of time of T seconds (for example, T\xe2\x80\x89=\xe2\x80\x8960 seconds\xe2\x80\x89=\xe2\x80\x891 min and T\xe2\x80\x89=\xe2\x80\x8986400 seconds\xe2\x80\x89=\xe2\x80\x891 day). For example, if this value drops dramatically, that shows that the site has access problem. If this value grows, that may be a reason to analyze the cause for the growth and add more servers to the website if it is really needed.
However, even such a natural problem as counting the mean number of queries for some period of time can be a challenge when you process the amount of data of a huge social network. That\'s why the developers have to use original techniques to solve problems approximately, but more effectively at the same time.
Let\'s consider the following formal model. We have a service that works for n seconds. We know the number of queries to this resource at at each moment of time t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). Let\'s formulate the following algorithm of calculating the mean with exponential decay. Let c be some real number, strictly larger than one.
Thus, the mean variable is recalculated each second using the number of queries that came at that second. We can make some mathematical calculations and prove that choosing the value of constant c correctly will make the value of mean not very different from the real mean value ax at t\xe2\x80\x89-\xe2\x80\x89T\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t. 
The advantage of such approach is that it only uses the number of requests at the current moment of time and doesn\'t require storing the history of requests for a large time range. Also, it considers the recent values with the weight larger than the weight of the old ones, which helps to react to dramatic change in values quicker.
However before using the new theoretical approach in industrial programming, there is an obligatory step to make, that is, to test its credibility practically on given test data sets. Your task is to compare the data obtained as a result of the work of an approximate algorithm to the real data. 
You are given n values at, integer T and real number c. Also, you are given m moments pj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m), where we are interested in the mean value of the number of queries for the last T seconds. Implement two algorithms. The first one should calculate the required value by definition, i.e. by the formula . The second algorithm should calculate the mean value as is described above. Print both values and calculate the relative error of the second algorithm by the formula , where approx is the approximate value, obtained by the second algorithm, and real is the exact value obtained by the first algorithm.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105), integer T (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89T\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and real number c (1\xe2\x80\x89<\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the time range when the resource should work, the length of the time range during which we need the mean number of requests and the coefficient c of the work of approximate algorithm. Number c is given with exactly six digits after the decimal point.
The next line contains n integers at (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89at\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the number of queries to the service at each moment of time.
The next line contains integer m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the number of moments of time when we are interested in the mean number of queries for the last T seconds.
The next line contains m integers pj (T\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), representing another moment of time for which we need statistics. Moments pj are strictly increasing.
Print m lines. The j-th line must contain three numbers real, approx and error, where:
The numbers you printed will be compared to the correct numbers with the relative or absolute error 10\xe2\x80\x89-\xe2\x80\x894. It is recommended to print the numbers with at least five digits after the decimal point." "1500  x952"
523A "Rotate, Flip and Zoom" "*special problem, implementation" "Polycarp is writing the prototype of a graphic editor. He has already made up his mind that the basic image transformations in his editor will be: rotate the image 90 degrees clockwise, flip the image horizontally (symmetry relative to the vertical line, that is, the right part of the image moves to the left, and vice versa) and zooming on the image. He is sure that that there is a large number of transformations that can be expressed through these three.
He has recently stopped implementing all three transformations for monochrome images. To test this feature, he asked you to write a code that will consecutively perform three actions with a monochrome image: first it will rotate the image 90 degrees clockwise, then it will flip the image horizontally and finally, it will zoom in twice on the image (that is, it will double all the linear sizes).
Implement this feature to help Polycarp test his editor.
The first line contains two integers, w and h (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w,\xe2\x80\x89h\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the width and height of an image in pixels. The picture is given in h lines, each line contains w characters \xe2\x80\x94 each character encodes the color of the corresponding pixel of the image. The line consists only of characters ""."" and ""*"", as the image is monochrome.
Print 2w lines, each containing 2h characters \xe2\x80\x94 the result of consecutive implementing of the three transformations, described above." "1200  x2636"
522D "Closest Equals" "*special problem, data structures" "You are given sequence a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an and m queries lj,\xe2\x80\x89rj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89lj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89rj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). For each query you need to print the minimum distance between such pair of elements ax and ay (x\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89y), that:
The text above understands distance as |x\xe2\x80\x89-\xe2\x80\x89y|.
The first line of the input contains a pair of integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105) \xe2\x80\x94 the length of the sequence and the number of queries, correspondingly. 
The second line contains the sequence of integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). 
Next m lines contain the queries, one per line. Each query is given by a pair of numbers lj,\xe2\x80\x89rj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89lj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89rj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the indexes of the query range limits.
Print m integers \xe2\x80\x94 the answers to each query. If there is no valid match for some query, please print -1 as an answer to this query." "2000  x3240"
522C "Chicken or Fish?" greedy "Polycarp is flying in the airplane. Finally, it is his favorite time \xe2\x80\x94 the lunchtime. The BerAvia company stewardess is giving food consecutively to all the passengers from the 1-th one to the last one. Polycarp is sitting on seat m, that means, he will be the m-th person to get food.
The flight menu has k dishes in total and when Polycarp boarded the flight, he had time to count the number of portions of each dish on board. Thus, he knows values a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89ak, where ai is the number of portions of the i-th dish.
The stewardess has already given food to m\xe2\x80\x89-\xe2\x80\x891 passengers, gave Polycarp a polite smile and asked him what he would prefer. That\'s when Polycarp realized that they might have run out of some dishes by that moment. For some of the m\xe2\x80\x89-\xe2\x80\x891 passengers ahead of him, he noticed what dishes they were given. Besides, he\'s heard some strange mumbling from some of the m\xe2\x80\x89-\xe2\x80\x891 passengers ahead of him, similar to phrase \'I\'m disappointed\'. That happened when a passenger asked for some dish but the stewardess gave him a polite smile and said that they had run out of that dish. In that case the passenger needed to choose some other dish that was available. If Polycarp heard no more sounds from a passenger, that meant that the passenger chose his dish at the first try.
Help Polycarp to find out for each dish: whether they could have run out of the dish by the moment Polyarp was served or that dish was definitely available.
Each test in this problem consists of one or more input sets. First goes a string that contains a single integer t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of input data sets in the test. Then the sets follow, each set is preceded by an empty line.
The first line of each set of the input contains integers m, k (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the number of Polycarp\'s seat and the number of dishes, respectively.
The second line contains a sequence of k integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89ak (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000), where ai is the initial number of portions of the i-th dish.
Then m\xe2\x80\x89-\xe2\x80\x891 lines follow, each line contains the description of Polycarp\'s observations about giving food to a passenger sitting in front of him: the j-th line contains a pair of integers tj,\xe2\x80\x89rj (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89tj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89rj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891), where tj is the number of the dish that was given to the j-th passenger (or 0, if Polycarp didn\'t notice what dish was given to the passenger), and rj \xe2\x80\x94 a 1 or a 0, depending on whether the j-th passenger was or wasn\'t disappointed, respectively.
We know that sum ai equals at least m, that is,Polycarp will definitely get some dish, even if it is the last thing he wanted. It is guaranteed that the data is consistent.
Sum m for all input sets doesn\'t exceed 100\xe2\x80\x89000. Sum k for all input sets doesn\'t exceed 100\xe2\x80\x89000.
For each input set print the answer as a single line. Print a string of k letters ""Y"" or ""N"". Letter ""Y"" in position i should be printed if they could have run out of the i-th dish by the time the stewardess started serving Polycarp.
In the first input set depending on the choice of the second passenger the situation could develop in different ways:
Thus, the answer is ""YNNY"".
In the second input set there is, for example, the following possible scenario. First, the first passenger takes the only third dish, then the second passenger takes the second dish. Then, the third passenger asks for the third dish, but it is not available, so he makes disappointed muttering and ends up with the second dish. Then the fourth passenger takes the fourth dish, and Polycarp ends up with the choice between the first, fourth and fifth dish.
Likewise, another possible scenario is when by the time the stewardess comes to Polycarp, they will have run out of either the first or the fifth dish (this can happen if one of these dishes is taken by the second passenger). It is easy to see that there is more than enough of the fourth dish, so Polycarp can always count on it. Thus, the answer is ""YYYNY""." "2100  x722"
522B "Photo to Remember" "*special problem, data structures, dp, implementation" "One day n friends met at a party, they hadn\'t seen each other for a long time and so they decided to make a group photo together. 
Simply speaking, the process of taking photos can be described as follows. On the photo, each photographed friend occupies a rectangle of pixels: the i-th of them occupies the rectangle of width wi pixels and height hi pixels. On the group photo everybody stands in a line, thus the minimum pixel size of the photo including all the photographed friends, is W\xe2\x80\x89\xc3\x97\xe2\x80\x89H, where W is the total sum of all widths and H is the maximum height of all the photographed friends.
As is usually the case, the friends made n photos \xe2\x80\x94 the j-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) photo had everybody except for the j-th friend as he was the photographer.
Print the minimum size of each made photo in pixels. 
The first line contains integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000) \xe2\x80\x94 the number of friends. 
Then n lines follow: the i-th line contains information about the i-th friend. The line contains a pair of integers wi,\xe2\x80\x89hi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the width and height in pixels of the corresponding rectangle.
Print n space-separated numbers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn, where bi \xe2\x80\x94 the total number of pixels on the minimum photo containing all friends expect for the i-th one." "1100  x8927"
522A Reposts "*special problem, dfs and similar, dp, graphs, trees" "One day Polycarp published a funny picture in a social network making a poll about the color of his handle. Many of his friends started reposting Polycarp\'s joke to their news feed. Some of them reposted the reposts and so on.
These events are given as a sequence of strings ""name1 reposted name2"", where name1 is the name of the person who reposted the joke, and name2 is the name of the person from whose news feed the joke was reposted. It is guaranteed that for each string ""name1 reposted name2"" user ""name1"" didn\'t have the joke in his feed yet, and ""name2"" already had it in his feed by the moment of repost. Polycarp was registered as ""Polycarp"" and initially the joke was only in his feed.
Polycarp measures the popularity of the joke as the length of the largest repost chain. Print the popularity of Polycarp\'s joke.
The first line of the input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200) \xe2\x80\x94 the number of reposts. Next follow the reposts in the order they were made. Each of them is written on a single line and looks as ""name1 reposted name2"". All the names in the input consist of lowercase or uppercase English letters and/or digits and have lengths from 2 to 24 characters, inclusive.
We know that the user names are case-insensitive, that is, two names that only differ in the letter case correspond to the same social network user.
Print a single integer \xe2\x80\x94 the maximum length of a repost chain." "1200  x16503"
521E "Cycling City" "dfs and similar, graphs" "You are organizing a cycling race on the streets of the city. The city contains n junctions, some pairs of them are connected by roads; on each road you can move in any direction. No two roads connect the same pair of intersections, and no road connects the intersection with itself.
You want the race to be open to both professional athletes and beginner cyclists, and that\'s why you will organize the race in three nominations: easy, moderate and difficult; each participant will choose the more suitable nomination. For each nomination you must choose the route \xe2\x80\x94 the chain of junctions, consecutively connected by roads. Routes must meet the following conditions:
Preparing for the competition is about to begin, and you need to determine the routes of the race as quickly as possible. The length of the routes is not important, it is only important that all the given requirements were met.
The first line contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of intersections and roads, respectively.
The following m lines contain two integers \xe2\x80\x94 the numbers of the intersections connected by a road (the intersections are numbered starting with 1). It is guaranteed that each pair of intersections is connected by no more than one road, and no road connects the intersection to itself.
Please note that it is not guaranteed that you can get from any junction to any other one by using the roads.
If it is possible to create the routes, in the first line print ""YES"". In the next three lines print the descriptions of each of the three routes in the format ""l p1 ... pl"", where l is the number of intersections in the route, and p1,\xe2\x80\x89...,\xe2\x80\x89pl are their numbers in the order they follow. The routes must meet all the requirements specified in the statement.
If it is impossible to make the routes in accordance with the requirements, print NO." "3100  x1059"
521D Shop greedy "Vasya plays one very well-known and extremely popular MMORPG game. His game character has k skill; currently the i-th of them equals to ai. Also this game has a common rating table in which the participants are ranked according to the product of all the skills of a hero in the descending order.
Vasya decided to \'upgrade\' his character via the game store. This store offers n possible ways to improve the hero\'s skills; Each of these ways belongs to one of three types:
Unfortunately, a) every improvement can only be used once; b) the money on Vasya\'s card is enough only to purchase not more than m of the n improvements. Help Vasya to reach the highest ranking in the game. To do this tell Vasya which of improvements he has to purchase and in what order he should use them to make his rating become as high as possible. If there are several ways to achieve it, print any of them.
The first line contains three numbers \xe2\x80\x94 k,\xe2\x80\x89n,\xe2\x80\x89m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of skills, the number of improvements on sale and the number of them Vasya can afford.
The second line contains k space-separated numbers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), the initial values of skills.
Next n lines contain 3 space-separated numbers tj,\xe2\x80\x89ij,\xe2\x80\x89bj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89tj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ij\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the type of the j-th improvement (1 for assigning, 2 for adding, 3 for multiplying), the skill to which it can be applied and the value of b for this improvement.
The first line should contain a number l (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) \xe2\x80\x94 the number of improvements you should use.
The second line should contain l distinct space-separated numbers vi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the indices of improvements in the order in which they should be applied. The improvements are numbered starting from 1, in the order in which they appear in the input. " "2800  x1613"
520E "Pluses everywhere" "combinatorics, dp, math, number theory" "Vasya is sitting on an extremely boring math class. To have fun, he took a piece of paper and wrote out n numbers on a single line. After that, Vasya began to write out different ways to put pluses (""+"") in the line between certain digits in the line so that the result was a correct arithmetic expression; formally, no two pluses in such a partition can stand together (between any two adjacent pluses there must be at least one digit), and no plus can stand at the beginning or the end of a line. For example, in the string 100500, ways 100500 (add no pluses), 1+00+500 or 10050+0 are correct, and ways 100++500, +1+0+0+5+0+0 or 100500+ are incorrect.
The lesson was long, and Vasya has written all the correct ways to place exactly k pluses in a string of digits. At this point, he got caught having fun by a teacher and he was given the task to calculate the sum of all the resulting arithmetic expressions by the end of the lesson (when calculating the value of an expression the leading zeros should be ignored). As the answer can be large, Vasya is allowed to get only its remainder modulo 109\xe2\x80\x89+\xe2\x80\x897. Help him!
The first line contains two integers, n and k (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89<\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line contains a string consisting of n digits.
Print the answer to the problem modulo 109\xe2\x80\x89+\xe2\x80\x897.
In the first sample the result equals (1\xe2\x80\x89+\xe2\x80\x8908)\xe2\x80\x89+\xe2\x80\x89(10\xe2\x80\x89+\xe2\x80\x898)\xe2\x80\x89=\xe2\x80\x8927.
In the second sample the result equals 1\xe2\x80\x89+\xe2\x80\x890\xe2\x80\x89+\xe2\x80\x898\xe2\x80\x89=\xe2\x80\x899." "2200  x1881"
520D Cubes "games, greedy, implementation" "Once Vasya and Petya assembled a figure of m cubes, each of them is associated with a number between 0 and m\xe2\x80\x89-\xe2\x80\x891 (inclusive, each number appeared exactly once). Let\'s consider a coordinate system such that the OX is the ground, and the OY is directed upwards. Each cube is associated with the coordinates of its lower left corner, these coordinates are integers for each cube.
The figure turned out to be stable. This means that for any cube that is not on the ground, there is at least one cube under it such that those two cubes touch by a side or a corner. More formally, this means that for the cube with coordinates (x,\xe2\x80\x89y) either y\xe2\x80\x89=\xe2\x80\x890, or there is a cube with coordinates (x\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89y\xe2\x80\x89-\xe2\x80\x891), (x,\xe2\x80\x89y\xe2\x80\x89-\xe2\x80\x891) or (x\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89y\xe2\x80\x89-\xe2\x80\x891).
Now the boys want to disassemble the figure and put all the cubes in a row. In one step the cube is removed from the figure and being put to the right of the blocks that have already been laid. The guys remove the cubes in such order that the figure remains stable. To make the process more interesting, the guys decided to play the following game. The guys take out the cubes from the figure in turns. It is easy to see that after the figure is disassembled, the integers written on the cubes form a number, written in the m-ary positional numerical system (possibly, with a leading zero). Vasya wants the resulting number to be maximum possible, and Petya, on the contrary, tries to make it as small as possible. Vasya starts the game.
Your task is to determine what number is formed after the figure is disassembled, if the boys play optimally. Determine the remainder of the answer modulo 109\xe2\x80\x89+\xe2\x80\x899.
The first line contains number m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The following m lines contain the coordinates of the cubes xi,\xe2\x80\x89yi (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) in ascending order of numbers written on them. It is guaranteed that the original figure is stable.
No two cubes occupy the same place.
In the only line print the answer to the problem." "2100  x1563"
520C "DNA Alignment" "math, strings" "Vasya became interested in bioinformatics. He\'s going to write an article about similar cyclic DNA sequences, so he invented a new method for determining the similarity of cyclic sequences.
Let\'s assume that strings s and t have the same length n, then the function h(s,\xe2\x80\x89t) is defined as the number of positions in which the respective symbols of s and t are the same. Function h(s,\xe2\x80\x89t) can be used to define the function of Vasya distance \xcf\x81(s,\xe2\x80\x89t): 
Vasya found a string s of length n on the Internet. Now he wants to count how many strings t there are such that the Vasya distance from the string s attains maximum possible value. Formally speaking, t must satisfy the equation: .
Vasya could not try all possible strings to find an answer, so he needs your help. As the answer may be very large, count the number of such strings modulo 109\xe2\x80\x89+\xe2\x80\x897.
The first line of the input contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line of the input contains a single string of length n, consisting of characters ""ACGT"".
Print a single number \xe2\x80\x94 the answer modulo 109\xe2\x80\x89+\xe2\x80\x897.
Please note that if for two distinct strings t1 and t2 values \xcf\x81(s,\xe2\x80\x89t1) \xd0\xb8 \xcf\x81(s,\xe2\x80\x89t2) are maximum among all possible t, then both strings must be taken into account in the answer even if one of them can be obtained by a circular shift of another one.
In the first sample, there is \xcf\x81(""C"",\xe2\x80\x89""C"")\xe2\x80\x89=\xe2\x80\x891, for the remaining strings t of length 1 the value of \xcf\x81(s,\xe2\x80\x89t) is 0.
In the second sample, \xcf\x81(""AG"",\xe2\x80\x89""AG"")\xe2\x80\x89=\xe2\x80\x89\xcf\x81(""AG"",\xe2\x80\x89""GA"")\xe2\x80\x89=\xe2\x80\x89\xcf\x81(""AG"",\xe2\x80\x89""AA"")\xe2\x80\x89=\xe2\x80\x89\xcf\x81(""AG"",\xe2\x80\x89""GG"")\xe2\x80\x89=\xe2\x80\x894.
In the third sample, \xcf\x81(""TTT"",\xe2\x80\x89""TTT"")\xe2\x80\x89=\xe2\x80\x8927" "1500  x4171"
520B "Two Buttons" "dfs and similar, graphs, greedy, implementation, math, shortest paths" "Vasya has found a strange device. On the front panel of a device there are: a red button, a blue button and a display showing some positive integer. After clicking the red button, device multiplies the displayed number by two. After clicking the blue button, device subtracts one from the number on the display. If at some point the number stops being positive, the device breaks down. The display can show arbitrarily large numbers. Initially, the display shows number n.
Bob wants to get number m on the display. What minimum number of clicks he has to make in order to achieve this result?
The first and the only line of the input contains two distinct integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104), separated by a space .
Print a single number \xe2\x80\x94 the minimum number of times one needs to push the button required to get the number m out of number n.
In the first example you need to push the blue button once, and then push the red button once.
In the second example, doubling the number is unnecessary, so we need to push the blue button nine times." "1400  x51479"
520A Pangram "implementation, strings" "A word or a sentence in some language is called a pangram if all the characters of the alphabet of this language appear in it at least once. Pangrams are often used to demonstrate fonts in printing or test the output devices.
You are given a string consisting of lowercase and uppercase Latin letters. Check whether this string is a pangram. We say that the string contains a letter of the Latin alphabet if this letter occurs in the string in uppercase or lowercase.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of characters in the string.
The second line contains the string. The string consists only of uppercase and lowercase Latin letters.
Output ""YES"", if the string is a pangram and ""NO"" otherwise." "800  x98890"
519E "A and B and Lecture Rooms" "binary search, data structures, dfs and similar, dp, trees" "A and B are preparing themselves for programming contests.
The University where A and B study is a set of rooms connected by corridors. Overall, the University has n rooms connected by n\xe2\x80\x89-\xe2\x80\x891 corridors so that you can get from any room to any other one by moving along the corridors. The rooms are numbered from 1 to n.
Every day \xd0\x90 and B write contests in some rooms of their university, and after each contest they gather together in the same room and discuss problems. A and B want the distance from the rooms where problems are discussed to the rooms where contests are written to be equal. The distance between two rooms is the number of edges on the shortest path between them.
As they write contests in new rooms every day, they asked you to help them find the number of possible rooms to discuss problems for each of the following m days.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of rooms in the University.
The next n\xe2\x80\x89-\xe2\x80\x891 lines describe the corridors. The i-th of these lines (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891) contains two integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), showing that the i-th corridor connects rooms ai and bi.
The next line contains integer m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of queries.
Next m lines describe the queries. The j-th of these lines (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) contains two integers xj and yj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xj,\xe2\x80\x89yj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) that means that on the j-th day A will write the contest in the room xj, B will write in the room yj.
In the i-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) line print the number of rooms that are equidistant from the rooms where A and B write contest on the i-th day.
in the first sample there is only one room at the same distance from rooms number 2 and 3 \xe2\x80\x94 room number 1." "2100  x6921"
519D "A and B and Interesting Substrings" "data structures, dp, two pointers" "A and B are preparing themselves for programming contests.
After several years of doing sports programming and solving many problems that require calculating all sorts of abstract objects, A and B also developed rather peculiar tastes.
A likes lowercase letters of the Latin alphabet. He has assigned to each letter a number that shows how much he likes that letter (he has assigned negative numbers to the letters he dislikes). 
B likes substrings. He especially likes the ones that start and end with the same letter (their length must exceed one).
Also, A and B have a string s. Now they are trying to find out how many substrings t of a string s are interesting to B (that is, t starts and ends with the same letter and its length is larger than one), and also the sum of values of all letters (assigned by A), except for the first and the last one is equal to zero.
Naturally, A and B have quickly found the number of substrings t that are interesting to them. Can you do it? 
The first line contains 26 integers xa,\xe2\x80\x89xb,\xe2\x80\x89...,\xe2\x80\x89xz (\xe2\x80\x89-\xe2\x80\x89105\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the value assigned to letters a,\xe2\x80\x89b,\xe2\x80\x89c,\xe2\x80\x89...,\xe2\x80\x89z respectively.
The second line contains string s of length between 1 and 105 characters, consisting of Lating lowercase letters\xe2\x80\x94 the string for which you need to calculate the answer. 
Print the answer to the problem. 
In the first sample test strings satisfying the condition above are abca and bcab.
In the second sample test strings satisfying the condition above are two occurences of aa." "1800  x6397"
519C "A and B and Team Training" "greedy, implementation, math, number theory" "A and B are preparing themselves for programming contests.
An important part of preparing for a competition is sharing programming knowledge from the experienced members to those who are just beginning to deal with the contests. Therefore, during the next team training A decided to make teams so that newbies are solving problems together with experienced participants.
A believes that the optimal team of three people should consist of one experienced participant and two newbies. Thus, each experienced participant can share the experience with a large number of people.
However, B believes that the optimal team should have two experienced members plus one newbie. Thus, each newbie can gain more knowledge and experience.
As a result, A and B have decided that all the teams during the training session should belong to one of the two types described above. Furthermore, they agree that the total number of teams should be as much as possible.
There are n experienced members and m newbies on the training session. Can you calculate what maximum number of teams can be formed?
The first line contains two integers n and m (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105) \xe2\x80\x94 the number of experienced participants and newbies that are present at the training session. 
Print the maximum number of teams that can be formed.
Let\'s represent the experienced players as XP and newbies as NB.
In the first test the teams look as follows: (XP, NB, NB), (XP, NB, NB).
In the second test sample the teams look as follows: (XP, NB, NB), (XP, NB, NB), (XP, XP, NB)." "1300  x19771"
519B "A and B and Compilation Errors" "data structures, implementation, sortings" "A and B are preparing themselves for programming contests.
B loves to debug his code. But before he runs the solution and starts debugging, he has to first compile the code.
Initially, the compiler displayed n compilation errors, each of them is represented as a positive integer. After some effort, B managed to fix some mistake and then another one mistake.
However, despite the fact that B is sure that he corrected the two errors, he can not understand exactly what compilation errors disappeared \xe2\x80\x94 the compiler of the language which B uses shows errors in the new order every time! B is sure that unlike many other programming languages, compilation errors for his programming language do not depend on each other, that is, if you correct one error, the set of other error does not change.
Can you help B find out exactly what two errors he corrected?
The first line of the input contains integer n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the initial number of compilation errors.
The second line contains n space-separated integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the errors the compiler displayed for the first time. 
The third line contains n\xe2\x80\x89-\xe2\x80\x891 space-separated integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn\xe2\x80\x89-\xe2\x80\x891 \xe2\x80\x94 the errors displayed at the second compilation. It is guaranteed that the sequence in the third line contains all numbers of the second string except for exactly one. 
The fourth line contains n\xe2\x80\x89-\xe2\x80\x892 space-separated integers \xd1\x811,\xe2\x80\x89\xd1\x812,\xe2\x80\x89...,\xe2\x80\x89\xd1\x81n\xe2\x80\x89-\xe2\x80\x892 \xe2\x80\x94 the errors displayed at the third compilation. It is guaranteed that the sequence in the fourth line contains all numbers of the third line except for exactly one. 
Print two numbers on a single line: the numbers of the compilation errors that disappeared after B made the first and the second correction, respectively. 
In the first test sample B first corrects the error number 8, then the error number 123.
In the second test sample B first corrects the error number 1, then the error number 3. Note that if there are multiple errors with the same number, B can correct only one of them in one step. " "1100  x39677"
519A "A and B and Chess" implementation "A and B are preparing themselves for programming contests.
To train their logical thinking and solve problems better, A and B decided to play chess. During the game A wondered whose position is now stronger.
For each chess piece we know its weight: 
The player\'s weight equals to the sum of weights of all his pieces on the board.
As A doesn\'t like counting, he asked you to help him determine which player has the larger position weight.
The input contains eight lines, eight characters each \xe2\x80\x94 the board\'s description.
The white pieces on the board are marked with uppercase letters, the black pieces are marked with lowercase letters.
The white pieces are denoted as follows: the queen is represented is \'Q\', the rook \xe2\x80\x94 as \'R\', the bishop \xe2\x80\x94 as\'B\', the knight \xe2\x80\x94 as \'N\', the pawn \xe2\x80\x94 as \'P\', the king \xe2\x80\x94 as \'K\'.
The black pieces are denoted as \'q\', \'r\', \'b\', \'n\', \'p\', \'k\', respectively.
An empty square of the board is marked as \'.\' (a dot). 
It is not guaranteed that the given chess position can be achieved in a real game. Specifically, there can be an arbitrary (possibly zero) number pieces of each type, the king may be under attack and so on.
Print ""White"" (without quotes) if the weight of the position of the white pieces is more than the weight of the position of the black pieces, print ""Black"" if the weight of the black pieces is more than the weight of the white pieces and print ""Draw"" if the weights of the white and black pieces are equal.
In the first test sample the weight of the position of the white pieces equals to 9, the weight of the position of the black pieces equals 5.
In the second test sample the weights of the positions of the black and the white pieces are equal to 39.
In the third test sample the weight of the position of the white pieces equals to 9, the weight of the position of the black pieces equals to 16." "900  x19048"
518F "Pasha and Pipe" "binary search, brute force, combinatorics, dp, implementation" "On a certain meeting of a ruling party ""A"" minister Pavel suggested to improve the sewer system and to create a new pipe in the city.
The city is an n\xe2\x80\x89\xc3\x97\xe2\x80\x89m rectangular squared field. Each square of the field is either empty (then the pipe can go in it), or occupied (the pipe cannot go in such square). Empty squares are denoted by character \'.\', occupied squares are denoted by character \'#\'.
The pipe must meet the following criteria:
Here are some samples of allowed piping routes: 
Here are some samples of forbidden piping routes: 
In these samples the pipes are represented by characters \'\xe2\x80\x89*\xe2\x80\x89\'.
You were asked to write a program that calculates the number of distinct ways to make exactly one pipe in the city. 
The two ways to make a pipe are considered distinct if they are distinct in at least one square.
The first line of the input contains two integers n,\xe2\x80\x89m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000) \xe2\x80\x94 the height and width of Berland map.
Each of the next n lines contains m characters \xe2\x80\x94 the map of the city. 
If the square of the map is marked by character \'.\', then the square is empty and the pipe can through it. 
If the square of the map is marked by character \'#\', then the square is full and the pipe can\'t through it.
In the first line of the output print a single integer \xe2\x80\x94 the number of distinct ways to create a pipe.
In the first sample there are 3 ways to make a pipe (the squares of the pipe are marked by characters \'\xe2\x80\x89*\xe2\x80\x89\'): " "2300  x374"
518E "Arthur and Questions" "greedy, implementation, math, ternary search" "After bracket sequences Arthur took up number theory. He has got a new favorite sequence of length n (a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an), consisting of integers and integer k, not exceeding n.
This sequence had the following property: if you write out the sums of all its segments consisting of k consecutive elements (a1 \xe2\x80\x89+\xe2\x80\x89 a2 ... \xe2\x80\x89+\xe2\x80\x89 ak,\xe2\x80\x89 a2 \xe2\x80\x89+\xe2\x80\x89 a3 \xe2\x80\x89+\xe2\x80\x89 ... \xe2\x80\x89+\xe2\x80\x89 ak\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89 ...,\xe2\x80\x89 an\xe2\x80\x89-\xe2\x80\x89k\xe2\x80\x89+\xe2\x80\x891 \xe2\x80\x89+\xe2\x80\x89 an\xe2\x80\x89-\xe2\x80\x89k\xe2\x80\x89+\xe2\x80\x892 \xe2\x80\x89+\xe2\x80\x89 ... \xe2\x80\x89+\xe2\x80\x89 an), then those numbers will form strictly increasing sequence.
For example, for the following sample: n\xe2\x80\x89=\xe2\x80\x895,\xe2\x80\x89 k\xe2\x80\x89=\xe2\x80\x893,\xe2\x80\x89 a\xe2\x80\x89=\xe2\x80\x89(1,\xe2\x80\x89 2,\xe2\x80\x89 4,\xe2\x80\x89 5,\xe2\x80\x89 6) the sequence of numbers will look as follows: (1 \xe2\x80\x89+\xe2\x80\x89 2 \xe2\x80\x89+\xe2\x80\x89 4,\xe2\x80\x89 2 \xe2\x80\x89+\xe2\x80\x89 4 \xe2\x80\x89+\xe2\x80\x89 5,\xe2\x80\x89 4 \xe2\x80\x89+\xe2\x80\x89 5 \xe2\x80\x89+\xe2\x80\x89 6) = (7,\xe2\x80\x89 11,\xe2\x80\x89 15), that means that sequence a meets the described property. 
Obviously the sequence of sums will have n\xe2\x80\x89-\xe2\x80\x89k\xe2\x80\x89+\xe2\x80\x891 elements.
Somebody (we won\'t say who) replaced some numbers in Arthur\'s sequence by question marks (if this number is replaced, it is replaced by exactly one question mark). We need to restore the sequence so that it meets the required property and also minimize the sum |ai|, where |ai| is the absolute value of ai.
The first line contains two integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), showing how many numbers are in Arthur\'s sequence and the lengths of segments respectively.
The next line contains n space-separated elements ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
If ai \xe2\x80\x89=\xe2\x80\x89 ?, then the i-th element of Arthur\'s sequence was replaced by a question mark. 
Otherwise, ai (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) is the i-th element of Arthur\'s sequence.
If Arthur is wrong at some point and there is no sequence that could fit the given information, print a single string ""Incorrect sequence"" (without the quotes).
Otherwise, print n integers \xe2\x80\x94 Arthur\'s favorite sequence. If there are multiple such sequences, print the sequence with the minimum sum |ai|, where |ai| is the absolute value of ai. If there are still several such sequences, you are allowed to print any of them. Print the elements of the sequence without leading zeroes." "2200  x1002"
518D "Ilya and Escalator" "combinatorics, dp, math, probabilities" "Ilya got tired of sports programming, left university and got a job in the subway. He was given the task to determine the escalator load factor. 
Let\'s assume that n people stand in the queue for the escalator. At each second one of the two following possibilities takes place: either the first person in the queue enters the escalator with probability p, or the first person in the queue doesn\'t move with probability (1\xe2\x80\x89-\xe2\x80\x89p), paralyzed by his fear of escalators and making the whole queue wait behind him.
Formally speaking, the i-th person in the queue cannot enter the escalator until people with indices from 1 to i\xe2\x80\x89-\xe2\x80\x891 inclusive enter it. In one second only one person can enter the escalator. The escalator is infinite, so if a person enters it, he never leaves it, that is he will be standing on the escalator at any following second. Ilya needs to count the expected value of the number of people standing on the escalator after t seconds. 
Your task is to help him solve this complicated task.
The first line of the input contains three numbers n,\xe2\x80\x89p,\xe2\x80\x89t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891). Numbers n and t are integers, number p is real, given with exactly two digits after the decimal point.
Print a single real number \xe2\x80\x94 the expected number of people who will be standing on the escalator after t seconds. The absolute or relative error mustn\'t exceed 10\xe2\x80\x89-\xe2\x80\x896." "1700  x7050"
518C "Anya and Smartphone" "constructive algorithms, data structures, implementation" "Anya has bought a new smartphone that uses Berdroid operating system. The smartphone menu has exactly n applications, each application has its own icon. The icons are located on different screens, one screen contains k icons. The icons from the first to the k-th one are located on the first screen, from the (k\xe2\x80\x89+\xe2\x80\x891)-th to the 2k-th ones are on the second screen and so on (the last screen may be partially empty).
Initially the smartphone menu is showing the screen number 1. To launch the application with the icon located on the screen t, Anya needs to make the following gestures: first she scrolls to the required screen number t, by making t\xe2\x80\x89-\xe2\x80\x891 gestures (if the icon is on the screen t), and then make another gesture \xe2\x80\x94 press the icon of the required application exactly once to launch it.
After the application is launched, the menu returns to the first screen. That is, to launch the next application you need to scroll through the menu again starting from the screen number 1.
All applications are numbered from 1 to n. We know a certain order in which the icons of the applications are located in the menu at the beginning, but it changes as long as you use the operating system. Berdroid is intelligent system, so it changes the order of the icons by moving the more frequently used icons to the beginning of the list. Formally, right after an application is launched, Berdroid swaps the application icon and the icon of a preceding application (that is, the icon of an application on the position that is smaller by one in the order of menu). The preceding icon may possibly be located on the adjacent screen. The only exception is when the icon of the launched application already occupies the first place, in this case the icon arrangement doesn\'t change.
Anya has planned the order in which she will launch applications. How many gestures should Anya make to launch the applications in the planned order? 
Note that one application may be launched multiple times.
The first line of the input contains three numbers n,\xe2\x80\x89m,\xe2\x80\x89k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of applications that Anya has on her smartphone, the number of applications that will be launched and the number of icons that are located on the same screen.
The next line contains n integers, permutation a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an \xe2\x80\x94 the initial order of icons from left to right in the menu (from the first to the last one), ai \xe2\x80\x94  is the id of the application, whose icon goes i-th in the menu. Each integer from 1 to n occurs exactly once among ai.
The third line contains m integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bm(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the ids of the launched applications in the planned order. One application may be launched multiple times.
Print a single number \xe2\x80\x94 the number of gestures that Anya needs to make to launch all the applications in the desired order.
In the first test the initial configuration looks like (123)(456)(78), that is, the first screen contains icons of applications 1,\xe2\x80\x892,\xe2\x80\x893, the second screen contains icons 4,\xe2\x80\x895,\xe2\x80\x896, the third screen contains icons 7,\xe2\x80\x898. 
After application 7 is launched, we get the new arrangement of the icons \xe2\x80\x94 (123)(457)(68). To launch it Anya makes 3 gestures. 
After application 8 is launched, we get configuration (123)(457)(86). To launch it Anya makes 3 gestures. 
After application 1 is launched, the arrangement of icons in the menu doesn\'t change. To launch it Anya makes 1 gesture.
In total, Anya makes 7 gestures." "1600  x6031"
518B "Tanya and Postcard" "greedy, implementation, strings" "Little Tanya decided to present her dad a postcard on his Birthday. She has already created a message \xe2\x80\x94 string s of length n, consisting of uppercase and lowercase English letters. Tanya can\'t write yet, so she found a newspaper and decided to cut out the letters and glue them into the postcard to achieve string s. The newspaper contains string t, consisting of uppercase and lowercase English letters. We know that the length of string t greater or equal to the length of the string s.
The newspaper may possibly have too few of some letters needed to make the text and too many of some other letters. That\'s why Tanya wants to cut some n letters out of the newspaper and make a message of length exactly n, so that it looked as much as possible like s. If the letter in some position has correct value and correct letter case (in the string s and in the string that Tanya will make), then she shouts joyfully ""YAY!"", and if the letter in the given position has only the correct value but it is in the wrong case, then the girl says ""WHOOPS"".
Tanya wants to make such message that lets her shout ""YAY!"" as much as possible. If there are multiple ways to do this, then her second priority is to maximize the number of times she says ""WHOOPS"". Your task is to help Tanya make the message.
The first line contains line s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105), consisting of uppercase and lowercase English letters \xe2\x80\x94 the text of Tanya\'s message.
The second line contains line t (|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|t|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105), consisting of uppercase and lowercase English letters \xe2\x80\x94 the text written in the newspaper.
Here |a| means the length of the string a.
Print two integers separated by a space:" "1400  x7997"
518A "Vitaly and Strings" "constructive algorithms, strings" "Vitaly is a diligent student who never missed a lesson in his five years of studying in the university. He always does his homework on time and passes his exams in time. 
During the last lesson the teacher has provided two strings s and t to Vitaly. The strings have the same length, they consist of lowercase English letters, string s is lexicographically smaller than string t. Vitaly wondered if there is such string that is lexicographically larger than string s and at the same is lexicographically smaller than string t. This string should also consist of lowercase English letters and have the length equal to the lengths of strings s and t. 
Let\'s help Vitaly solve this easy problem!
The first line contains string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), consisting of lowercase English letters. Here, |s| denotes the length of the string.
The second line contains string t (|t|\xe2\x80\x89=\xe2\x80\x89|s|), consisting of lowercase English letters.
It is guaranteed that the lengths of strings s and t are the same and string s is lexicographically less than string t.
If the string that meets the given requirements doesn\'t exist, print a single string ""No such string"" (without the quotes).
If such string exists, print it. If there are multiple valid strings, you may print any of them.
String s\xe2\x80\x89=\xe2\x80\x89s1s2... sn is said to be lexicographically smaller than t\xe2\x80\x89=\xe2\x80\x89t1t2... tn, if there exists such i, that s1\xe2\x80\x89=\xe2\x80\x89t1,\xe2\x80\x89s2\xe2\x80\x89=\xe2\x80\x89t2,\xe2\x80\x89... si\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89=\xe2\x80\x89ti\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89si\xe2\x80\x89<\xe2\x80\x89ti." "1600  x9230"
516E "Drazil and His Happy Friends" "math, number theory" "Drazil has many friends. Some of them are happy and some of them are unhappy. Drazil wants to make all his friends become happy. So he invented the following plan.
There are n boys and m girls among his friends. Let\'s number them from 0 to n\xe2\x80\x89-\xe2\x80\x891 and 0 to m\xe2\x80\x89-\xe2\x80\x891 separately. In i-th day, Drazil invites -th boy and -th girl to have dinner together (as Drazil is programmer, i starts from 0). If one of those two people is happy, the other one will also become happy. Otherwise, those two people remain in their states. Once a person becomes happy (or if it is happy originally), he stays happy forever.
Drazil wants to know on which day all his friends become happy or to determine if they won\'t become all happy at all.
The first line contains two integer n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
The second line contains integer b (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(n,\xe2\x80\x89105)), denoting the number of happy boys among friends of Drazil, and then follow b distinct integers x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xb (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89<\xe2\x80\x89n), denoting the list of indices of happy boys.
The third line conatins integer g (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89g\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(m,\xe2\x80\x89105)), denoting the number of happy girls among friends of Drazil, and then follow g distinct integers y1,\xe2\x80\x89y2,\xe2\x80\x89... ,\xe2\x80\x89yg (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89yj\xe2\x80\x89<\xe2\x80\x89m), denoting the list of indices of happy girls.
It is guaranteed that there is at least one person that is unhappy among his friends.
Print the number of the first day that all friends of Drazil become happy. If this day won\'t come at all, you print -1.
By  we define the remainder of integer division of i by k.
In first sample case: " "3100  x505"
516D "Drazil and Morning Exercise" "dfs and similar, dp, dsu, trees, two pointers" "Drazil and Varda are the earthworm couple. They want to find a good place to bring up their children. They found a good ground containing nature hole. The hole contains many rooms, some pairs of rooms are connected by small tunnels such that earthworm can move between them.
Let\'s consider rooms and small tunnels as the vertices and edges in a graph. This graph is a tree. In the other words, any pair of vertices has an unique path between them.
Each room that is leaf in the graph is connected with a ground by a vertical tunnel. Here, leaf is a vertex that has only one outgoing edge in the graph.
Each room is large enough only to fit one earthworm living in it. Earthworm can\'t live in a tunnel.
Drazil and Varda have a plan to educate their children. They want all their children to do morning exercises immediately after getting up!
When the morning is coming, all earthworm children get up in the same time, then each of them chooses the farthest path to the ground for gathering with others (these children are lazy, so they all want to do exercises as late as possible).
Drazil and Varda want the difference between the time first earthworm child arrives outside and the time the last earthworm child arrives outside to be not larger than l (otherwise children will spread around the ground and it will be hard to keep them exercising together).
Also, The rooms that are occupied by their children should form a connected set. In the other words, for any two rooms that are occupied with earthworm children, all rooms that lie on the path between them should be occupied with earthworm children too.
How many children Drazil and Varda may have at most in order to satisfy all conditions above? Drazil and Varda want to know the answer for many different choices of l.
(Drazil and Varda don\'t live in the hole with their children)
The first line contains one integer n denoting how many rooms there are in the hole (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
Then there are n\xe2\x80\x89-\xe2\x80\x891 lines following. Each of these lines contains three integers x, y, v (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89v\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) denoting there is a small tunnel between room x and room y that takes time v to pass. 
Suppose that the time for an earthworm to get out to the ground from any leaf room is the same.
The next line contains an integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950), denoting the number of different value of l you need to process.
The last line contains q numbers, each number denoting a value of l (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891011).
You should print q lines. Each line should contain one integer denoting the answer for a corresponding value of l.
For the first sample the hole looks like the following. Rooms 1 and 5 are leaves, so they contain a vertical tunnel connecting them to the ground. The lengths of farthest path from rooms 1\xe2\x80\x89\xe2\x80\x93\xe2\x80\x895 to the ground are 12,\xe2\x80\x899,\xe2\x80\x897,\xe2\x80\x899,\xe2\x80\x8912 respectively. 
If l = 1, we may only choose any single room. 
If l = 2..4, we may choose rooms 2, 3, and 4 as the answer. 
If l = 5, we may choose all rooms." "2800  x1319"
515E "Drazil and Park" "data structures" "Drazil is a monkey. He lives in a circular park. There are n trees around the park. The distance between the i-th tree and (i\xe2\x80\x89+\xe2\x80\x891)-st trees is di, the distance between the n-th tree and the first tree is dn. The height of the i-th tree is hi.
Drazil starts each day with the morning run. The morning run consists of the following steps:
But there are always children playing around some consecutive trees. Drazil can\'t stand children, so he can\'t choose the trees close to children. He even can\'t stay close to those trees.
If the two trees Drazil chooses are x-th and y-th, we can estimate the energy the morning run takes to him as 2(hx\xe2\x80\x89+\xe2\x80\x89hy)\xe2\x80\x89+\xe2\x80\x89dist(x,\xe2\x80\x89y). Since there are children on exactly one of two arcs connecting x and y, the distance dist(x,\xe2\x80\x89y) between trees x and y is uniquely defined.
Now, you know that on the i-th day children play between ai-th tree and bi-th tree. More formally, if ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi, children play around the trees with indices from range [ai,\xe2\x80\x89bi], otherwise they play around the trees with indices from .
Please help Drazil to determine which two trees he should choose in order to consume the most energy (since he wants to become fit and cool-looking monkey) and report the resulting amount of energy for each day.
The first line contains two integer n and m (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), denoting number of trees and number of days, respectively. 
The second line contains n integers d1,\xe2\x80\x89d2,\xe2\x80\x89...,\xe2\x80\x89dn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), the distances between consecutive trees.
The third line contains n integers h1,\xe2\x80\x89h2,\xe2\x80\x89...,\xe2\x80\x89hn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), the heights of trees.
Each of following m lines contains two integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) describing each new day. There are always at least two different trees Drazil can choose that are not affected by children.
For each day print the answer in a separate line." "2300  x2144"
515D "Drazil and Tiles" "constructive algorithms, greedy" "Drazil created a following problem about putting 1\xe2\x80\x89\xc3\x97\xe2\x80\x892 tiles into an n\xe2\x80\x89\xc3\x97\xe2\x80\x89m grid:
""There is a grid with some cells that are empty and some cells that are occupied. You should use 1\xe2\x80\x89\xc3\x97\xe2\x80\x892 tiles to cover all empty cells and no two tiles should cover each other. And you should print a solution about how to do it.""
But Drazil doesn\'t like to write special checking program for this task. His friend, Varda advised him: ""how about asking contestant only to print the solution when it exists and it is unique? Otherwise contestant may print \'Not unique\' "".
Drazil found that the constraints for this task may be much larger than for the original task!
Can you solve this new problem?
Note that you should print \'Not unique\' either when there exists no solution or when there exists several different solutions for the original task.
The first line contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000).
The following n lines describe the grid rows. Character \'.\' denotes an empty cell, and the character \'*\' denotes a cell that is occupied.
If there is no solution or the solution is not unique, you should print the string ""Not unique"".
Otherwise you should print how to cover all empty cells with 1\xe2\x80\x89\xc3\x97\xe2\x80\x892 tiles. Use characters ""<>"" to denote horizontal tiles and characters ""^v"" to denote vertical tiles. Refer to the sample test for the output format example.
In the first case, there are indeed two solutions:
and
so the answer is ""Not unique""." "2000  x2867"
515C "Drazil and Factorial" "greedy, math, sortings" "Drazil is playing a math game with Varda.
Let\'s define  for positive integer x as a product of factorials of its digits. For example, .
First, they choose a decimal number a consisting of n digits that contains at least one digit larger than 1. This number may possibly start with leading zeroes. Then they should find maximum positive number x satisfying following two conditions:
1. x doesn\'t contain neither digit 0 nor digit 1.
2.  = .
Help friends find such number.
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8915) \xe2\x80\x94 the number of digits in a.
The second line contains n digits of a. There is at least one digit in a that is larger than 1. Number a may possibly contain leading zeroes.
Output a maximum possible integer satisfying the conditions above. There should be no zeroes and ones in this number decimal representation.
In the first case, " "1400  x26116"
515B "Drazil and His Happy Friends" "brute force, dsu, meet-in-the-middle, number theory" "Drazil has many friends. Some of them are happy and some of them are unhappy. Drazil wants to make all his friends become happy. So he invented the following plan.
There are n boys and m girls among his friends. Let\'s number them from 0 to n\xe2\x80\x89-\xe2\x80\x891 and 0 to m\xe2\x80\x89-\xe2\x80\x891 separately. In i-th day, Drazil invites -th boy and -th girl to have dinner together (as Drazil is programmer, i starts from 0). If one of those two people is happy, the other one will also become happy. Otherwise, those two people remain in their states. Once a person becomes happy (or if it is happy originally), he stays happy forever.
Drazil wants to know on which day all his friends become happy or to determine if they won\'t become all happy at all.
The first line contains two integer n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
The second line contains integer b (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(n,\xe2\x80\x89105)), denoting the number of happy boys among friends of Drazil, and then follow b distinct integers x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xb (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89<\xe2\x80\x89n), denoting the list of indices of happy boys.
The third line conatins integer g (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89g\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(m,\xe2\x80\x89105)), denoting the number of happy girls among friends of Drazil, and then follow g distinct integers y1,\xe2\x80\x89y2,\xe2\x80\x89... ,\xe2\x80\x89yg (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89yj\xe2\x80\x89<\xe2\x80\x89m), denoting the list of indices of happy girls.
It is guaranteed that there is at least one person that is unhappy among his friends.
Print the number of the first day that all friends of Drazil become happy. If this day won\'t come at all, you print -1.
By  we define the remainder of integer division of i by k.
In first sample case: " "1300  x7463"
515A "Drazil and Date" math "Someday, Drazil wanted to go on date with Varda. Drazil and Varda live on Cartesian plane. Drazil\'s home is located in point (0,\xe2\x80\x890) and Varda\'s home is located in point (a,\xe2\x80\x89b). In each step, he can move in a unit distance in horizontal or vertical direction. In other words, from position (x,\xe2\x80\x89y) he can go to positions (x\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89y), (x\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89y), (x,\xe2\x80\x89y\xe2\x80\x89+\xe2\x80\x891) or (x,\xe2\x80\x89y\xe2\x80\x89-\xe2\x80\x891). 
Unfortunately, Drazil doesn\'t have sense of direction. So he randomly chooses the direction he will go to in each step. He may accidentally return back to his house during his travel. Drazil may even not notice that he has arrived to (a,\xe2\x80\x89b) and continue travelling. 
Luckily, Drazil arrived to the position (a,\xe2\x80\x89b) successfully. Drazil said to Varda: ""It took me exactly s steps to travel from my house to yours"". But Varda is confused about his words, she is not sure that it is possible to get from (0,\xe2\x80\x890) to (a,\xe2\x80\x89b) in exactly s steps. Can you find out if it is possible for Varda?
You are given three integers a, b, and s (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7109) in a single line.
If you think Drazil made a mistake and it is impossible to take exactly s steps and get from his home to Varda\'s home, print ""No"" (without quotes).
Otherwise, print ""Yes"".
In fourth sample case one possible route is: ." "1000  x20388"
514E "Darth Vader and Tree" "dp, matrices" "When Darth Vader gets bored, he sits down on the sofa, closes his eyes and thinks of an infinite rooted tree where each node has exactly n sons, at that for each node, the distance between it an its i-th left child equals to di. The Sith Lord loves counting the number of nodes in the tree that are at a distance at most x from the root. The distance is the sum of the lengths of edges on the path between nodes.
But he has got used to this activity and even grew bored of it. \'Why does he do that, then?\' \xe2\x80\x94 you may ask. It\'s just that he feels superior knowing that only he can solve this problem. 
Do you want to challenge Darth Vader himself? Count the required number of nodes. As the answer can be rather large, find it modulo 109\xe2\x80\x89+\xe2\x80\x897.
The first line contains two space-separated integers n and x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of children of each node and the distance from the root within the range of which you need to count the nodes.
The next line contains n space-separated integers di (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the length of the edge that connects each node with its i-th child.
Print a single number \xe2\x80\x94 the number of vertexes in the tree at distance from the root equal to at most x. 
Pictures to the sample (the yellow color marks the nodes the distance to which is at most three)" "2200  x1445"
514D "R2D2 and Droid Army" "binary search, data structures, two pointers" "An army of n droids is lined up in one row. Each droid is described by m integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89am, where ai is the number of details of the i-th type in this droid\'s mechanism. R2-D2 wants to destroy the sequence of consecutive droids of maximum length. He has m weapons, the i-th weapon can affect all the droids in the army by destroying one detail of the i-th type (if the droid doesn\'t have details of this type, nothing happens to it). 
A droid is considered to be destroyed when all of its details are destroyed. R2-D2 can make at most k shots. How many shots from the weapon of what type should R2-D2 make to destroy the sequence of consecutive droids of maximum length?
The first line contains three integers n,\xe2\x80\x89m,\xe2\x80\x89k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of droids, the number of detail types and the number of available shots, respectively.
Next n lines follow describing the droids. Each line contains m integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89am (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108), where ai is the number of details of the i-th type for the respective robot.
Print m space-separated integers, where the i-th number is the number of shots from the weapon of the i-th type that the robot should make to destroy the subsequence of consecutive droids of the maximum length.
If there are multiple optimal solutions, print any of them. 
It is not necessary to make exactly k shots, the number of shots can be less.
In the first test the second, third and fourth droids will be destroyed. 
In the second test the first and second droids will be destroyed." "2000  x4481"
514C "Watto and Mechanism" "binary search, data structures, hashing, string suffix structures, strings" "Watto, the owner of a spare parts store, has recently got an order for the mechanism that can process strings in a certain way. Initially the memory of the mechanism is filled with n strings. Then the mechanism should be able to process queries of the following type: ""Given string s, determine if the memory of the mechanism contains string t that consists of the same number of characters as s and differs from s in exactly one position"".
Watto has already compiled the mechanism, all that\'s left is to write a program for it and check it on the data consisting of n initial lines and m queries. He decided to entrust this job to you.
The first line contains two non-negative numbers n and m (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xc2\xb7105, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xc2\xb7105) \xe2\x80\x94 the number of the initial strings and the number of queries, respectively.
Next follow n non-empty strings that are uploaded to the memory of the mechanism.
Next follow m non-empty strings that are the queries to the mechanism.
The total length of lines in the input doesn\'t exceed 6\xc2\xb7105. Each line consists only of letters \'a\', \'b\', \'c\'.
For each query print on a single line ""YES"" (without the quotes), if the memory of the mechanism contains the required string, otherwise print ""NO"" (without the quotes)." "2000  x6953"
514B "Han Solo and Lazer Gun" "brute force, data structures, geometry, implementation, math" "There are n Imperial stormtroopers on the field. The battle field is a plane with Cartesian coordinate system. Each stormtrooper is associated with his coordinates (x,\xe2\x80\x89y) on this plane. 
Han Solo has the newest duplex lazer gun to fight these stormtroopers. It is situated at the point (x0,\xe2\x80\x89y0). In one shot it can can destroy all the stormtroopers, situated on some line that crosses point (x0,\xe2\x80\x89y0).
Your task is to determine what minimum number of shots Han Solo needs to defeat all the stormtroopers.
The gun is the newest invention, it shoots very quickly and even after a very large number of shots the stormtroopers don\'t have enough time to realize what\'s happening and change their location. 
The first line contains three integers n, x0 \xd0\xb8 y0 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000, \xe2\x80\x89-\xe2\x80\x89104\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x0,\xe2\x80\x89y0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104) \xe2\x80\x94 the number of stormtroopers on the battle field and the coordinates of your gun.
Next n lines contain two integers each xi, yi (\xe2\x80\x89-\xe2\x80\x89104\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104) \xe2\x80\x94 the coordinates of the stormtroopers on the battlefield. It is guaranteed that no stormtrooper stands at the same point with the gun. Multiple stormtroopers can stand at the same point.
Print a single integer \xe2\x80\x94 the minimum number of shots Han Solo needs to destroy all the stormtroopers. 
Explanation to the first and second samples from the statement, respectively: " "1400  x20914"
514A "Chewbaсca and Number" "greedy, implementation" "Luke Skywalker gave Chewbacca an integer number x. Chewbacca isn\'t good at numbers but he loves inverting digits in them. Inverting digit t means replacing it with digit 9\xe2\x80\x89-\xe2\x80\x89t. 
Help Chewbacca to transform the initial number x to the minimum possible positive number by inverting some (possibly, zero) digits. The decimal representation of the final number shouldn\'t start with a zero.
The first line contains a single integer x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018) \xe2\x80\x94 the number that Luke Skywalker gave to Chewbacca.
Print the minimum possible positive number that Chewbacca can obtain after inverting some digits. The number shouldn\'t contain leading zeroes." "1200  x53457"
513G3 "Inversions problem" dp "You are given a permutation of n numbers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn. We perform k operations of the following type: choose uniformly at random two indices l and r (l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r) and reverse the order of the elements pl,\xe2\x80\x89pl\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89pr. Your task is to find the expected value of the number of inversions in the resulting permutation.
The first line of input contains two integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). The next line contains n integers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn \xe2\x80\x94 the given permutation. All pi are different and in range from 1 to n.
The problem consists of three subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output the answer with absolute or relative error no more than 1e\xe2\x80\x89-\xe2\x80\x899.
Consider the first sample test. We will randomly pick an interval of the permutation (1,\xe2\x80\x892,\xe2\x80\x893) (which has no inversions) and reverse the order of its elements. With probability , the interval will consist of a single element and the permutation will not be altered. With probability  we will inverse the first two elements\' order and obtain the permutation (2,\xe2\x80\x891,\xe2\x80\x893) which has one inversion. With the same probability we might pick the interval consisting of the last two elements which will lead to the permutation (1,\xe2\x80\x893,\xe2\x80\x892) with one inversion. Finally, with probability  the randomly picked interval will contain all elements, leading to the permutation (3,\xe2\x80\x892,\xe2\x80\x891) with 3 inversions. Hence, the expected number of inversions is equal to ." "3100  x265"
513G2 "Inversions problem" "dp, probabilities" "You are given a permutation of n numbers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn. We perform k operations of the following type: choose uniformly at random two indices l and r (l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r) and reverse the order of the elements pl,\xe2\x80\x89pl\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89pr. Your task is to find the expected value of the number of inversions in the resulting permutation.
The first line of input contains two integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). The next line contains n integers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn \xe2\x80\x94 the given permutation. All pi are different and in range from 1 to n.
The problem consists of three subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output the answer with absolute or relative error no more than 1e\xe2\x80\x89-\xe2\x80\x899.
Consider the first sample test. We will randomly pick an interval of the permutation (1,\xe2\x80\x892,\xe2\x80\x893) (which has no inversions) and reverse the order of its elements. With probability , the interval will consist of a single element and the permutation will not be altered. With probability  we will inverse the first two elements\' order and obtain the permutation (2,\xe2\x80\x891,\xe2\x80\x893) which has one inversion. With the same probability we might pick the interval consisting of the last two elements which will lead to the permutation (1,\xe2\x80\x893,\xe2\x80\x892) with one inversion. Finally, with probability  the randomly picked interval will contain all elements, leading to the permutation (3,\xe2\x80\x892,\xe2\x80\x891) with 3 inversions. Hence, the expected number of inversions is equal to ." "2400  x662"
513G1 "Inversions problem" "brute force, dfs and similar, dp, meet-in-the-middle" "You are given a permutation of n numbers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn. We perform k operations of the following type: choose uniformly at random two indices l and r (l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r) and reverse the order of the elements pl,\xe2\x80\x89pl\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89pr. Your task is to find the expected value of the number of inversions in the resulting permutation.
The first line of input contains two integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). The next line contains n integers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn \xe2\x80\x94 the given permutation. All pi are different and in range from 1 to n.
The problem consists of three subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output the answer with absolute or relative error no more than 1e\xe2\x80\x89-\xe2\x80\x899.
Consider the first sample test. We will randomly pick an interval of the permutation (1,\xe2\x80\x892,\xe2\x80\x893) (which has no inversions) and reverse the order of its elements. With probability , the interval will consist of a single element and the permutation will not be altered. With probability  we will inverse the first two elements\' order and obtain the permutation (2,\xe2\x80\x891,\xe2\x80\x893) which has one inversion. With the same probability we might pick the interval consisting of the last two elements which will lead to the permutation (1,\xe2\x80\x893,\xe2\x80\x892) with one inversion. Finally, with probability  the randomly picked interval will contain all elements, leading to the permutation (3,\xe2\x80\x892,\xe2\x80\x891) with 3 inversions. Hence, the expected number of inversions is equal to ." "1800  x1793"
513F2 Scaygerboss flows "Cthulhu decided to catch Scaygerboss. Scaygerboss found it out and is trying to hide in a pack of his scaygers. Each scayger except Scaygerboss is either a male or a female. Scaygerboss\'s gender is ""other"".
Scaygers are scattered on a two-dimensional map divided into cells. A scayger looks nerdy and loveable if it is staying in the same cell with exactly one scayger of a gender that is different from its own gender. Cthulhu will not be able to catch Scaygerboss if all the scaygers on the map look nerdy and loveable.
The scaygers can move around at different speeds. For each scayger, we are given the time it takes this scayger to move from a cell to an adjacent cell. Cells are adjacent if they share a common side. At any point of time, each cell that does not contain an obstacle can be occupied by an arbitrary number of scaygers. Scaygers cannot move to cells with obstacles.
Calculate minimal time in order to make all scaygers look nerdy and loveable if they move optimally toward this goal.
The first line contains 4 integers: n, m, males, females (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89males,\xe2\x80\x89females\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xc2\xb7m). n and m are dimensions of the map; males and females are numbers of male scaygers and female scaygers.
Next n lines describe the map. Each of these lines contains m characters. Character \'.\' stands for a free cell; character \'#\' stands for a cell with an obstacle.
The next line contains 3 integers r, c, and t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109): the current coordinates of Scaygerboss and the time it takes Scaygerboss to move to an adjacent cell. The next males lines contain coordinates and times of male scaygers in the same format as for Scaygerboss. The next females lines contain coordinates and times of female scaygers in the same format as for Scaygerboss. (The coordinates and times adhere to the same limits as for Scaygerboss.) All scaygers reside in cells without obstacles.
The problem consists of two subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output the minimum possible time it takes to make all scaygers look nerdy and loveable or -1 if it is impossible.
Consider the first sample test. The scaygers are hiding on a 4 by 4 map. Scaygerboss initially resides in the cell (2,\xe2\x80\x891) and can move between cells in 1 unit of time. There are also 2 male and 3 female scaygers on the map. One of the females initially is in the cell (1,\xe2\x80\x891), and all the other scaygers are in the cell (2,\xe2\x80\x891). All the scaygers move between cells in 2 units of time. If Scaygerboss and the female scayger from the cell (1,\xe2\x80\x891) move to the cell (1,\xe2\x80\x892), and a male and a female scayger from those residing in the cell (2,\xe2\x80\x891) move to the cell (1,\xe2\x80\x891), then all the scaygers will look nerdy and lovable in 2 units of time." "2800  x358"
513F1 Scaygerboss flows "Cthulhu decided to catch Scaygerboss. Scaygerboss found it out and is trying to hide in a pack of his scaygers. Each scayger except Scaygerboss is either a male or a female. Scaygerboss\'s gender is ""other"".
Scaygers are scattered on a two-dimensional map divided into cells. A scayger looks nerdy and loveable if it is staying in the same cell with exactly one scayger of a gender that is different from its own gender. Cthulhu will not be able to catch Scaygerboss if all the scaygers on the map look nerdy and loveable.
The scaygers can move around at different speeds. For each scayger, we are given the time it takes this scayger to move from a cell to an adjacent cell. Cells are adjacent if they share a common side. At any point of time, each cell that does not contain an obstacle can be occupied by an arbitrary number of scaygers. Scaygers cannot move to cells with obstacles.
Calculate minimal time in order to make all scaygers look nerdy and loveable if they move optimally toward this goal.
The first line contains 4 integers: n, m, males, females (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89males,\xe2\x80\x89females\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xc2\xb7m). n and m are dimensions of the map; males and females are numbers of male scaygers and female scaygers.
Next n lines describe the map. Each of these lines contains m characters. Character \'.\' stands for a free cell; character \'#\' stands for a cell with an obstacle.
The next line contains 3 integers r, c, and t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109): the current coordinates of Scaygerboss and the time it takes Scaygerboss to move to an adjacent cell. The next males lines contain coordinates and times of male scaygers in the same format as for Scaygerboss. The next females lines contain coordinates and times of female scaygers in the same format as for Scaygerboss. (The coordinates and times adhere to the same limits as for Scaygerboss.) All scaygers reside in cells without obstacles.
The problem consists of two subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output the minimum possible time it takes to make all scaygers look nerdy and loveable or -1 if it is impossible.
Consider the first sample test. The scaygers are hiding on a 4 by 4 map. Scaygerboss initially resides in the cell (2,\xe2\x80\x891) and can move between cells in 1 unit of time. There are also 2 male and 3 female scaygers on the map. One of the females initially is in the cell (1,\xe2\x80\x891), and all the other scaygers are in the cell (2,\xe2\x80\x891). All the scaygers move between cells in 2 units of time. If Scaygerboss and the female scayger from the cell (1,\xe2\x80\x891) move to the cell (1,\xe2\x80\x892), and a male and a female scayger from those residing in the cell (2,\xe2\x80\x891) move to the cell (1,\xe2\x80\x891), then all the scaygers will look nerdy and lovable in 2 units of time." "2700  x324"
513E2 "Subarray Cuts" dp "You are given an array of length n and a number k. Let\'s pick k non-overlapping non-empty subarrays of the initial array. Let si be the sum of the i-th subarray in order from left to right. Compute the maximum value of the following expression: 
Here subarray is a contiguous part of an array.
The first line of input contains two integers n and k. The second line contains n integers \xe2\x80\x94 the elements of the array. The absolute values of elements do not exceed 104.
The problem consists of two subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output a single integer \xe2\x80\x94 the maximum possible value.
Consider the first sample test. The optimal solution is obtained if the first subarray contains the first element only, the second subarray spans the next three elements and the last subarray contains the last element only. The sums of these subarrays are 5, 9 and 1, correspondingly.
Consider the second sample test. In the optimal solution, the first subarray consists of the first two elements and the second subarray consists of the third element only. Note that the last element does not belong to any subarray in this solution." "2700  x592"
513E1 "Subarray Cuts" dp "You are given an array of length n and a number k. Let\'s pick k non-overlapping non-empty subarrays of the initial array. Let si be the sum of the i-th subarray in order from left to right. Compute the maximum value of the following expression: 
Here subarray is a contiguous part of an array.
The first line of input contains two integers n and k. The second line contains n integers \xe2\x80\x94 the elements of the array. The absolute values of elements do not exceed 104.
The problem consists of two subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output a single integer \xe2\x80\x94 the maximum possible value.
Consider the first sample test. The optimal solution is obtained if the first subarray contains the first element only, the second subarray spans the next three elements and the last subarray contains the last element only. The sums of these subarrays are 5, 9 and 1, correspondingly.
Consider the second sample test. In the optimal solution, the first subarray consists of the first two elements and the second subarray consists of the third element only. Note that the last element does not belong to any subarray in this solution." "2600  x492"
513D2 "Constrained Tree" "constructive algorithms, data structures" "You need to find a binary tree of size n that satisfies a given set of c constraints. Suppose that the nodes of the unknown binary tree are labeled using a pre-order traversal starting with 1. For the i-th constraint you are given two labels, ai and bi and a direction, left or right. In case of left direction, bi is an element of the subtree rooted at ai\'s left child. Similarly in the case of right direction bi is an element of the subtree rooted at ai\'s right child.
The first line of input contains two integers n and c. The next c lines contain 2 integers ai, bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and either ""LEFT"" or ""RIGHT"" denoting whether b is in the subtree rooted at ai\'s left child or in the subtree rooted at ai\'s right child.
The problem consists of multiple subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output will be on a single line.
Any binary tree that satisfies the constraints will be accepted. The tree\'s nodes should be printed out as n space separated labels representing an in-order traversal, using the pre-order numbers as labels of vertices.
If there are no trees that satisfy the constraints, print ""IMPOSSIBLE"" (without quotes).
Consider the first sample test. We need to find a tree with 3 nodes that satisfies the following two constraints. The node labeled 2 with pre-order traversal should be in the left subtree of the node labeled 1 with pre-order traversal; the node labeled 3 with pre-order traversal should be in the right subtree of the node labeled 1. There is only one tree with three nodes that satisfies these constraints and its in-order traversal is (2,\xe2\x80\x891,\xe2\x80\x893).
Pre-order is the ""root \xe2\x80\x93 left subtree \xe2\x80\x93 right subtree"" order. In-order is the ""left subtree \xe2\x80\x93 root \xe2\x80\x93 right subtree"" order.
For other information regarding in-order and pre-order, see http://en.wikipedia.org/wiki/Tree_traversal." "2600  x384"
513D1 "Constrained Tree" "dfs and similar" "You need to find a binary tree of size n that satisfies a given set of c constraints. Suppose that the nodes of the unknown binary tree are labeled using a pre-order traversal starting with 1. For the i-th constraint you are given two labels, ai and bi and a direction, left or right. In case of left direction, bi is an element of the subtree rooted at ai\'s left child. Similarly in the case of right direction bi is an element of the subtree rooted at ai\'s right child.
The first line of input contains two integers n and c. The next c lines contain 2 integers ai, bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and either ""LEFT"" or ""RIGHT"" denoting whether b is in the subtree rooted at ai\'s left child or in the subtree rooted at ai\'s right child.
The problem consists of multiple subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output will be on a single line.
Any binary tree that satisfies the constraints will be accepted. The tree\'s nodes should be printed out as n space separated labels representing an in-order traversal, using the pre-order numbers as labels of vertices.
If there are no trees that satisfy the constraints, print ""IMPOSSIBLE"" (without quotes).
Consider the first sample test. We need to find a tree with 3 nodes that satisfies the following two constraints. The node labeled 2 with pre-order traversal should be in the left subtree of the node labeled 1 with pre-order traversal; the node labeled 3 with pre-order traversal should be in the right subtree of the node labeled 1. There is only one tree with three nodes that satisfies these constraints and its in-order traversal is (2,\xe2\x80\x891,\xe2\x80\x893).
Pre-order is the ""root \xe2\x80\x93 left subtree \xe2\x80\x93 right subtree"" order. In-order is the ""left subtree \xe2\x80\x93 root \xe2\x80\x93 right subtree"" order.
For other information regarding in-order and pre-order, see http://en.wikipedia.org/wiki/Tree_traversal." "2400  x621"
513C "Second price auction" "bitmasks, probabilities" "Nowadays, most of the internet advertisements are not statically linked to a web page. Instead, what will be shown to the person opening a web page is determined within 100 milliseconds after the web page is opened. Usually, multiple companies compete for each ad slot on the web page in an auction. Each of them receives a request with details about the user, web page and ad slot and they have to respond within those 100 milliseconds with a bid they would pay for putting an advertisement on that ad slot. The company that suggests the highest bid wins the auction and gets to place its advertisement. If there are several companies tied for the highest bid, the winner gets picked at random.
However, the company that won the auction does not have to pay the exact amount of its bid. In most of the cases, a second-price auction is used. This means that the amount paid by the company is equal to the maximum of all the other bids placed for this ad slot.
Let\'s consider one such bidding. There are n companies competing for placing an ad. The i-th of these companies will bid an integer number of microdollars equiprobably randomly chosen from the range between Li and Ri, inclusive. In the other words, the value of the i-th company bid can be any integer from the range [Li,\xe2\x80\x89Ri] with the same probability. 
Determine the expected value that the winner will have to pay in a second-price auction.
The first line of input contains an integer number n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895). n lines follow, the i-th of them containing two numbers Li and Ri (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89Li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89Ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910000) describing the i-th company\'s bid preferences.
This problem doesn\'t have subproblems. You will get 8 points for the correct submission.
Output the answer with absolute or relative error no more than 1e\xe2\x80\x89-\xe2\x80\x899.
Consider the first example. The first company bids a random integer number of microdollars in range [4,\xe2\x80\x897]; the second company bids between 8 and 10, and the third company bids 5 microdollars. The second company will win regardless of the exact value it bids, however the price it will pay depends on the value of first company\'s bid. With probability 0.5 the first company will bid at most 5 microdollars, and the second-highest price of the whole auction will be 5. With probability 0.25 it will bid 6 microdollars, and with probability 0.25 it will bid 7 microdollars. Thus, the expected value the second company will have to pay is 0.5\xc2\xb75\xe2\x80\x89+\xe2\x80\x890.25\xc2\xb76\xe2\x80\x89+\xe2\x80\x890.25\xc2\xb77\xe2\x80\x89=\xe2\x80\x895.75." "2000  x1563"
513B2 Permutations "bitmasks, divide and conquer, math" "You are given a permutation p of numbers 1,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89n. Let\'s define f(p) as the following sum:
Find the lexicographically m-th permutation of length n in the set of permutations having the maximum possible value of f(p).
The single line of input contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89cntn), where cntn is the number of permutations of length n with maximum possible value of f(p).
The problem consists of two subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output n number forming the required permutation.
In the first example, both permutations of numbers {1, 2} yield maximum possible f(p) which is equal to 4. Among them, (2,\xe2\x80\x891) comes second in lexicographical order." "1800  x2639"
513B1 Permutations "brute force" "You are given a permutation p of numbers 1,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89n. Let\'s define f(p) as the following sum:
Find the lexicographically m-th permutation of length n in the set of permutations having the maximum possible value of f(p).
The single line of input contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89cntn), where cntn is the number of permutations of length n with maximum possible value of f(p).
The problem consists of two subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.
Output n number forming the required permutation.
In the first example, both permutations of numbers {1, 2} yield maximum possible f(p) which is equal to 4. Among them, (2,\xe2\x80\x891) comes second in lexicographical order." "1400  x3628"
513A Game "constructive algorithms, math" "Two players play a simple game. Each player is provided with a box with balls. First player\'s box contains exactly n1 balls and second player\'s box contains exactly n2 balls. In one move first player can take from 1 to k1 balls from his box and throw them away. Similarly, the second player can take from 1 to k2 balls from his box in his move. Players alternate turns and the first player starts the game. The one who can\'t make a move loses. Your task is to determine who wins if both players play optimally.
The first line contains four integers n1,\xe2\x80\x89n2,\xe2\x80\x89k1,\xe2\x80\x89k2. All numbers in the input are from 1 to 50.
This problem doesn\'t have subproblems. You will get 3 points for the correct submission.
Output ""First"" if the first player wins and ""Second"" otherwise.
Consider the first sample test. Each player has a box with 2 balls. The first player draws a single ball from his box in one move and the second player can either take 1 or 2 balls from his box in one move. No matter how the first player acts, the second player can always win if he plays wisely." "800  x20459"
512E "Fox And Polygon" "constructive algorithms, divide and conquer" "Fox Ciel just designed a puzzle game called ""Polygon""! It is played using triangulations of a regular n-edge polygon. The goal is to transform one triangulation to another by some tricky rules.
Triangulation of an n-edge poylgon is a set of n\xe2\x80\x89-\xe2\x80\x893 diagonals satisfying the condition that no two diagonals share a common internal point.
For example, the initial state of the game may look like (a) in above figure. And your goal may look like (c). In each step you can choose a diagonal inside the polygon (but not the one of edges of the polygon) and flip this diagonal. 
Suppose you are going to flip a diagonal a\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89b. There always exist two triangles sharing a\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89b as a side, let\'s denote them as a\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89b\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89c and a\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89b\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89d. As a result of this operation, the diagonal a\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89b is replaced by a diagonal c\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89d. It can be easily proven that after flip operation resulting set of diagonals is still a triangulation of the polygon.
So in order to solve above case, you may first flip diagonal 6\xe2\x80\x89\xe2\x80\x93\xe2\x80\x893, it will be replaced by diagonal 2\xe2\x80\x89\xe2\x80\x93\xe2\x80\x894. Then you flip diagonal 6\xe2\x80\x89\xe2\x80\x93\xe2\x80\x894 and get figure (c) as result.
Ciel just proved that for any starting and destination triangulations this game has a solution. She wants you to solve it in no more than 20\xe2\x80\x89000 steps for any puzzle satisfying n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000.
The first line contain an integer n (4\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000), number of edges of the regular polygon. 
Then follows two groups of (n\xe2\x80\x89-\xe2\x80\x893) lines describing the original triangulation and goal triangulation.
Description of each triangulation consists of (n\xe2\x80\x89-\xe2\x80\x893) lines. Each line contains 2 integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), describing a diagonal ai\xe2\x80\x89\xe2\x80\x93\xe2\x80\x89bi.
It is guaranteed that both original and goal triangulations are correct (i. e. no two diagonals share a common internal point in both of these triangulations).
First, output an integer k (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920,\xe2\x80\x89000): number of steps.
Then output k lines, each containing 2 integers ai and bi: the endpoints of a diagonal you are going to flip at step i. You may output ai and bi in any order.
If there are several possible solutions, output any of them.
Sample test 2 is discussed above and shown on the picture." "2900  x522"
512D "Fox And Travelling" "dp, trees" "Fox Ciel is going to travel to New Foxland during this summer.
New Foxland has n attractions that are linked by m undirected roads. Two attractions are called adjacent if they are linked by a road. Fox Ciel has k days to visit this city and each day she will visit exactly one attraction.
There is one important rule in New Foxland: you can\'t visit an attraction if it has more than one adjacent attraction that you haven\'t visited yet.
At the beginning Fox Ciel haven\'t visited any attraction. During her travelling she may move aribtrarly between attraction. After visiting attraction a, she may travel to any attraction b satisfying conditions above that hasn\'t been visited yet, even if it is not reachable from a by using the roads (Ciel uses boat for travelling between attractions, so it is possible).
 She wants to know how many different travelling plans she can make. Calculate this number modulo 109\xe2\x80\x89+\xe2\x80\x899 for every k from 0 to n since she hasn\'t decided for how many days she is visiting New Foxland.
First line contains two integers: n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, ), the number of attractions and number of undirected roads.
Then next m lines each contain two integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi), describing a road. There is no more than one road connecting each pair of attractions.
Output n\xe2\x80\x89+\xe2\x80\x891 integer: the number of possible travelling plans modulo 109\xe2\x80\x89+\xe2\x80\x899 for all k from 0 to n.
In the first sample test for k\xe2\x80\x89=\xe2\x80\x893 there are 4 travelling plans: {1,\xe2\x80\x892,\xe2\x80\x893},\xe2\x80\x89{1,\xe2\x80\x893,\xe2\x80\x892},\xe2\x80\x89{3,\xe2\x80\x891,\xe2\x80\x892},\xe2\x80\x89{3,\xe2\x80\x892,\xe2\x80\x891}.
In the second sample test Ciel can\'t visit any attraction in the first day, so for k\xe2\x80\x89>\xe2\x80\x890 the answer is 0.
In the third sample test Foxlands look like this:" "2900  x979"
510E "Fox And Dinner" flows "Fox Ciel is participating in a party in Prime Kingdom. There are n foxes there (include Fox Ciel). The i-th fox is ai years old.
They will have dinner around some round tables. You want to distribute foxes such that:
If k foxes f1, f2, ..., fk are sitting around table in clockwise order, then for 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89-\xe2\x80\x891: fi and fi\xe2\x80\x89+\xe2\x80\x891 are adjacent, and f1 and fk are also adjacent.
If it is possible to distribute the foxes in the desired manner, find out a way to do that.
The first line contains single integer n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200): the number of foxes in this party. 
The second line contains n integers ai (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104).
If it is impossible to do this, output ""Impossible"".
Otherwise, in the first line output an integer m (): the number of tables.
Then output m lines, each line should start with an integer k -=\xe2\x80\x93 the number of foxes around that table, and then k numbers \xe2\x80\x94 indices of fox sitting around that table in clockwise order.
If there are several possible arrangements, output any of them.
In example 1, they can sit around one table, their ages are: 3-8-9-4, adjacent sums are: 11, 17, 13 and 7, all those integers are primes.
In example 2, it is not possible: the sum of 2+2 = 4 is not a prime number." "2300  x2207"
510D "Fox And Jumping" "bitmasks, brute force, dp, math" "Fox Ciel is playing a game. In this game there is an infinite long tape with cells indexed by integers (positive, negative and zero). At the beginning she is standing at the cell 0.
There are also n cards, each card has 2 attributes: length li and cost ci. If she pays ci dollars then she can apply i-th card. After applying i-th card she becomes able to make jumps of length li, i. e. from cell x to cell (x\xe2\x80\x89-\xe2\x80\x89li) or cell (x\xe2\x80\x89+\xe2\x80\x89li).
She wants to be able to jump to any cell on the tape (possibly, visiting some intermediate cells). For achieving this goal, she wants to buy some cards, paying as little money as possible. 
If this is possible, calculate the minimal cost.
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300), number of cards.
The second line contains n numbers li (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), the jump lengths of cards.
The third line contains n numbers ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the costs of cards.
If it is impossible to buy some cards and become able to jump to any cell, output -1. Otherwise output the minimal cost of buying such set of cards.
In first sample test, buying one card is not enough: for example, if you buy a card with length 100, you can\'t jump to any cell whose index is not a multiple of 100. The best way is to buy first and second card, that will make you be able to jump to any cell.
In the second sample test, even if you buy all cards, you can\'t jump to any cell whose index is not a multiple of 10, so you should output -1." "1900  x5612"
510C "Fox And Names" "dfs and similar, graphs, sortings" "Fox Ciel is going to publish a paper on FOCS (Foxes Operated Computer Systems, pronounce: ""Fox""). She heard a rumor: the authors list on the paper is always sorted in the lexicographical order. 
After checking some examples, she found out that sometimes it wasn\'t true. On some papers authors\' names weren\'t sorted in lexicographical order in normal sense. But it was always true that after some modification of the order of letters in alphabet, the order of authors becomes lexicographical!
She wants to know, if there exists an order of letters in Latin alphabet such that the names on the paper she is submitting are following in the lexicographical order. If so, you should find out any such order.
Lexicographical order is defined in following way. When we compare s and t, first we find the leftmost position with differing characters: si\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89ti. If there is no such position (i. e. s is a prefix of t or vice versa) the shortest string is less. Otherwise, we compare characters si and ti according to their order in alphabet.
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100): number of names.
Each of the following n lines contain one string namei (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|namei|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), the i-th name. Each name contains only lowercase Latin letters. All names are different.
If there exists such order of letters that the given names are sorted lexicographically, output any such order as a permutation of characters \'a\'\xe2\x80\x93\'z\' (i. e. first output the first letter of the modified alphabet, then the second, and so on).
Otherwise output a single word ""Impossible"" (without quotes)." "1600  x16508"
510B "Fox And Two Dots" "dfs and similar" "Fox Ciel is playing a mobile puzzle game called ""Two Dots"". The basic levels are played on a board of size n\xe2\x80\x89\xc3\x97\xe2\x80\x89m cells, like this:
Each cell contains a dot that has some color. We will use different uppercase Latin characters to express different colors.
The key of this game is to find a cycle that contain dots of same color. Consider 4 blue dots on the picture forming a circle as an example. Formally, we call a sequence of dots d1,\xe2\x80\x89d2,\xe2\x80\x89...,\xe2\x80\x89dk a cycle if and only if it meets the following condition:
Determine if there exists a cycle on the field.
The first line contains two integers n and m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950): the number of rows and columns of the board.
Then n lines follow, each line contains a string consisting of m characters, expressing colors of dots in each line. Each character is an uppercase Latin letter.
Output ""Yes"" if there exists a cycle, and ""No"" otherwise.
In first sample test all \'A\' form a cycle.
In second sample there is no such cycle.
The third sample is displayed on the picture above (\'Y\' = Yellow, \'B\' = Blue, \'R\' = Red)." "1500  x14096"
510A "Fox And Snake" implementation "Fox Ciel starts to learn programming. The first task is drawing a fox! However, that turns out to be too hard for a beginner, so she decides to draw a snake instead.
A snake is a pattern on a n by m table. Denote c-th cell of r-th row as (r,\xe2\x80\x89c). The tail of the snake is located at (1,\xe2\x80\x891), then it\'s body extends to (1,\xe2\x80\x89m), then goes down 2 rows to (3,\xe2\x80\x89m), then goes left to (3,\xe2\x80\x891) and so on.
Your task is to draw this snake for Fox Ciel: the empty cells should be represented as dot characters (\'.\') and the snake cells should be filled with number signs (\'#\').
Consider sample tests in order to understand the snake pattern.
The only line contains two integers: n and m (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950). 
n is an odd number.
Output n lines. Each line should contain a string consisting of m characters. Do not output spaces." "800  x84862"
509F "Progress Monitoring" "dp, trees" "Programming teacher Dmitry Olegovich is going to propose the following task for one of his tests for students:
You are given a tree T with n vertices, specified by its adjacency matrix a[1... n,\xe2\x80\x891... n]. What is the output of the following pseudocode?
In order to simplify the test results checking procedure, Dmitry Olegovich decided to create a tree T such that the result is his favorite sequence b. On the other hand, Dmitry Olegovich doesn\'t want to provide students with same trees as input, otherwise they might cheat. That\'s why Dmitry Olegovich is trying to find out the number of different trees T such that the result of running the above pseudocode with T as input is exactly the sequence b. Can you help him?
Two trees with n vertices are called different if their adjacency matrices a1 and a2 are different, i. e. there exists a pair (i,\xe2\x80\x89j), such that 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and a1[i][j]\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89a2[i][j].
The first line contains the positive integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500) \xe2\x80\x94 the length of sequence b. 
The second line contains n positive integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). It is guaranteed that b is a permutation, or in other words, each of the numbers 1,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89n appears exactly once in the sequence b. Also it is guaranteed that b1\xe2\x80\x89=\xe2\x80\x891.
Output the number of trees satisfying the conditions above modulo 109\xe2\x80\x89+\xe2\x80\x897." "2300  x1075"
509E "Pretty Song" "math, strings" "When Sasha was studying in the seventh grade, he started listening to music a lot. In order to evaluate which songs he likes more, he introduced the notion of the song\'s prettiness. The title of the song is a word consisting of uppercase Latin letters. The prettiness of the song is the prettiness of its title.
Let\'s define the simple prettiness of a word as the ratio of the number of vowels in the word to the number of all letters in the word.
Let\'s define the prettiness of a word as the sum of simple prettiness of all the substrings of the word.
More formally, let\'s define the function vowel(c) which is equal to 1, if c is a vowel, and to 0 otherwise. Let si be the i-th character of string s, and si..j be the substring of word s, staring at the i-th character and ending at the j-th character (sisi\xe2\x80\x89+\xe2\x80\x891... sj, i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j).
Then the simple prettiness of s is defined by the formula:
The prettiness of s equals 
Find the prettiness of the given song title.
We assume that the vowels are I,\xe2\x80\x89E,\xe2\x80\x89A,\xe2\x80\x89O,\xe2\x80\x89U,\xe2\x80\x89Y.
The input contains a single string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7105) \xe2\x80\x94 the title of the song.
Print the prettiness of the song with the absolute or relative error of at most 10\xe2\x80\x89-\xe2\x80\x896.
In the first sample all letters are vowels. The simple prettiness of each substring is 1. The word of length 7 has 28 substrings. So, the prettiness of the song equals to 28." "2000  x1802"
509D "Restoring Numbers" "constructive algorithms, math" "Vasya had two arrays consisting of non-negative integers: a of size n and b of size m. Vasya chose a positive integer k and created an n\xe2\x80\x89\xc3\x97\xe2\x80\x89m matrix v using the following formula:
Vasya wrote down matrix v on a piece of paper and put it in the table.
A year later Vasya was cleaning his table when he found a piece of paper containing an n\xe2\x80\x89\xc3\x97\xe2\x80\x89m matrix w. He remembered making a matrix one day by the rules given above but he was not sure if he had found the paper with the matrix v from those days. Your task is to find out if the matrix w that you\'ve found could have been obtained by following these rules and if it could, then for what numbers k,\xe2\x80\x89a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an,\xe2\x80\x89b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bm it is possible.
The first line contains integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), separated by a space \xe2\x80\x94 the number of rows and columns in the found matrix, respectively. 
The i-th of the following lines contains numbers wi,\xe2\x80\x891,\xe2\x80\x89wi,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89wi,\xe2\x80\x89m (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), separated by spaces \xe2\x80\x94 the elements of the i-th row of matrix w.
If the matrix w could not have been obtained in the manner described above, print ""NO"" (without quotes) in the single line of output.
Otherwise, print four lines.
In the first line print ""YES"" (without quotes).
In the second line print an integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018). Note that each element of table w should be in range between 0 and k\xe2\x80\x89-\xe2\x80\x891 inclusively.
In the third line print n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018), separated by spaces.
In the fourth line print m integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bm (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018), separated by spaces.
By  we denote the remainder of integer division of b by c.
It is guaranteed that if there exists some set of numbers k,\xe2\x80\x89a1,\xe2\x80\x89...,\xe2\x80\x89an,\xe2\x80\x89b1,\xe2\x80\x89...,\xe2\x80\x89bm, that you could use to make matrix w, then there also exists a set of numbers that meets the limits 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018 in the output format. In other words, these upper bounds are introduced only for checking convenience purposes." "2200  x760"
509C "Sums of Digits" "dp, greedy, implementation" "Vasya had a strictly increasing sequence of positive integers a1, ..., an. Vasya used it to build a new sequence b1, ..., bn, where bi is the sum of digits of ai\'s decimal representation. Then sequence ai got lost and all that remained is sequence bi.
Vasya wonders what the numbers ai could be like. Of all the possible options he likes the one sequence with the minimum possible last number an. Help Vasya restore the initial sequence.
It is guaranteed that such a sequence always exists.
The first line contains a single integer number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300).
Next n lines contain integer numbers b1, ..., bn  \xe2\x80\x94 the required sums of digits. All bi belong to the range 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300.
Print n integer numbers, one per line \xe2\x80\x94 the correct option for numbers ai, in order of following in sequence. The sequence should be strictly increasing. The sum of digits of the i-th number should be equal to bi. 
If there are multiple sequences with least possible number an, print any of them. Print the numbers without leading zeroes." "2000  x2101"
509B "Painting Pebbles" "constructive algorithms, greedy, implementation" "There are n piles of pebbles on the table, the i-th pile contains ai pebbles. Your task is to paint each pebble using one of the k given colors so that for each color c and any two piles i and j the difference between the number of pebbles of color c in pile i and number of pebbles of color c in pile j is at most one.
In other words, let\'s say that bi,\xe2\x80\x89c is the number of pebbles of color c in the i-th pile. Then for any 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n the following condition must be satisfied |bi,\xe2\x80\x89c\xe2\x80\x89-\xe2\x80\x89bj,\xe2\x80\x89c|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891. It isn\'t necessary to use all k colors: if color c hasn\'t been used in pile i, then bi,\xe2\x80\x89c is considered to be zero.
The first line of the input contains positive integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), separated by a space \xe2\x80\x94 the number of piles and the number of colors respectively.
The second line contains n positive integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) denoting number of pebbles in each of the piles.
If there is no way to paint the pebbles satisfying the given condition, output ""NO"" (without quotes) .
Otherwise in the first line output ""YES"" (without quotes). Then n lines should follow, the i-th of them should contain ai space-separated integers. j-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai) of these integers should be equal to the color of the j-th pebble in the i-th pile. If there are several possible answers, you may output any of them." "1300  x9641"
509A "Maximum in Table" "brute force, implementation" "An n\xe2\x80\x89\xc3\x97\xe2\x80\x89n table a is defined as follows:
These conditions define all the values in the table.
You are given a number n. You need to determine the maximum value in the n\xe2\x80\x89\xc3\x97\xe2\x80\x89n table defined by the rules above.
The only line of input contains a positive integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910) \xe2\x80\x94 the number of rows and columns of the table.
Print a single line containing a positive integer m \xe2\x80\x94 the maximum value in the table.
In the second test the rows of the table look as follows: " "800  x38625"
508E "Arthur and Brackets" "dp, greedy" "Notice that the memory limit is non-standard.
Recently Arthur and Sasha have studied correct bracket sequences. Arthur understood this topic perfectly and become so amazed about correct bracket sequences, so he even got himself a favorite correct bracket sequence of length 2n. Unlike Arthur, Sasha understood the topic very badly, and broke Arthur\'s favorite correct bracket sequence just to spite him.
All Arthur remembers about his favorite sequence is for each opening parenthesis (\'(\') the approximate distance to the corresponding closing one (\')\'). For the i-th opening bracket he remembers the segment [li,\xe2\x80\x89ri], containing the distance to the corresponding closing bracket.
Formally speaking, for the i-th opening bracket (in order from left to right) we know that the difference of its position and the position of the corresponding closing bracket belongs to the segment [li,\xe2\x80\x89ri].
Help Arthur restore his favorite correct bracket sequence!
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89600), the number of opening brackets in Arthur\'s favorite correct bracket sequence. 
Next n lines contain numbers li and ri (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89<\xe2\x80\x892n), representing the segment where lies the distance from the i-th opening bracket and the corresponding closing one. 
The descriptions of the segments are given in the order in which the opening brackets occur in Arthur\'s favorite sequence if we list them from left to right.
If it is possible to restore the correct bracket sequence by the given data, print any possible choice.
If Arthur got something wrong, and there are no sequences corresponding to the given information, print a single line ""IMPOSSIBLE"" (without the quotes)." "2200  x1761"
508D "Tanya and Password" "dfs and similar, graphs" "While dad was at work, a little girl Tanya decided to play with dad\'s password to his secret database. Dad\'s password is a string consisting of n\xe2\x80\x89+\xe2\x80\x892 characters. She has written all the possible n three-letter continuous substrings of the password on pieces of paper, one for each piece of paper, and threw the password out. Each three-letter substring was written the number of times it occurred in the password. Thus, Tanya ended up with n pieces of paper.
Then Tanya realized that dad will be upset to learn about her game and decided to restore the password or at least any string corresponding to the final set of three-letter strings. You have to help her in this difficult task. We know that dad\'s password consisted of lowercase and uppercase letters of the Latin alphabet and digits. Uppercase and lowercase letters of the Latin alphabet are considered distinct.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105), the number of three-letter substrings Tanya got. 
Next n lines contain three letters each, forming the substring of dad\'s password. Each character in the input is a lowercase or uppercase Latin letter or a digit.
If Tanya made a mistake somewhere during the game and the strings that correspond to the given set of substrings don\'t exist, print ""NO"". 
If it is possible to restore the string that corresponds to given set of substrings, print ""YES"", and then print any suitable password option." "2500  x3439"
508C "Anya and Ghosts" "constructive algorithms, greedy" "Anya loves to watch horror movies. In the best traditions of horror, she will be visited by m ghosts tonight. Anya has lots of candles prepared for the visits, each candle can produce light for exactly t seconds. It takes the girl one second to light one candle. More formally, Anya can spend one second to light one candle, then this candle burns for exactly t seconds and then goes out and can no longer be used.
For each of the m ghosts Anya knows the time at which it comes: the i-th visit will happen wi seconds after midnight, all wi\'s are distinct. Each visit lasts exactly one second.
What is the minimum number of candles Anya should use so that during each visit, at least r candles are burning? Anya can start to light a candle at any time that is integer number of seconds from midnight, possibly, at the time before midnight. That means, she can start to light a candle integer number of seconds before midnight or integer number of seconds after a midnight, or in other words in any integer moment of time.
The first line contains three integers m, t, r (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m,\xe2\x80\x89t,\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300), representing the number of ghosts to visit Anya, the duration of a candle\'s burning and the minimum number of candles that should burn during each visit. 
The next line contains m space-separated numbers wi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300), the i-th of them repesents at what second after the midnight the i-th ghost will come. All wi\'s are distinct, they follow in the strictly increasing order.
If it is possible to make at least r candles burn during each visit, then print the minimum number of candles that Anya needs to light for that.
If that is impossible, print \xe2\x80\x89-\xe2\x80\x891.
Anya can start lighting a candle in the same second with ghost visit. But this candle isn\'t counted as burning at this visit.
It takes exactly one second to light up a candle and only after that second this candle is considered burning; it means that if Anya starts lighting candle at moment x, candle is buring from second x + 1 to second x + t inclusively.
In the first sample test three candles are enough. For example, Anya can start lighting them at the 3-rd, 5-th and 7-th seconds after the midnight.
In the second sample test one candle is enough. For example, Anya can start lighting it one second before the midnight.
In the third sample test the answer is \xe2\x80\x89-\xe2\x80\x891, since during each second at most one candle can burn but Anya needs three candles to light up the room at the moment when the ghost comes." "1600  x4474"
508B "Anton and currency you all know" "greedy, math, strings" "Berland, 2016. The exchange rate of currency you all know against the burle has increased so much that to simplify the calculations, its fractional part was neglected and the exchange rate is now assumed to be an integer.
Reliable sources have informed the financier Anton of some information about the exchange rate of currency you all know against the burle for tomorrow. Now Anton knows that tomorrow the exchange rate will be an even number, which can be obtained from the present rate by swapping exactly two distinct digits in it. Of all the possible values that meet these conditions, the exchange rate for tomorrow will be the maximum possible. It is guaranteed that today the exchange rate is an odd positive integer n. Help Anton to determine the exchange rate of currency you all know for tomorrow!
The first line contains an odd positive integer n \xe2\x80\x94 the exchange rate of currency you all know for today. The length of number n\'s representation is within range from 2 to 105, inclusive. The representation of n doesn\'t contain any leading zeroes.
If the information about tomorrow\'s exchange rate is inconsistent, that is, there is no integer that meets the condition, print \xe2\x80\x89-\xe2\x80\x891.
Otherwise, print the exchange rate of currency you all know against the burle for tomorrow. This should be the maximum possible number of those that are even and that are obtained from today\'s exchange rate by swapping exactly two digits. Exchange rate representation should not contain leading zeroes." "1300  x22717"
508A "Pasha and Pixels" "brute force" "Pasha loves his phone and also putting his hair up... But the hair is now irrelevant.
Pasha has installed a new game to his phone. The goal of the game is following. There is a rectangular field consisting of n row with m pixels in each row. Initially, all the pixels are colored white. In one move, Pasha can choose any pixel and color it black. In particular, he can choose the pixel that is already black, then after the boy\'s move the pixel does not change, that is, it remains black. Pasha loses the game when a 2\xe2\x80\x89\xc3\x97\xe2\x80\x892 square consisting of black pixels is formed. 
Pasha has made a plan of k moves, according to which he will paint pixels. Each turn in his plan is represented as a pair of numbers i and j, denoting respectively the row and the column of the pixel to be colored on the current move.
Determine whether Pasha loses if he acts in accordance with his plan, and if he does, on what move the 2\xe2\x80\x89\xc3\x97\xe2\x80\x892 square consisting of black pixels is formed.
The first line of the input contains three integers n,\xe2\x80\x89m,\xe2\x80\x89k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of rows, the number of columns and the number of moves that Pasha is going to perform. 
The next k lines contain Pasha\'s moves in the order he makes them. Each line contains two integers i and j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m), representing the row number and column number of the pixel that was painted during a move.
If Pasha loses, print the number of the move when the 2\xe2\x80\x89\xc3\x97\xe2\x80\x892 square consisting of black pixels is formed.
If Pasha doesn\'t lose, that is, no 2\xe2\x80\x89\xc3\x97\xe2\x80\x892 square consisting of black pixels is formed during the given k moves, print 0." "1100  x7962"
507E "Breaking Good" "dfs and similar, dp, graphs, shortest paths" "Breaking Good is a new video game which a lot of gamers want to have. There is a certain level in the game that is really difficult even for experienced gamers.
Walter William, the main character of the game, wants to join a gang called Los Hermanos (The Brothers). The gang controls the whole country which consists of n cities with m bidirectional roads connecting them. There is no road is connecting a city to itself and for any two cities there is at most one road between them. The country is connected, in the other words, it is possible to reach any city from any other city using the given roads. 
The roads aren\'t all working. There are some roads which need some more work to be performed to be completely functioning.
The gang is going to rob a bank! The bank is located in city 1. As usual, the hardest part is to escape to their headquarters where the police can\'t get them. The gang\'s headquarters is in city n. To gain the gang\'s trust, Walter is in charge of this operation, so he came up with a smart plan.
First of all the path which they are going to use on their way back from city 1 to their headquarters n must be as short as possible, since it is important to finish operation as fast as possible.
Then, gang has to blow up all other roads in country that don\'t lay on this path, in order to prevent any police reinforcements. In case of non-working road, they don\'t have to blow up it as it is already malfunctional. 
If the chosen path has some roads that doesn\'t work they\'ll have to repair those roads before the operation.
Walter discovered that there was a lot of paths that satisfied the condition of being shortest possible so he decided to choose among them a path that minimizes the total number of affected roads (both roads that have to be blown up and roads to be repaired).
Can you help Walter complete his task and gain the gang\'s trust?
The first line of input contains two integers n,\xe2\x80\x89m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, ), the number of cities and number of roads respectively.
In following m lines there are descriptions of roads. Each description consists of three integers x,\xe2\x80\x89y,\xe2\x80\x89z (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ) meaning that there is a road connecting cities number x and y. If z\xe2\x80\x89=\xe2\x80\x891, this road is working, otherwise it is not.
In the first line output one integer k, the minimum possible number of roads affected by gang.
In the following k lines output three integers describing roads that should be affected. Each line should contain three integers x,\xe2\x80\x89y,\xe2\x80\x89z (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ), cities connected by a road and the new state of a road. z\xe2\x80\x89=\xe2\x80\x891 indicates that the road between cities x and y should be repaired and z\xe2\x80\x89=\xe2\x80\x890 means that road should be blown up. 
You may output roads in any order. Each affected road should appear exactly once. You may output cities connected by a single road in any order. If you output a road, it\'s original state should be different from z.
After performing all operations accroding to your plan, there should remain working only roads lying on some certain shortest past between city 1 and n.
If there are multiple optimal answers output any.
In the first test the only path is 1\xe2\x80\x89-\xe2\x80\x892
In the second test the only shortest path is 1\xe2\x80\x89-\xe2\x80\x893\xe2\x80\x89-\xe2\x80\x894
In the third test there are multiple shortest paths but the optimal is 1\xe2\x80\x89-\xe2\x80\x894\xe2\x80\x89-\xe2\x80\x896\xe2\x80\x89-\xe2\x80\x898" "2100  x2919"
507D "The Maths Lecture" "dp, implementation" "Amr doesn\'t like Maths as he finds it really boring, so he usually sleeps in Maths lectures. But one day the teacher suspected that Amr is sleeping and asked him a question to make sure he wasn\'t.
First he gave Amr two positive integers n and k. Then he asked Amr, how many integer numbers x\xe2\x80\x89>\xe2\x80\x890 exist such that:
As the answer to this question may be pretty huge the teacher asked Amr to output only its remainder modulo a number m.
Can you help Amr escape this embarrassing situation?
Input consists of three integers n,\xe2\x80\x89k,\xe2\x80\x89m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the required number modulo m.
A suffix of a string S is a non-empty string that can be obtained by removing some number (possibly, zero) of first characters from S." "2200  x1778"
507C "Guess Your Way Out!" "implementation, math, trees" "Amr bought a new video game ""Guess Your Way Out!"". The goal of the game is to find an exit from the maze that looks like a perfect binary tree of height h. The player is initially standing at the root of the tree and the exit from the tree is located at some leaf node. 
Let\'s index all the leaf nodes from the left to the right from 1 to 2h. The exit is located at some node n where 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892h, the player doesn\'t know where the exit is so he has to guess his way out!
Amr follows simple algorithm to choose the path. Let\'s consider infinite command string ""LRLRLRLRL..."" (consisting of alternating characters \'L\' and \'R\'). Amr sequentially executes the characters of the string using following rules:
Now Amr wonders, if he follows this algorithm, how many nodes he is going to visit before reaching the exit?
Input consists of two integers h,\xe2\x80\x89n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89h\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892h).
Output a single integer representing the number of nodes (excluding the exit node) Amr is going to visit before reaching the exit by following this algorithm.
A perfect binary tree of height h is a binary tree consisting of h\xe2\x80\x89+\xe2\x80\x891 levels. Level 0 consists of a single node called root, level h consists of 2h nodes called leaves. Each node that is not a leaf has exactly two children, left and right one. 
Following picture illustrates the sample test number 3. Nodes are labeled according to the order of visit.
" "1700  x4348"
507B "Amr and Pins" "geometry, math" "Amr loves Geometry. One day he came up with a very interesting problem.
Amr has a circle of radius r and center in point (x,\xe2\x80\x89y). He wants the circle center to be in new position (x\',\xe2\x80\x89y\').
In one step Amr can put a pin to the border of the circle in a certain point, then rotate the circle around that pin by any angle and finally remove the pin.
Help Amr to achieve his goal in minimum number of steps.
Input consists of 5 space-separated integers r, x, y, x\' y\' (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, \xe2\x80\x89-\xe2\x80\x89105\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y,\xe2\x80\x89x\',\xe2\x80\x89y\'\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), circle radius, coordinates of original center of the circle and coordinates of destination center of the circle respectively.
Output a single integer \xe2\x80\x94 minimum number of steps required to move the center of the circle to the destination point.
In the first sample test the optimal way is to put a pin at point (0,\xe2\x80\x892) and rotate the circle by 180 degrees counter-clockwise (or clockwise, no matter).
" "1400  x24807"
507A "Amr and Music" "greedy, implementation, sortings" "Amr is a young coder who likes music a lot. He always wanted to learn how to play music but he was busy coding so he got an idea.
Amr has n instruments, it takes ai days to learn i-th instrument. Being busy, Amr dedicated k days to learn how to play the maximum possible number of instruments.
Amr asked for your help to distribute his free days between instruments so that he can achieve his goal.
The first line contains two numbers n, k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910\xe2\x80\x89000), the number of instruments and number of days respectively.
The second line contains n integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), representing number of days required to learn the i-th instrument.
In the first line output one integer m representing the maximum number of instruments Amr can learn.
In the second line output m space-separated integers: the indices of instruments to be learnt. You may output indices in any order.
if there are multiple optimal solutions output any. It is not necessary to use all days for studying.
In the first test Amr can learn all 4 instruments.
In the second test other possible solutions are: {2,\xe2\x80\x893,\xe2\x80\x895} or {3,\xe2\x80\x894,\xe2\x80\x895}.
In the third test Amr doesn\'t have enough time to learn the only presented instrument." "1000  x18532"
506E "Mr. Kitayuta's Gift" "combinatorics, dp, matrices, strings" "Mr. Kitayuta has kindly given you a string s consisting of lowercase English letters. You are asked to insert exactly n lowercase English letters into s to make it a palindrome. (A palindrome is a string that reads the same forward and backward. For example, ""noon"", ""testset"" and ""a"" are all palindromes, while ""test"" and ""kitayuta"" are not.) You can choose any n lowercase English letters, and insert each of them to any position of s, possibly to the beginning or the end of s. You have to insert exactly n letters even if it is possible to turn s into a palindrome by inserting less than n letters.
Find the number of the palindromes that can be obtained in this way, modulo 10007.
The first line contains a string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200). Each character in s is a lowercase English letter.
The second line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the number of the palindromes that can be obtained, modulo 10007.
For the first sample, you can obtain the palindrome ""reviver"" by inserting \'r\' to the end of ""revive"".
For the second sample, the following 28 palindromes can be obtained: ""adada"", ""adbda"", ..., ""adzda"", ""dadad"" and ""ddadd""." "3000  x755"
506D "Mr. Kitayuta's Colorful Graph" "brute force, dfs and similar, dsu, graphs" "Mr. Kitayuta has just bought an undirected graph with n vertices and m edges. The vertices of the graph are numbered from 1 to n. Each edge, namely edge i, has a color ci, connecting vertex ai and bi.
Mr. Kitayuta wants you to process the following q queries.
In the i-th query, he gives you two integers - ui and vi.
Find the number of the colors that satisfy the following condition: the edges of that color connect vertex ui and vertex vi directly or indirectly.
The first line of the input contains space-separated two integers - n and m(2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), denoting the number of the vertices and the number of the edges, respectively.
The next m lines contain space-separated three integers - ai, bi(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89<\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and ci(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m). Note that there can be multiple edges between two vertices. However, there are no multiple edges of the same color between two vertices, that is, if i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j,\xe2\x80\x89(ai,\xe2\x80\x89bi,\xe2\x80\x89ci)\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89(aj,\xe2\x80\x89bj,\xe2\x80\x89cj).
The next line contains a integer- q(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), denoting the number of the queries.
Then follows q lines, containing space-separated two integers - ui and vi(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ui,\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). It is guaranteed that ui\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89vi.
For each query, print the answer in a separate line.
Let\'s consider the first sample. " "2400  x2180"
505E "Mr. Kitayuta vs. Bamboos" "binary search, greedy" "Mr. Kitayuta\'s garden is planted with n bamboos. (Bamboos are tall, fast-growing tropical plants with hollow stems.) At the moment, the height of the i-th bamboo is hi meters, and it grows ai meters at the end of each day. 
Actually, Mr. Kitayuta hates these bamboos. He once attempted to cut them down, but failed because their stems are too hard. Mr. Kitayuta have not given up, however. He has crafted Magical Hammer with his intelligence to drive them into the ground.
He can use Magical Hammer at most k times during each day, due to his limited Magic Power. Each time he beat a bamboo with Magical Hammer, its height decreases by p meters. If the height would become negative by this change, it will become 0 meters instead (it does not disappear). In other words, if a bamboo whose height is h meters is beaten with Magical Hammer, its new height will be max(0,\xe2\x80\x89h\xe2\x80\x89-\xe2\x80\x89p) meters. It is possible to beat the same bamboo more than once in a day.
Mr. Kitayuta will fight the bamboos for m days, starting today. His purpose is to minimize the height of the tallest bamboo after m days (that is, m iterations of ""Mr. Kitayuta beats the bamboos and then they grow""). Find the lowest possible height of the tallest bamboo after m days.
The first line of the input contains four space-separated integers n, m, k and p (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). They represent the number of the bamboos in Mr. Kitayuta\'s garden, the duration of Mr. Kitayuta\'s fight in days, the maximum number of times that Mr. Kitayuta beat the bamboos during each day, and the power of Magic Hammer, respectively.
The following n lines describe the properties of the bamboos. The i-th of them (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) contains two space-separated integers hi and ai (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), denoting the initial height and the growth rate of the i-th bamboo, respectively.
Print the lowest possible height of the tallest bamboo after m days." "2900  x1407"
505D "Mr. Kitayuta's Technology" "dfs and similar" "Shuseki Kingdom is the world\'s leading nation for innovation and technology. There are n cities in the kingdom, numbered from 1 to n.
Thanks to Mr. Kitayuta\'s research, it has finally become possible to construct teleportation pipes between two cities. A teleportation pipe will connect two cities unidirectionally, that is, a teleportation pipe from city x to city y cannot be used to travel from city y to city x. The transportation within each city is extremely developed, therefore if a pipe from city x to city y and a pipe from city y to city z are both constructed, people will be able to travel from city x to city z instantly.
Mr. Kitayuta is also involved in national politics. He considers that the transportation between the m pairs of city (ai,\xe2\x80\x89bi) (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) is important. He is planning to construct teleportation pipes so that for each important pair (ai,\xe2\x80\x89bi), it will be possible to travel from city ai to city bi by using one or more teleportation pipes (but not necessarily from city bi to city ai). Find the minimum number of teleportation pipes that need to be constructed. So far, no teleportation pipe has been constructed, and there is no other effective transportation between cities.
The first line contains two space-separated integers n and m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), denoting the number of the cities in Shuseki Kingdom and the number of the important pairs, respectively.
The following m lines describe the important pairs. The i-th of them (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) contains two space-separated integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi), denoting that it must be possible to travel from city ai to city bi by using one or more teleportation pipes (but not necessarily from city bi to city ai). It is guaranteed that all pairs (ai,\xe2\x80\x89bi) are distinct.
Print the minimum required number of teleportation pipes to fulfill Mr. Kitayuta\'s purpose.
For the first sample, one of the optimal ways to construct pipes is shown in the image below: 
For the second sample, one of the optimal ways is shown below: " "2200  x2543"
505C "Mr. Kitayuta, the Treasure Hunter" "dfs and similar, dp, two pointers" "The Shuseki Islands are an archipelago of 30001 small islands in the Yutampo Sea. The islands are evenly spaced along a line, numbered from 0 to 30000 from the west to the east. These islands are known to contain many treasures. There are n gems in the Shuseki Islands in total, and the i-th gem is located on island pi.
Mr. Kitayuta has just arrived at island 0. With his great jumping ability, he will repeatedly perform jumps between islands to the east according to the following process: 

Mr. Kitayuta will collect the gems on the islands visited during the process. Find the maximum number of gems that he can collect.



The first line of the input contains two space-separated integers n and d (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930000), denoting the number of the gems in the Shuseki Islands and the length of the Mr. Kitayuta\'s first jump, respectively.
The next n lines describe the location of the gems. The i-th of them (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) contains a integer pi (d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89...\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pn\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930000), denoting the number of the island that contains the i-th gem.



Print the maximum number of gems that Mr. Kitayuta can collect.







In the first sample, the optimal route is 0 \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 10 (+1 gem) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 19 \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 27 (+2 gems) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89...\x01
In the second sample, the optimal route is 0 \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 8 \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 15 \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 21\xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 28 (+1 gem) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 36 (+1 gem) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 45 (+1 gem) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 55 (+1 gem) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 66 (+1 gem) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 78 (+1 gem) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89...
In the third sample, the optimal route is 0 \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 7 \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 13 \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 18 (+1 gem) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 24 (+2 gems) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 30 (+1 gem) \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89..." "1900  x6423"
505B "Mr. Kitayuta's Colorful Graph" "dfs and similar, dp, dsu, graphs" "Mr. Kitayuta has just bought an undirected graph with n vertices and m edges. The vertices of the graph are numbered from 1 to n. Each edge, namely edge i, has a color ci, connecting vertex ai and bi.
Mr. Kitayuta wants you to process the following q queries.
In the i-th query, he gives you two integers - ui and vi.
Find the number of the colors that satisfy the following condition: the edges of that color connect vertex ui and vertex vi directly or indirectly.
The first line of the input contains space-separated two integers - n and m(2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), denoting the number of the vertices and the number of the edges, respectively.
The next m lines contain space-separated three integers - ai, bi(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89<\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and ci(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m). Note that there can be multiple edges between two vertices. However, there are no multiple edges of the same color between two vertices, that is, if i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j,\xe2\x80\x89(ai,\xe2\x80\x89bi,\xe2\x80\x89ci)\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89(aj,\xe2\x80\x89bj,\xe2\x80\x89cj).
The next line contains a integer- q(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), denoting the number of the queries.
Then follows q lines, containing space-separated two integers - ui and vi(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ui,\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). It is guaranteed that ui\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89vi.
For each query, print the answer in a separate line.
Let\'s consider the first sample. " "1400  x13153"
505A "Mr. Kitayuta's Gift" "brute force, implementation, strings" "Mr. Kitayuta has kindly given you a string s consisting of lowercase English letters. You are asked to insert exactly n lowercase English letters into s to make it a palindrome. (A palindrome is a string that reads the same forward and backward. For example, ""noon"", ""testset"" and ""a"" are all palindromes, while ""test"" and ""kitayuta"" are not.) You can choose any n lowercase English letters, and insert each of them to any position of s, possibly to the beginning or the end of s. You have to insert exactly n letters even if it is possible to turn s into a palindrome by inserting less than n letters.
Find the number of the palindromes that can be obtained in this way, modulo 10007.
The first line contains a string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200). Each character in s is a lowercase English letter.
The second line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the number of the palindromes that can be obtained, modulo 10007.
For the first sample, you can obtain the palindrome ""reviver"" by inserting \'r\' to the end of ""revive"".
For the second sample, the following 28 palindromes can be obtained: ""adada"", ""adbda"", ..., ""adzda"", ""dadad"" and ""ddadd""." "1100  x6687"
504E "Misha and LCP on Tree" "binary search, dfs and similar, hashing, string suffix structures, trees" "Misha has a tree with characters written on the vertices. He can choose two vertices s and t of this tree and write down characters of vertices lying on a path from s to t. We\'ll say that such string corresponds to pair (s,\xe2\x80\x89t).
Misha has m queries of type: you are given 4 vertices a, b, c, d; you need to find the largest common prefix of the strings that correspond to pairs (a,\xe2\x80\x89b) and (c,\xe2\x80\x89d). Your task is to help him.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300\xe2\x80\x89000) \xe2\x80\x94 the number of vertices in the tree.
Next follows a line consisting of n small English letters. The i-th character of the string corresponds to the character written on the i-th vertex. 
Next n\xe2\x80\x89-\xe2\x80\x891 lines contain information about edges. An edge is defined by a pair of integers u, v (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89u,\xe2\x80\x89v\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, u\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89v), separated by spaces.
The next line contains integer m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891\xe2\x80\x89000\xe2\x80\x89000) \xe2\x80\x94 the number of queries.
Next m lines contain information about queries. A query is defined by four integers a, b, c, d (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b,\xe2\x80\x89c,\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), separated by spaces.
For each query print the length of the largest common prefix on a separate line." "3000  x939"
504D "Misha and XOR" bitmasks "After Misha\'s birthday he had many large numbers left, scattered across the room. Now it\'s time to clean up and Misha needs to put them in a basket. He ordered this task to his pet robot that agreed to complete the task at certain conditions. Before the robot puts a number x to the basket, Misha should answer the question: is it possible to choose one or multiple numbers that already are in the basket, such that their XOR sum equals x? 
If the answer is positive, you also need to give the indexes of these numbers. If there are multiple options of choosing numbers, you are allowed to choose any correct option. After Misha\'s answer the robot puts the number to the basket.
Initially the basket is empty. Each integer you put in the basket takes some number. The first integer you put into the basket take number 0, the second integer takes number 1 and so on.
Misha needs to clean up the place as soon as possible but unfortunately, he isn\'t that good at mathematics. He asks you to help him.
The first line contains number m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000), showing how many numbers are scattered around the room.
The next m lines contain the numbers in the order in which the robot puts them in the basket. Each number is a positive integer strictly less than 10600 that doesn\'t contain leading zeroes. 
For each number either print a 0 on the corresponding line, if the number cannot be represented as a XOR sum of numbers that are in the basket, or print integer k showing how many numbers are in the representation and the indexes of these numbers. Separate the numbers by spaces. Each number can occur in the representation at most once.
The XOR sum of numbers is the result of bitwise sum of numbers modulo 2." "2700  x307"
501E "Misha and Palindrome Degree" "binary search, combinatorics, implementation" "Misha has an array of n integers indexed by integers from 1 to n. Let\'s define palindrome degree of array a as the number of such index pairs (l,\xe2\x80\x89r)(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), that the elements from the l-th to the r-th one inclusive can be rearranged in such a way that the whole array will be a palindrome. In other words, pair (l,\xe2\x80\x89r) should meet the condition that after some rearranging of numbers on positions from l to r, inclusive (it is allowed not to rearrange the numbers at all), for any 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n following condition holds: a[i]\xe2\x80\x89=\xe2\x80\x89a[n\xe2\x80\x89-\xe2\x80\x89i\xe2\x80\x89+\xe2\x80\x891]. 
Your task is to find the palindrome degree of Misha\'s array.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line contains n positive integers a[i] (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a[i]\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), separated by spaces \xe2\x80\x94 the elements of Misha\'s array.
In a single line print the answer to the problem.
In the first sample test any possible pair (l,\xe2\x80\x89r) meets the condition.
In the third sample test following pairs (1,\xe2\x80\x893),\xe2\x80\x89(1,\xe2\x80\x894),\xe2\x80\x89(1,\xe2\x80\x895),\xe2\x80\x89(2,\xe2\x80\x895) meet the condition." "2500  x917"
501D "Misha and Permutations Summation" "data structures" "Let\'s define the sum of two permutations p and q of numbers 0,\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89(n\xe2\x80\x89-\xe2\x80\x891) as permutation , where Perm(x) is the x-th lexicographically permutation of numbers 0,\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89(n\xe2\x80\x89-\xe2\x80\x891) (counting from zero), and Ord(p) is the number of permutation p in the lexicographical order.
For example, Perm(0)\xe2\x80\x89=\xe2\x80\x89(0,\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x892,\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891), Perm(n!\xe2\x80\x89-\xe2\x80\x891)\xe2\x80\x89=\xe2\x80\x89(n\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x891,\xe2\x80\x890)
Misha has two permutations, p and q. Your task is to find their sum.
Permutation a\xe2\x80\x89=\xe2\x80\x89(a0,\xe2\x80\x89a1,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891) is called to be lexicographically smaller than permutation b\xe2\x80\x89=\xe2\x80\x89(b0,\xe2\x80\x89b1,\xe2\x80\x89...,\xe2\x80\x89bn\xe2\x80\x89-\xe2\x80\x891), if for some k following conditions hold: a0\xe2\x80\x89=\xe2\x80\x89b0,\xe2\x80\x89a1\xe2\x80\x89=\xe2\x80\x89b1,\xe2\x80\x89...,\xe2\x80\x89ak\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89=\xe2\x80\x89bk\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89ak\xe2\x80\x89<\xe2\x80\x89bk.
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200\xe2\x80\x89000).
The second line contains n distinct integers from 0 to n\xe2\x80\x89-\xe2\x80\x891, separated by a space, forming permutation p.
The third line contains n distinct integers from 0 to n\xe2\x80\x89-\xe2\x80\x891, separated by spaces, forming permutation q.
Print n distinct integers from 0 to n\xe2\x80\x89-\xe2\x80\x891, forming the sum of the given permutations. Separate the numbers by spaces.
Permutations of numbers from 0 to 1 in the lexicographical order: (0,\xe2\x80\x891),\xe2\x80\x89(1,\xe2\x80\x890).
In the first sample Ord(p)\xe2\x80\x89=\xe2\x80\x890 and Ord(q)\xe2\x80\x89=\xe2\x80\x890, so the answer is .
In the second sample Ord(p)\xe2\x80\x89=\xe2\x80\x890 and Ord(q)\xe2\x80\x89=\xe2\x80\x891, so the answer is .
Permutations of numbers from 0 to 2 in the lexicographical order: (0,\xe2\x80\x891,\xe2\x80\x892),\xe2\x80\x89(0,\xe2\x80\x892,\xe2\x80\x891),\xe2\x80\x89(1,\xe2\x80\x890,\xe2\x80\x892),\xe2\x80\x89(1,\xe2\x80\x892,\xe2\x80\x890),\xe2\x80\x89(2,\xe2\x80\x890,\xe2\x80\x891),\xe2\x80\x89(2,\xe2\x80\x891,\xe2\x80\x890).
In the third sample Ord(p)\xe2\x80\x89=\xe2\x80\x893 and Ord(q)\xe2\x80\x89=\xe2\x80\x895, so the answer is ." "2000  x2423"
501C "Misha and Forest" "constructive algorithms, data structures, greedy, sortings, trees" "Let\'s define a forest as a non-directed acyclic graph (also without loops and parallel edges). One day Misha played with the forest consisting of n vertices. For each vertex v from 0 to n\xe2\x80\x89-\xe2\x80\x891 he wrote down two integers, degreev and sv, were the first integer is the number of vertices adjacent to vertex v, and the second integer is the XOR sum of the numbers of vertices adjacent to v (if there were no adjacent vertices, he wrote down 0). 
Next day Misha couldn\'t remember what graph he initially had. Misha has values degreev and sv left, though. Help him find the number of edges and the edges of the initial graph. It is guaranteed that there exists a forest that corresponds to the numbers written by Misha.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89216), the number of vertices in the graph.
The i-th of the next lines contains numbers degreei and si (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89degreei\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89si\xe2\x80\x89<\xe2\x80\x89216), separated by a space.
In the first line print number m, the number of edges of the graph.
Next print m lines, each containing two distinct numbers, a and b (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891), corresponding to edge (a,\xe2\x80\x89b).
Edges can be printed in any order; vertices of the edge can also be printed in any order.
The XOR sum of numbers is the result of bitwise adding numbers modulo 2. This operation exists in many modern programming languages. For example, in languages C++, Java and Python it is represented as ""^"", and in Pascal \xe2\x80\x94 as ""xor""." "1500  x5662"
501B "Misha and Changing Handles" "data structures, dsu, strings" "Misha hacked the Codeforces site. Then he decided to let all the users change their handles. A user can now change his handle any number of times. But each new handle must not be equal to any handle that is already used or that was used at some point.
Misha has a list of handle change requests. After completing the requests he wants to understand the relation between the original and the new handles of the users. Help him to do that.
The first line contains integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000), the number of handle change requests.
Next q lines contain the descriptions of the requests, one per line.
Each query consists of two non-empty strings old and new, separated by a space. The strings consist of lowercase and uppercase Latin letters and digits. Strings old and new are distinct. The lengths of the strings do not exceed 20.
The requests are given chronologically. In other words, by the moment of a query there is a single person with handle old, and handle new is not used and has not been used by anyone.
In the first line output the integer n \xe2\x80\x94 the number of users that changed their handles at least once.
In the next n lines print the mapping between the old and the new handles of the users. Each of them must contain two strings, old and new, separated by a space, meaning that before the user had handle old, and after all the requests are completed, his handle is new. You may output lines in any order.
Each user who changes the handle must occur exactly once in this description." "1100  x16589"
501A Contest implementation "Misha and Vasya participated in a Codeforces contest. Unfortunately, each of them solved only one problem, though successfully submitted it at the first attempt. Misha solved the problem that costs a points and Vasya solved the problem that costs b points. Besides, Misha submitted the problem c minutes after the contest started and Vasya submitted the problem d minutes after the contest started. As you know, on Codeforces the cost of a problem reduces as a round continues. That is, if you submit a problem that costs p points t minutes after the contest started, you get  points. 
Misha and Vasya are having an argument trying to find out who got more points. Help them to find out the truth.
The first line contains four integers a, b, c, d (250\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893500, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c,\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89180). 
It is guaranteed that numbers a and b are divisible by 250 (just like on any real Codeforces round).
Output on a single line: 
""Misha"" (without the quotes), if Misha got more points than Vasya.
""Vasya"" (without the quotes), if Vasya got more points than Misha.
""Tie"" (without the quotes), if both of them got the same number of points." "900  x22859"
500G "New Year Running" "number theory, trees" "New Year is coming in Tree Island! In this island, as the name implies, there are n cities connected by n\xe2\x80\x89-\xe2\x80\x891 roads, and for any two distinct cities there always exists exactly one path between them. For every person in Tree Island, it takes exactly one minute to pass by exactly one road.
There is a weird New Year tradition for runnners in Tree Island, which is called ""extreme run"". This tradition can be done as follows.
A runner chooses two distinct cities a and b. For simplicity, let\'s denote the shortest path from city a to city b as p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pl (here, p1\xe2\x80\x89=\xe2\x80\x89a and pl\xe2\x80\x89=\xe2\x80\x89b holds). Then following happens:
In short, the course of the runner can be denoted as:  
Two runners JH and JY decided to run ""extremely"" in order to celebrate the New Year. JH has chosen two cities u and v, and JY has chosen two cities x and y. They decided to start running at the same moment, and run until they meet at the same city for the first time. Meeting on a road doesn\'t matter for them. Before running, they want to know the amount of time they will run.
It is too hard for JH and JY to calculate this, so they ask you for help.
The first line contains a single positive integer n (5\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105) \xe2\x80\x94 the number of cities in Tree Island.
Next n\xe2\x80\x89-\xe2\x80\x891 lines describe the roads of Tree Island. The i-th line (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891) of them contains two space-separated integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi) \xe2\x80\x94 the vertices connected by a single road of the tree.
The next line contains an integer t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105) \xe2\x80\x94 the number of test cases.
Next t lines describes the test cases. The j-th line (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t) of them contains four space-separated integers uj,\xe2\x80\x89vj,\xe2\x80\x89xj,\xe2\x80\x89yj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89uj,\xe2\x80\x89vj,\xe2\x80\x89xj,\xe2\x80\x89yj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89uj\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89vj,\xe2\x80\x89xj\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89yj). It means that in this test case, JH has chosen two cities uj and vj, JY has chosen two cities xj and yj. JH starts running at city uj, and JY starts running at city xj.
For each test case, print an integer describing the amount of time they should run in minutes. If they have to run for an infinitely long time (in other words, if they never meet at the same city), print -1 instead. If they meet at the beginning of their run, print 0.
The example looks like:" "3200  x157"
500F "New Year Shopping" "divide and conquer, dp" "Dohyun is running a grocery store. He sells n items numbered by integers from 1 to n. The i-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) of them costs ci dollars, and if I buy it, my happiness increases by hi. Each item can be displayed only for p units of time because of freshness. As Dohyun displays the i-th item at time ti, the customers can buy the i-th item only from time ti to time ti\xe2\x80\x89+\xe2\x80\x89(p\xe2\x80\x89-\xe2\x80\x891) inclusively. Also, each customer cannot buy the same item more than once.
I\'d like to visit Dohyun\'s grocery store and buy some items for the New Year Party, and maximize my happiness. Because I am a really busy person, I can visit the store only once, and for very short period of time. In other words, if I visit the store at time t, I can only buy the items available at time t. But I can buy as many items as possible, if the budget holds. I can\'t buy same item several times due to store rules. It is not necessary to use the whole budget.
I made a list of q pairs of integers (aj,\xe2\x80\x89bj), which means I may visit the store at time aj, and spend at most bj dollars at the store. For each pair, I\'d like to know the maximum happiness I can obtain. But there are so many pairs that I can\'t handle them. Can you help me?
The first line contains two space-separated integers n and p (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910\xe2\x80\x89000) \xe2\x80\x94 the number of items, and the display time of each item.
Next n lines describe the items. The i-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) of them contains three space-separated integers ci, hi, ti (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci,\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910\xe2\x80\x89000) \xe2\x80\x94 the cost of the i-th item, the happiness of the i-th item, and the time when the i-th item starts to be displayed.
The next line contains an integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920\xe2\x80\x89000)\xe2\x80\x94 the number of candidates.
Next q lines describe the candidates. The j-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q) of them contains two space-separated integers aj, bj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89aj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920\xe2\x80\x89000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894000) \xe2\x80\x94 the visit time and the budget for j-th visit of store.
For each candidate, print a single line containing the maximum happiness that I can obtain by buying some items.
Consider the first sample. " "2700  x742"
500E "New Year Domino" "data structures, dp, dsu" "Celebrating the new year, many people post videos of falling dominoes; Here\'s a list of them: https://www.youtube.com/results?search_query=New+Years+Dominos 
User ainta, who lives in a 2D world, is going to post a video as well.
There are n dominoes on a 2D Cartesian plane. i-th domino (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) can be represented as a line segment which is parallel to the y-axis and whose length is li. The lower point of the domino is on the x-axis. Let\'s denote the x-coordinate of the i-th domino as pi. Dominoes are placed one after another, so p1\xe2\x80\x89<\xe2\x80\x89p2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89pn\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89<\xe2\x80\x89pn holds.
User ainta wants to take a video of falling dominoes. To make dominoes fall, he can push a single domino to the right. Then, the domino will fall down drawing a circle-shaped orbit until the line segment totally overlaps with the x-axis. 
Also, if the s-th domino touches the t-th domino while falling down, the t-th domino will also fall down towards the right, following the same procedure above. Domino s touches domino t if and only if the segment representing s and t intersects. 
See the picture above. If he pushes the leftmost domino to the right, it falls down, touching dominoes (A), (B) and (C). As a result, dominoes (A), (B), (C) will also fall towards the right. However, domino (D) won\'t be affected by pushing the leftmost domino, but eventually it will fall because it is touched by domino (C) for the first time.
The picture above is an example of falling dominoes. Each red circle denotes a touch of two dominoes.
User ainta has q plans of posting the video. j-th of them starts with pushing the xj-th domino, and lasts until the yj-th domino falls. But sometimes, it could be impossible to achieve such plan, so he has to lengthen some dominoes. It costs one dollar to increase the length of a single domino by 1. User ainta wants to know, for each plan, the minimum cost needed to achieve it. Plans are processed independently, i. e. if domino\'s length is increased in some plan, it doesn\'t affect its length in other plans. Set of dominos that will fall except xj-th domino and yj-th domino doesn\'t matter, but the initial push should be on domino xj.
The first line contains an integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105)\xe2\x80\x94 the number of dominoes.
Next n lines describe the dominoes. The i-th line (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) contains two space-separated integers pi, li (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi,\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109)\xe2\x80\x94 the x-coordinate and the length of the i-th domino. It is guaranteed that p1\xe2\x80\x89<\xe2\x80\x89p2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89pn\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89<\xe2\x80\x89pn.
The next line contains an integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89\xc3\x97\xe2\x80\x89105) \xe2\x80\x94 the number of plans.
Next q lines describe the plans. The j-th line (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q) contains two space-separated integers xj, yj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xj\xe2\x80\x89<\xe2\x80\x89yj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). It means the j-th plan is, to push the xj-th domino, and shoot a video until the yj-th domino falls.
For each plan, print a line containing the minimum cost needed to achieve it. If no cost is needed, print 0.
Consider the example. The dominoes are set like the picture below.
Let\'s take a look at the 4th plan. To make the 6th domino fall by pushing the 2nd domino, the length of the 3rd domino (whose x-coordinate is 4) should be increased by 1, and the 5th domino (whose x-coordinate is 9) should be increased by 1 (other option is to increase 4th domino instead of 5th also by 1). Then, the dominoes will fall like in the picture below. Each cross denotes a touch between two dominoes. " "2300  x1447"
500D "New Year Santa Network" "combinatorics, dfs and similar, graphs, trees" "New Year is coming in Tree World! In this world, as the name implies, there are n cities connected by n\xe2\x80\x89-\xe2\x80\x891 roads, and for any two distinct cities there always exists a path between them. The cities are numbered by integers from 1 to n, and the roads are numbered by integers from 1 to n\xe2\x80\x89-\xe2\x80\x891. Let\'s define d(u,\xe2\x80\x89v) as total length of roads on the path between city u and city v.
As an annual event, people in Tree World repairs exactly one road per year. As a result, the length of one road decreases. It is already known that in the i-th year, the length of the ri-th road is going to become wi, which is shorter than its length before. Assume that the current year is year 1.
Three Santas are planning to give presents annually to all the children in Tree World. In order to do that, they need some preparation, so they are going to choose three distinct cities c1, c2, c3 and make exactly one warehouse in each city. The k-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893) Santa will take charge of the warehouse in city ck.
It is really boring for the three Santas to keep a warehouse alone. So, they decided to build an only-for-Santa network! The cost needed to build this network equals to d(c1,\xe2\x80\x89c2)\xe2\x80\x89+\xe2\x80\x89d(c2,\xe2\x80\x89c3)\xe2\x80\x89+\xe2\x80\x89d(c3,\xe2\x80\x89c1) dollars. Santas are too busy to find the best place, so they decided to choose c1,\xe2\x80\x89c2,\xe2\x80\x89c3 randomly uniformly over all triples of distinct numbers from 1 to n. Santas would like to know the expected value of the cost needed to build the network.
However, as mentioned, each year, the length of exactly one road decreases. So, the Santas want to calculate the expected after each length change. Help them to calculate the value.
The first line contains an integer n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of cities in Tree World.
Next n\xe2\x80\x89-\xe2\x80\x891 lines describe the roads. The i-th line of them (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891) contains three space-separated integers ai, bi, li (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89103), denoting that the i-th road connects cities ai and bi, and the length of i-th road is li.
The next line contains an integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of road length changes.
Next q lines describe the length changes. The j-th line of them (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q) contains two space-separated integers rj, wj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89rj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89103). It means that in the j-th repair, the length of the rj-th road becomes wj. It is guaranteed that wj is smaller than the current length of the rj-th road. The same road can be repaired several times.
Output q numbers. For each given change, print a line containing the expected cost needed to build the network in Tree World. The answer will be considered correct if its absolute and relative error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x896.
Consider the first sample. There are 6 triples: (1,\xe2\x80\x892,\xe2\x80\x893),\xe2\x80\x89(1,\xe2\x80\x893,\xe2\x80\x892),\xe2\x80\x89(2,\xe2\x80\x891,\xe2\x80\x893),\xe2\x80\x89(2,\xe2\x80\x893,\xe2\x80\x891),\xe2\x80\x89(3,\xe2\x80\x891,\xe2\x80\x892),\xe2\x80\x89(3,\xe2\x80\x892,\xe2\x80\x891). Because n\xe2\x80\x89=\xe2\x80\x893, the cost needed to build the network is always d(1,\xe2\x80\x892)\xe2\x80\x89+\xe2\x80\x89d(2,\xe2\x80\x893)\xe2\x80\x89+\xe2\x80\x89d(3,\xe2\x80\x891) for all the triples. So, the expected cost equals to d(1,\xe2\x80\x892)\xe2\x80\x89+\xe2\x80\x89d(2,\xe2\x80\x893)\xe2\x80\x89+\xe2\x80\x89d(3,\xe2\x80\x891)." "1900  x3127"
500C "New Year Book Reading" "constructive algorithms, greedy, implementation, math" "New Year is coming, and Jaehyun decided to read many books during 2015, unlike this year. He has n books numbered by integers from 1 to n. The weight of the i-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) book is wi.
As Jaehyun\'s house is not large enough to have a bookshelf, he keeps the n books by stacking them vertically. When he wants to read a certain book x, he follows the steps described below.
 
He decided to read books for m days. In the j-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) day, he will read the book that is numbered with integer bj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). To read the book, he has to use the process described in the paragraph above. It is possible that he decides to re-read the same book several times.
After making this plan, he realized that the total weight of books he should lift during m days would be too heavy. So, he decided to change the order of the stacked books before the New Year comes, and minimize the total weight. You may assume that books can be stacked in any possible order. Note that book that he is going to read on certain step isn\'t considered as lifted on that step. Can you help him?
The first line contains two space-separated integers n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500) and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the number of books, and the number of days for which Jaehyun would read books.
The second line contains n space-separated integers w1,\xe2\x80\x89w2,\xe2\x80\x89...,\xe2\x80\x89wn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the weight of each book.
The third line contains m space separated integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bm (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the order of books that he would read. Note that he can read the same book more than once.
Print the minimum total weight of books he should lift, which can be achieved by rearranging the order of stacked books.
Here\'s a picture depicting the example. Each vertical column presents the stacked books." "1600  x5827"
500B "New Year Permutation" "dfs and similar, dsu, graphs, greedy, math, sortings" "User ainta has a permutation p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn. As the New Year is coming, he wants to make his permutation as pretty as possible.
Permutation a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an is prettier than permutation b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bn, if and only if there exists an integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) where a1\xe2\x80\x89=\xe2\x80\x89b1,\xe2\x80\x89a2\xe2\x80\x89=\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89ak\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89=\xe2\x80\x89bk\xe2\x80\x89-\xe2\x80\x891 and ak\xe2\x80\x89<\xe2\x80\x89bk all holds.
As known, permutation p is so sensitive that it could be only modified by swapping two distinct elements. But swapping two elements is harder than you think. Given an n\xe2\x80\x89\xc3\x97\xe2\x80\x89n binary matrix A, user ainta can swap the values of pi and pj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j) if and only if Ai,\xe2\x80\x89j\xe2\x80\x89=\xe2\x80\x891.
Given the permutation p and the matrix A, user ainta wants to know the prettiest permutation that he can obtain.
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300) \xe2\x80\x94 the size of the permutation p.
The second line contains n space-separated integers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn \xe2\x80\x94 the permutation p that user ainta has. Each integer between 1 and n occurs exactly once in the given permutation.
Next n lines describe the matrix A. The i-th line contains n characters \'0\' or \'1\' and describes the i-th row of A. The j-th character of the i-th line Ai,\xe2\x80\x89j is the element on the intersection of the i-th row and the j-th column of A. It is guaranteed that, for all integers i,\xe2\x80\x89j where 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89<\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, Ai,\xe2\x80\x89j\xe2\x80\x89=\xe2\x80\x89Aj,\xe2\x80\x89i holds. Also, for all integers i where 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, Ai,\xe2\x80\x89i\xe2\x80\x89=\xe2\x80\x890 holds.
In the first and only line, print n space-separated integers, describing the prettiest permutation that can be obtained.
In the first sample, the swap needed to obtain the prettiest permutation is: (p1,\xe2\x80\x89p7).
In the second sample, the swaps needed to obtain the prettiest permutation is (p1,\xe2\x80\x89p3),\xe2\x80\x89(p4,\xe2\x80\x89p5),\xe2\x80\x89(p3,\xe2\x80\x89p4). 
A permutation p is a sequence of integers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn, consisting of n distinct positive integers, each of them doesn\'t exceed n. The i-th element of the permutation p is denoted as pi. The size of the permutation p is denoted as n." "1600  x8904"
500A "New Year Transportation" "dfs and similar, graphs, implementation" "New Year is coming in Line World! In this world, there are n cells numbered by integers from 1 to n, as a 1\xe2\x80\x89\xc3\x97\xe2\x80\x89n board. People live in cells. However, it was hard to move between distinct cells, because of the difficulty of escaping the cell. People wanted to meet people who live in other cells.
So, user tncks0121 has made a transportation system to move between these cells, to celebrate the New Year. First, he thought of n\xe2\x80\x89-\xe2\x80\x891 positive integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891. For every integer i where 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891 the condition 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x89i holds. Next, he made n\xe2\x80\x89-\xe2\x80\x891 portals, numbered by integers from 1 to n\xe2\x80\x89-\xe2\x80\x891. The i-th (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891) portal connects cell i and cell (i\xe2\x80\x89+\xe2\x80\x89ai), and one can travel from cell i to cell (i\xe2\x80\x89+\xe2\x80\x89ai) using the i-th portal. Unfortunately, one cannot use the portal backwards, which means one cannot move from cell (i\xe2\x80\x89+\xe2\x80\x89ai) to cell i using the i-th portal. It is easy to see that because of condition 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x89i one can\'t leave the Line World using portals.
Currently, I am standing at cell 1, and I want to go to cell t. However, I don\'t know whether it is possible to go there. Please determine whether I can go to cell t by only using the construted transportation system.
The first line contains two space-separated integers n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xe2\x80\x89\xc3\x97\xe2\x80\x89104) and t (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the number of cells, and the index of the cell which I want to go to.
The second line contains n\xe2\x80\x89-\xe2\x80\x891 space-separated integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x89i). It is guaranteed, that using the given transportation system, one cannot leave the Line World.
If I can go to cell t using the transportation system, print ""YES"". Otherwise, print ""NO"".
In the first sample, the visited cells are: 1,\xe2\x80\x892,\xe2\x80\x894; so we can successfully visit the cell 4.
In the second sample, the possible cells to visit are: 1,\xe2\x80\x892,\xe2\x80\x894,\xe2\x80\x896,\xe2\x80\x897,\xe2\x80\x898; so we can\'t visit the cell 5, which we want to visit." "1000  x53638"
499B Lecture "implementation, strings" "You have a new professor of graph theory and he speaks very quickly. You come up with the following plan to keep up with his lecture and make notes.
You know two languages, and the professor is giving the lecture in the first one. The words in both languages consist of lowercase English characters, each language consists of several words. For each language, all words are distinct, i.e. they are spelled differently. Moreover, the words of these languages have a one-to-one correspondence, that is, for each word in each language, there exists exactly one word in the other language having has the same meaning.
You can write down every word the professor says in either the first language or the second language. Of course, during the lecture you write down each word in the language in which the word is shorter. In case of equal lengths of the corresponding words you prefer the word of the first language.
You are given the text of the lecture the professor is going to read. Find out how the lecture will be recorded in your notes.
The first line contains two integers, n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893000) \xe2\x80\x94 the number of words in the professor\'s lecture and the number of words in each of these languages.
The following m lines contain the words. The i-th line contains two strings ai, bi meaning that the word ai belongs to the first language, the word bi belongs to the second language, and these two words have the same meaning. It is guaranteed that no word occurs in both languages, and each word occurs in its language exactly once.
The next line contains n space-separated strings c1,\xe2\x80\x89c2,\xe2\x80\x89...,\xe2\x80\x89cn \xe2\x80\x94 the text of the lecture. It is guaranteed that each of the strings ci belongs to the set of strings {a1,\xe2\x80\x89a2,\xe2\x80\x89... am}.
All the strings in the input are non-empty, each consisting of no more than 10 lowercase English letters.
Output exactly n words: how you will record the lecture in your notebook. Output the words of the lecture in the same order as in the input." "1000  x39621"
499A "Watching a movie" "greedy, implementation" "You have decided to watch the best moments of some movie. There are two buttons on your player: 
Initially the movie is turned on in the player on the first minute, and you want to watch exactly n best moments of the movie, the i-th best moment starts at the li-th minute and ends at the ri-th minute (more formally, the i-th best moment consists of minutes: li,\xe2\x80\x89li\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89ri). 
Determine, what is the minimum number of minutes of the movie you have to watch if you want to watch all the best moments?
The first line contains two space-separated integers n, x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of the best moments of the movie and the value of x for the second button.
The following n lines contain the descriptions of the best moments of the movie, the i-th line of the description contains two integers separated by a space li, ri (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
It is guaranteed that for all integers i from 2 to n the following condition holds: ri\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89<\xe2\x80\x89li.
Output a single number \xe2\x80\x94 the answer to the problem.
In the first sample, the player was initially standing on the first minute. As the minutes from the 1-st to the 4-th one don\'t contain interesting moments, we press the second button. Now we can not press the second button and skip 3 more minutes, because some of them contain interesting moments. Therefore, we watch the movie from the 4-th to the 6-th minute, after that the current time is 7. Similarly, we again skip 3 minutes and then watch from the 10-th to the 12-th minute of the movie. In total, we watch 6 minutes of the movie.
In the second sample, the movie is very interesting, so you\'ll have to watch all 100000 minutes of the movie." "1000  x13978"
498E "Stairs and Lines" "dp, matrices" "You are given a figure on a grid representing stairs consisting of 7 steps. The width of the stair on height i is wi squares. Formally, the figure is created by consecutively joining rectangles of size wi\xe2\x80\x89\xc3\x97\xe2\x80\x89i so that the wi sides lie on one straight line. Thus, for example, if all wi\xe2\x80\x89=\xe2\x80\x891, the figure will look like that (different colors represent different rectangles):
And if w\xe2\x80\x89=\xe2\x80\x89{5,\xe2\x80\x891,\xe2\x80\x890,\xe2\x80\x893,\xe2\x80\x890,\xe2\x80\x890,\xe2\x80\x891}, then it looks like that:
Find the number of ways to color some borders of the figure\'s inner squares so that no square had all four borders colored. The borders of the squares lying on the border of the figure should be considered painted. The ways that differ with the figure\'s rotation should be considered distinct. 
The single line of the input contains 7 numbers w1,\xe2\x80\x89w2,\xe2\x80\x89...,\xe2\x80\x89w7 (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105). It is guaranteed that at least one of the wi\'s isn\'t equal to zero.
In the single line of the output display a single number \xe2\x80\x94 the answer to the problem modulo 109\xe2\x80\x89+\xe2\x80\x897.
All the possible ways of painting the third sample are given below:" "2700  x477"
498D "Traffic Jams in the Land" "data structures, dp, number theory" "Some country consists of (n\xe2\x80\x89+\xe2\x80\x891) cities, located along a straight highway. Let\'s number the cities with consecutive integers from 1 to n\xe2\x80\x89+\xe2\x80\x891 in the order they occur along the highway. Thus, the cities are connected by n segments of the highway, the i-th segment connects cities number i and i\xe2\x80\x89+\xe2\x80\x891. Every segment of the highway is associated with a positive integer ai\xe2\x80\x89>\xe2\x80\x891 \xe2\x80\x94 the period of traffic jams appearance on it. 
In order to get from city x to city y (x\xe2\x80\x89<\xe2\x80\x89y), some drivers use the following tactics. 
Initially the driver is in city x and the current time t equals zero. Until the driver arrives in city y, he perfors the following actions:
You are developing a new traffic control system. You want to consecutively process q queries of two types:
Write a code that will effectively process the queries given above.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of highway segments that connect the n\xe2\x80\x89+\xe2\x80\x891 cities.
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x896) \xe2\x80\x94 the periods of traffic jams appearance on segments of the highway.
The next line contains a single integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of queries to process.
The next q lines contain the descriptions of the queries in the format c, x, y (c \xe2\x80\x94 the query type). 
If c is character \'A\', then your task is to process a query of the first type. In this case the following constraints are satisfied: 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89<\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89+\xe2\x80\x891.
If c is character \'C\', then you need to process a query of the second type. In such case, the following constraints are satisfied: 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x896.
For each query of the first type output a single integer \xe2\x80\x94 the final value of time t after driving from city x to city y. Process the queries in the order in which they are given in the input." "2400  x1126"
498C "Array and Operations" "flows, graph matchings, number theory" "You have written on a piece of paper an array of n positive integers a[1],\xe2\x80\x89a[2],\xe2\x80\x89...,\xe2\x80\x89a[n] and m good pairs of integers (i1,\xe2\x80\x89j1),\xe2\x80\x89(i2,\xe2\x80\x89j2),\xe2\x80\x89...,\xe2\x80\x89(im,\xe2\x80\x89jm). Each good pair (ik,\xe2\x80\x89jk) meets the following conditions: ik\xe2\x80\x89+\xe2\x80\x89jk is an odd number and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ik\xe2\x80\x89<\xe2\x80\x89jk\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n.
In one operation you can perform a sequence of actions: 
Determine the maximum number of operations you can sequentially perform on the given array. Note that one pair may be used several times in the described operations.
The first line contains two space-separated integers n, m (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100).
The second line contains n space-separated integers a[1],\xe2\x80\x89a[2],\xe2\x80\x89...,\xe2\x80\x89a[n] (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a[i]\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the description of the array.
The following m lines contain the description of good pairs. The k-th line contains two space-separated integers ik, jk (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ik\xe2\x80\x89<\xe2\x80\x89jk\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, ik\xe2\x80\x89+\xe2\x80\x89jk is an odd number).
It is guaranteed that all the good pairs are distinct.
Output the answer for the problem." "2100  x3489"
498B "Name That Tune" "dp, probabilities, two pointers" "It turns out that you are a great fan of rock band AC/PE. Peter learned that and started the following game: he plays the first song of the list of n songs of the group, and you have to find out the name of the song. After you tell the song name, Peter immediately plays the following song in order, and so on.
The i-th song of AC/PE has its recognizability pi. This means that if the song has not yet been recognized by you, you listen to it for exactly one more second and with probability of pi percent you recognize it and tell it\'s name. Otherwise you continue listening it. Note that you can only try to guess it only when it is integer number of seconds after the moment the song starts playing.
In all AC/PE songs the first words of chorus are the same as the title, so when you\'ve heard the first ti seconds of i-th song and its chorus starts, you immediately guess its name for sure.
For example, in the song Highway To Red the chorus sounds pretty late, but the song has high recognizability. In the song Back In Blue, on the other hand, the words from the title sound close to the beginning of the song, but it\'s hard to name it before hearing those words. You can name both of these songs during a few more first seconds.
Determine the expected number songs of you will recognize if the game lasts for exactly T seconds (i. e. you can make the last guess on the second T, after that the game stops).
If all songs are recognized faster than in T seconds, the game stops after the last song is recognized.
The first line of the input contains numbers n and T (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89T\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000), separated by a space. Next n lines contain pairs of numbers pi and ti (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89T). The songs are given in the same order as in Petya\'s list.
Output a single number \xe2\x80\x94 the expected number of the number of songs you will recognize in T seconds. Your answer will be considered correct if its absolute or relative error does not exceed 10\xe2\x80\x89-\xe2\x80\x896." "2400  x1181"
498A "Crazy Town" geometry "Crazy Town is a plane on which there are n infinite line roads. Each road is defined by the equation aix\xe2\x80\x89+\xe2\x80\x89biy\xe2\x80\x89+\xe2\x80\x89ci\xe2\x80\x89=\xe2\x80\x890, where ai and bi are not both equal to the zero. The roads divide the plane into connected regions, possibly of infinite space. Let\'s call each such region a block. We define an intersection as the point where at least two different roads intersect.
Your home is located in one of the blocks. Today you need to get to the University, also located in some block. In one step you can move from one block to another, if the length of their common border is nonzero (in particular, this means that if the blocks are adjacent to one intersection, but have no shared nonzero boundary segment, then it are not allowed to move from one to another one in one step).
Determine what is the minimum number of steps you have to perform to get to the block containing the university. It is guaranteed that neither your home nor the university is located on the road.
The first line contains two space-separated integers x1, y1 (\xe2\x80\x89-\xe2\x80\x89106\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x1,\xe2\x80\x89y1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the coordinates of your home.
The second line contains two integers separated by a space x2, y2 (\xe2\x80\x89-\xe2\x80\x89106\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x2,\xe2\x80\x89y2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the coordinates of the university you are studying at.
The third line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89300) \xe2\x80\x94 the number of roads in the city. The following n lines contain 3 space-separated integers (\xe2\x80\x89-\xe2\x80\x89106\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi,\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106; |ai|\xe2\x80\x89+\xe2\x80\x89|bi|\xe2\x80\x89>\xe2\x80\x890) \xe2\x80\x94 the coefficients of the line aix\xe2\x80\x89+\xe2\x80\x89biy\xe2\x80\x89+\xe2\x80\x89ci\xe2\x80\x89=\xe2\x80\x890, defining the i-th road. It is guaranteed that no two roads are the same. In addition, neither your home nor the university lie on the road (i.e. they do not belong to any one of the lines).
Output the answer to the problem.
Pictures to the samples are presented below (A is the point representing the house; B is the point representing the university, different blocks are filled with different colors):" "1700  x6475"
497E "Subsequences Return" "dp, matrices" "Assume that sk(n) equals the sum of digits of number n in the k-based notation. For example, s2(5)\xe2\x80\x89=\xe2\x80\x89s2(1012)\xe2\x80\x89=\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x890\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89=\xe2\x80\x892, s3(14)\xe2\x80\x89=\xe2\x80\x89s3(1123)\xe2\x80\x89=\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x892\xe2\x80\x89=\xe2\x80\x894.
The sequence of integers a0,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891 is defined as . Your task is to calculate the number of distinct subsequences of sequence a0,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891. Calculate the answer modulo 109\xe2\x80\x89+\xe2\x80\x897.
Sequence a1,\xe2\x80\x89...,\xe2\x80\x89ak is called to be a subsequence of sequence b1,\xe2\x80\x89...,\xe2\x80\x89bl, if there is a sequence of indices 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i1\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89ik\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l, such that a1\xe2\x80\x89=\xe2\x80\x89bi1, ..., ak\xe2\x80\x89=\xe2\x80\x89bik. In particular, an empty sequence (i.e. the sequence consisting of zero elements) is a subsequence of any sequence.
The first line contains two space-separated numbers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930).
In a single line print the answer to the problem modulo 109\xe2\x80\x89+\xe2\x80\x897.
In the first sample the sequence ai looks as follows: (0,\xe2\x80\x891,\xe2\x80\x891,\xe2\x80\x890). All the possible subsequences are: 
In the second sample the sequence ai looks as follows: (0,\xe2\x80\x891,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894,\xe2\x80\x895,\xe2\x80\x896). The subsequences of this sequence are exactly all increasing sequences formed from numbers from 0 to 6. It is easy to see that there are 27\xe2\x80\x89=\xe2\x80\x89128 such sequences." "2900  x285"
496D "Tennis Game" "binary search" "Petya and Gena love playing table tennis. A single match is played according to the following rules: a match consists of multiple sets, each set consists of multiple serves. Each serve is won by one of the players, this player scores one point. As soon as one of the players scores t points, he wins the set; then the next set starts and scores of both players are being set to 0. As soon as one of the players wins the total of s sets, he wins the match and the match is over. Here s and t are some positive integer numbers.
To spice it up, Petya and Gena choose new numbers s and t before every match. Besides, for the sake of history they keep a record of each match: that is, for each serve they write down the winner. Serve winners are recorded in the chronological order. In a record the set is over as soon as one of the players scores t points and the match is over as soon as one of the players wins s sets.
Petya and Gena have found a record of an old match. Unfortunately, the sequence of serves in the record isn\'t divided into sets and numbers s and t for the given match are also lost. The players now wonder what values of s and t might be. Can you determine all the possible options?
The first line contains a single integer n \xe2\x80\x94 the length of the sequence of games (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line contains n space-separated integers ai. If ai\xe2\x80\x89=\xe2\x80\x891, then the i-th serve was won by Petya, if ai\xe2\x80\x89=\xe2\x80\x892, then the i-th serve was won by Gena.
It is not guaranteed that at least one option for numbers s and t corresponds to the given record.
In the first line print a single number k \xe2\x80\x94 the number of options for numbers s and t.
In each of the following k lines print two integers si and ti \xe2\x80\x94 the option for numbers s and t. Print the options in the order of increasing si, and for equal si \xe2\x80\x94 in the order of increasing ti." "1900  x3024"
496C "Removing Columns" "brute force, constructive algorithms, implementation" "You are given an n\xe2\x80\x89\xc3\x97\xe2\x80\x89m rectangular table consisting of lower case English letters. In one operation you can completely remove one column from the table. The remaining parts are combined forming a new table. For example, after removing the second column from the table
 
we obtain the table:
 
A table is called good if its rows are ordered from top to bottom lexicographically, i.e. each row is lexicographically no larger than the following one. Determine the minimum number of operations of removing a column needed to make a given table good.
The first line contains two integers  \xe2\x80\x94 n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100).
Next n lines contain m small English letters each \xe2\x80\x94 the characters of the table.
Print a single number \xe2\x80\x94 the minimum number of columns that you need to remove in order to make the table good.
In the first sample the table is already good.
In the second sample you may remove the first and third column.
In the third sample you have to remove all the columns (note that the table where all rows are empty is considered good by definition).
Let strings s and t have equal length. Then, s is lexicographically larger than t if they are not equal and the character following the largest common prefix of s and t (the prefix may be empty) in s is alphabetically larger than the corresponding character of t." "1500  x7755"
496B "Secret Combination" "brute force, constructive algorithms, implementation" "You got a box with a combination lock. The lock has a display showing n digits. There are two buttons on the box, each button changes digits on the display. You have quickly discovered that the first button adds 1 to all the digits (all digits 9 become digits 0), and the second button shifts all the digits on the display one position to the right (the last digit becomes the first one). For example, if the display is currently showing number 579, then if we push the first button, the display will show 680, and if after that we push the second button, the display will show 068.
You know that the lock will open if the display is showing the smallest possible number that can be obtained by pushing the buttons in some order. The leading zeros are ignored while comparing numbers. Now your task is to find the desired number.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the number of digits on the display.
The second line contains n digits \xe2\x80\x94 the initial state of the display.
Print a single line containing n digits \xe2\x80\x94 the desired state of the display containing the smallest possible number." "1500  x5929"
496A "Minimum Difficulty" "brute force, implementation, math" "Mike is trying rock climbing but he is awful at it. 
There are n holds on the wall, i-th hold is at height ai off the ground. Besides, let the sequence ai increase, that is, ai\xe2\x80\x89<\xe2\x80\x89ai\xe2\x80\x89+\xe2\x80\x891 for all i from 1 to n\xe2\x80\x89-\xe2\x80\x891; we will call such sequence a track. Mike thinks that the track a1, ..., an has difficulty . In other words, difficulty equals the maximum distance between two holds that are adjacent in height.
Today Mike decided to cover the track with holds hanging on heights a1, ..., an. To make the problem harder, Mike decided to remove one hold, that is, remove one element of the sequence (for example, if we take the sequence (1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894,\xe2\x80\x895) and remove the third element from it, we obtain the sequence (1,\xe2\x80\x892,\xe2\x80\x894,\xe2\x80\x895)). However, as Mike is awful at climbing, he wants the final difficulty (i.e. the maximum difference of heights between adjacent holds after removing the hold) to be as small as possible among all possible options of removing a hold. The first and last holds must stay at their positions.
Help Mike determine the minimum difficulty of the track after removing one hold.
The first line contains a single integer n (3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of holds.
The next line contains n space-separated integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000), where ai is the height where the hold number i hangs. The sequence ai is increasing (i.e. each element except for the first one is strictly larger than the previous one).
Print a single number \xe2\x80\x94 the minimum difficulty of the track after removing a single hold.
In the first sample you can remove only the second hold, then the sequence looks like (1,\xe2\x80\x896), the maximum difference of the neighboring elements equals 5.
In the second test after removing every hold the difficulty equals 2.
In the third test you can obtain sequences (1,\xe2\x80\x893,\xe2\x80\x897,\xe2\x80\x898), (1,\xe2\x80\x892,\xe2\x80\x897,\xe2\x80\x898), (1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x898), for which the difficulty is 4, 5 and 5, respectively. Thus, after removing the second element we obtain the optimal answer \xe2\x80\x94 4." "900  x16461"
495B "Modular Equations" "math, number theory" "Last week, Hamed learned about a new type of equations in his math class called Modular Equations. Lets define i modulo j as the remainder of division of i by j and denote it by . A Modular Equation, as Hamed\'s teacher described, is an equation of the form  in which a and b are two non-negative integers and x is a variable. We call a positive integer x for which  a solution of our equation.
Hamed didn\'t pay much attention to the class since he was watching a movie. He only managed to understand the definitions of these equations.
Now he wants to write his math exercises but since he has no idea how to do that, he asked you for help. He has told you all he knows about Modular Equations and asked you to write a program which given two numbers a and b determines how many answers the Modular Equation  has.
In the only line of the input two space-separated integers a and b (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) are given.
If there is an infinite number of answers to our equation, print ""infinity"" (without the quotes). Otherwise print the number of solutions of the Modular Equation .
In the first sample the answers of the Modular Equation are 8 and 16 since " "1600  x7009"
495A "Digital Counter" implementation "Malek lives in an apartment block with 100 floors numbered from 0 to 99. The apartment has an elevator with a digital counter showing the floor that the elevator is currently on. The elevator shows each digit of a number with 7 light sticks by turning them on or off. The picture below shows how the elevator shows each digit.
One day when Malek wanted to go from floor 88 to floor 0 using the elevator he noticed that the counter shows number 89 instead of 88. Then when the elevator started moving the number on the counter changed to 87. After a little thinking Malek came to the conclusion that there is only one explanation for this: One of the sticks of the counter was broken. Later that day Malek was thinking about the broken stick and suddenly he came up with the following problem.
Suppose the digital counter is showing number n. Malek calls an integer x (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8999) good if it\'s possible that the digital counter was supposed to show x but because of some(possibly none) broken sticks it\'s showing n instead. Malek wants to know number of good integers for a specific n. So you must write a program that calculates this number. Please note that the counter always shows two digits.
The only line of input contains exactly two digits representing number n (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8999). Note that n may have a leading zero.
In the only line of the output print the number of good integers.
In the first sample the counter may be supposed to show 88 or 89.
In the second sample the good integers are 00, 08, 80 and 88.
In the third sample the good integers are 03,\xe2\x80\x8908,\xe2\x80\x8909,\xe2\x80\x8933,\xe2\x80\x8938,\xe2\x80\x8939,\xe2\x80\x8973,\xe2\x80\x8978,\xe2\x80\x8979,\xe2\x80\x8983,\xe2\x80\x8988,\xe2\x80\x8989,\xe2\x80\x8993,\xe2\x80\x8998,\xe2\x80\x8999." "1100  x8496"
494E Sharti "data structures, games" "During the last 24 hours Hamed and Malek spent all their time playing ""Sharti"". Now they are too exhausted to finish the last round. So they asked you for help to determine the winner of this round. 
""Sharti"" is played on a n\xe2\x80\x89\xc3\x97\xe2\x80\x89n board with some of cells colored white and others colored black. The rows of the board are numbered from top to bottom using number 1 to n. Also the columns of the board are numbered from left to right using numbers 1 to n. The cell located at the intersection of i-th row and j-th column is denoted by (i,\xe2\x80\x89j).
The players alternatively take turns. In each turn the player must choose a square with side-length at most k with its lower-right cell painted white. Then the colors of all the cells in this square are inversed (white cells become black and vice-versa). The player who cannot perform a move in his turn loses. 
You know Hamed and Malek are very clever and they would have played their best moves at each turn. Knowing this and the fact that Hamed takes the first turn, given the initial board as described in the input, you must determine which one of them will be the winner.
In this problem the initial board is specified as a set of m rectangles. All cells that lie inside at least one of these rectangles are colored white and the rest are colored black.
In the first line of input three space-spereated integers n,\xe2\x80\x89m,\xe2\x80\x89k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7104) follow, denoting size of the board, number of rectangles and maximum size of the turn square during the game, respectively.
In i-th line of the next m lines four space-seperated integers ai,\xe2\x80\x89bi,\xe2\x80\x89ci,\xe2\x80\x89di (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89di\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) are given meaning that i-th rectangle determining the initial board is a rectangle with upper-left cell at (ai,\xe2\x80\x89bi) and lower-right cell at (ci,\xe2\x80\x89di).
If Hamed wins, print ""Hamed"", otherwise print ""Malek"" (without the quotes)." "3200  x316"
494D Birthday "data structures, dfs and similar, dp, trees" "Ali is Hamed\'s little brother and tomorrow is his birthday. Hamed wants his brother to earn his gift so he gave him a hard programming problem and told him if he can successfully solve it, he\'ll get him a brand new laptop. Ali is not yet a very talented programmer like Hamed and although he usually doesn\'t cheat but this time is an exception. It\'s about a brand new laptop. So he decided to secretly seek help from you. Please solve this problem for Ali. 
An n-vertex weighted rooted tree is given. Vertex number 1 is a root of the tree. We define d(u,\xe2\x80\x89v) as the sum of edges weights on the shortest path between vertices u and v. Specifically we define d(u,\xe2\x80\x89u)\xe2\x80\x89=\xe2\x80\x890. Also let\'s define S(v) for each vertex v as a set containing all vertices u such that d(1,\xe2\x80\x89u)\xe2\x80\x89=\xe2\x80\x89d(1,\xe2\x80\x89v)\xe2\x80\x89+\xe2\x80\x89d(v,\xe2\x80\x89u). Function f(u,\xe2\x80\x89v) is then defined using the following formula:
The goal is to calculate f(u,\xe2\x80\x89v) for each of the q given pair of vertices. As the answer can be rather large it\'s enough to print it modulo 109\xe2\x80\x89+\xe2\x80\x897.
In the first line of input an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), number of vertices of the tree is given.
In each of the next n\xe2\x80\x89-\xe2\x80\x891 lines three space-separated integers ai,\xe2\x80\x89bi,\xe2\x80\x89ci (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ci\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) are given indicating an edge between ai and bi with weight equal to ci.
In the next line an integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), number of vertex pairs, is given.
In each of the next q lines two space-separated integers ui,\xe2\x80\x89vi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ui,\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) are given meaning that you must calculate f(ui,\xe2\x80\x89vi).
It is guaranteed that the given edges form a tree.
Output q lines. In the i-th line print the value of f(ui,\xe2\x80\x89vi) modulo 109\xe2\x80\x89+\xe2\x80\x897." "2700  x529"
494C "Helping People" "dp, probabilities" "Malek is a rich man. He also is very generous. That\'s why he decided to split his money between poor people. A charity institute knows n poor people numbered from 1 to n. The institute gave Malek q recommendations. A recommendation is a segment of people like [l,\xe2\x80\x89r] which means the institute recommended that Malek gives one dollar to every person whose number is in this segment.
However this charity has very odd rules about the recommendations. Because of those rules the recommendations are given in such a way that for every two recommendation [a,\xe2\x80\x89b] and [c,\xe2\x80\x89d] one of the following conditions holds: 
The goodness of a charity is the value of maximum money a person has after Malek finishes giving his money. The institute knows for each recommendation what is the probability that Malek will accept it. They want to know the expected value of goodness of this charity. So they asked you for help.
You have been given the list of recommendations and for each recommendation the probability of it being accepted by Malek. You have also been given how much money each person initially has. You must find the expected value of goodness.
In the first line two space-separated integers n,\xe2\x80\x89q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000) are given.
In the second line n space-separated integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) are given meaning that person number i initially has ai dollars. 
Each of the next q lines contains three space-separated numbers li,\xe2\x80\x89ri,\xe2\x80\x89pi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891) where li and ri are two integers describing the segment of recommendation and pi is a real number given with exactly three digits after decimal point which is equal to probability of Malek accepting this recommendation.
Note that a segment may appear several times in recommendations.
Output the sought value. Your answer will be considered correct if its absolute or relative error is less than 10\xe2\x80\x89-\xe2\x80\x896." "2600  x867"
494B "Obsessive String" "dp, strings" "Hamed has recently found a string t and suddenly became quite fond of it. He spent several days trying to find all occurrences of t in other strings he had. Finally he became tired and started thinking about the following problem. Given a string s how many ways are there to extract k\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x891 non-overlapping substrings from it such that each of them contains string t as a substring? More formally, you need to calculate the number of ways to choose two sequences a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89ak and b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bk satisfying the following requirements:
As the number of ways can be rather large print it modulo 109\xe2\x80\x89+\xe2\x80\x897.
Input consists of two lines containing strings s and t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|,\xe2\x80\x89|t|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105). Each string consists of lowercase Latin letters.
Print the answer in a single line." "2000  x2748"
494A Treasure greedy "Malek has recently found a treasure map. While he was looking for a treasure he found a locked door. There was a string s written on the door consisting of characters \'(\', \')\' and \'#\'. Below there was a manual on how to open the door. After spending a long time Malek managed to decode the manual and found out that the goal is to replace each \'#\' with one or more \')\' characters so that the final string becomes beautiful. 
Below there was also written that a string is called beautiful if for each i (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|) there are no more \')\' characters than \'(\' characters among the first i characters of s and also the total number of \'(\' characters is equal to the total number of \')\' characters. 
Help Malek open the door by telling him for each \'#\' character how many \')\' characters he must replace it with.
The first line of the input contains a string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105). Each character of this string is one of the characters \'(\', \')\' or \'#\'. It is guaranteed that s contains at least one \'#\' character.
If there is no way of replacing \'#\' characters which leads to a beautiful string print \xe2\x80\x89-\xe2\x80\x891. Otherwise for each character \'#\' print a separate line containing a positive integer, the number of \')\' characters this character must be replaced with.
If there are several possible answers, you may output any of them.
|s| denotes the length of the string s." "1500  x6257"
493E "Vasya and Polynomial" math "Vasya is studying in the last class of school and soon he will take exams. He decided to study polynomials. Polynomial is a function P(x)\xe2\x80\x89=\xe2\x80\x89a0\xe2\x80\x89+\xe2\x80\x89a1x1\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89anxn. Numbers ai are called coefficients of a polynomial, non-negative integer n is called a degree of a polynomial.
Vasya has made a bet with his friends that he can solve any problem with polynomials. They suggested him the problem: ""Determine how many polynomials P(x) exist with integer non-negative coefficients so that , and , where  and b are given positive integers""? 
Vasya does not like losing bets, but he has no idea how to solve this task, so please help him to solve the problem.
The input contains three integer positive numbers  no greater than 1018.
If there is an infinite number of such polynomials, then print ""inf"" without quotes, otherwise print the reminder of an answer modulo 109\xe2\x80\x89+\xe2\x80\x897." "2800  x485"
493D "Vasya and Chess" "constructive algorithms, games, math" "Vasya decided to learn to play chess. Classic chess doesn\'t seem interesting to him, so he plays his own sort of chess.
The queen is the piece that captures all squares on its vertical, horizontal and diagonal lines. If the cell is located on the same vertical, horizontal or diagonal line with queen, and the cell contains a piece of the enemy color, the queen is able to move to this square. After that the enemy\'s piece is removed from the board. The queen cannot move to a cell containing an enemy piece if there is some other piece between it and the queen. 
There is an n\xe2\x80\x89\xc3\x97\xe2\x80\x89n chessboard. We\'ll denote a cell on the intersection of the r-th row and c-th column as (r,\xe2\x80\x89c). The square (1,\xe2\x80\x891) contains the white queen and the square (1,\xe2\x80\x89n) contains the black queen. All other squares contain green pawns that don\'t belong to anyone.
The players move in turns. The player that moves first plays for the white queen, his opponent plays for the black queen.
On each move the player has to capture some piece with his queen (that is, move to a square that contains either a green pawn or the enemy queen). The player loses if either he cannot capture any piece during his move or the opponent took his queen during the previous move. 
Help Vasya determine who wins if both players play with an optimal strategy on the board n\xe2\x80\x89\xc3\x97\xe2\x80\x89n.
The input contains a single number n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the size of the board.
On the first line print the answer to problem \xe2\x80\x94 string ""white"" or string ""black"", depending on who wins if the both players play optimally. 
If the answer is ""white"", then you should also print two integers r and c representing the cell (r,\xe2\x80\x89c), where the first player should make his first move to win. If there are multiple such cells, print the one with the minimum r. If there are still multiple squares, print the one with the minimum c.
In the first sample test the white queen can capture the black queen at the first move, so the white player wins.
In the second test from the statement if the white queen captures the green pawn located on the central vertical line, then it will be captured by the black queen during the next move. So the only move for the white player is to capture the green pawn located at (2,\xe2\x80\x891). 
Similarly, the black queen doesn\'t have any other options but to capture the green pawn located at (2,\xe2\x80\x893), otherwise if it goes to the middle vertical line, it will be captured by the white queen.
During the next move the same thing happens \xe2\x80\x94 neither the white, nor the black queen has other options rather than to capture green pawns situated above them. Thus, the white queen ends up on square (3,\xe2\x80\x891), and the black queen ends up on square (3,\xe2\x80\x893). 
In this situation the white queen has to capture any of the green pawns located on the middle vertical line, after that it will be captured by the black queen. Thus, the player who plays for the black queen wins." "1700  x9712"
493C "Vasya and Basketball" "binary search, brute force, data structures, implementation, sortings, two pointers" "Vasya follows a basketball game and marks the distances from which each team makes a throw. He knows that each successful throw has value of either 2 or 3 points. A throw is worth 2 points if the distance it was made from doesn\'t exceed some value of d meters, and a throw is worth 3 points if the distance is larger than d meters, where d is some non-negative integer.
Vasya would like the advantage of the points scored by the first team (the points of the first team minus the points of the second team) to be maximum. For that he can mentally choose the value of d. Help him to do that.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of throws of the first team. Then follow n integer numbers \xe2\x80\x94 the distances of throws ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7109). 
Then follows number m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of the throws of the second team. Then follow m integer numbers \xe2\x80\x94 the distances of throws of bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7109).
Print two numbers in the format a:b \xe2\x80\x94 the score that is possible considering the problem conditions where the result of subtraction a\xe2\x80\x89-\xe2\x80\x89b is maximum. If there are several such scores, find the one in which number a is maximum." "1600  x6837"
493B "Vasya and Wrestling" implementation "Vasya has become interested in wrestling. In wrestling wrestlers use techniques for which they are awarded points by judges. The wrestler who gets the most points wins.
When the numbers of points of both wrestlers are equal, the wrestler whose sequence of points is lexicographically greater, wins.
If the sequences of the awarded points coincide, the wrestler who performed the last technique wins. Your task is to determine which wrestler won.
The first line contains number n \xe2\x80\x94 the number of techniques that the wrestlers have used (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105). 
The following n lines contain integer numbers ai (|ai|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x890). If ai is positive, that means that the first wrestler performed the technique that was awarded with ai points. And if ai is negative, that means that the second wrestler performed the technique that was awarded with (\xe2\x80\x89-\xe2\x80\x89ai) points.
The techniques are given in chronological order.
If the first wrestler wins, print string ""first"", otherwise print ""second""
Sequence x\xe2\x80\x89\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89x1x2... x|x| is lexicographically larger than sequence y\xe2\x80\x89\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89y1y2... y|y|, if either |x|\xe2\x80\x89\xe2\x80\x89>\xe2\x80\x89\xe2\x80\x89|y| and x1\xe2\x80\x89\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89y1,\xe2\x80\x89\xe2\x80\x89x2\xe2\x80\x89\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89y2,\xe2\x80\x89... ,\xe2\x80\x89\xe2\x80\x89x|y|\xe2\x80\x89\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89y|y|, or there is such number r (r\xe2\x80\x89\xe2\x80\x89<\xe2\x80\x89\xe2\x80\x89|x|,\xe2\x80\x89r\xe2\x80\x89\xe2\x80\x89<\xe2\x80\x89\xe2\x80\x89|y|), that x1\xe2\x80\x89\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89y1,\xe2\x80\x89\xe2\x80\x89x2\xe2\x80\x89\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89y2,\xe2\x80\x89\xe2\x80\x89... ,\xe2\x80\x89\xe2\x80\x89xr\xe2\x80\x89\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89yr and xr\xe2\x80\x89\xe2\x80\x89+\xe2\x80\x89\xe2\x80\x891\xe2\x80\x89\xe2\x80\x89>\xe2\x80\x89\xe2\x80\x89yr\xe2\x80\x89\xe2\x80\x89+\xe2\x80\x89\xe2\x80\x891.
We use notation |a| to denote length of sequence a." "1400  x13373"
493A "Vasya and Football" implementation "Vasya has started watching football games. He has learned that for some fouls the players receive yellow cards, and for some fouls they receive red cards. A player who receives the second yellow card automatically receives a red card.
Vasya is watching a recorded football match now and makes notes of all the fouls that he would give a card for. Help Vasya determine all the moments in time when players would be given red cards if Vasya were the judge. For each player, Vasya wants to know only the first moment of time when he would receive a red card from Vasya.
The first line contains the name of the team playing at home. The second line contains the name of the team playing away. Both lines are not empty. The lengths of both lines do not exceed 20. Each line contains only of large English letters. The names of the teams are distinct.
Next follows number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8990) \xe2\x80\x94 the number of fouls. 
Each of the following n lines contains information about a foul in the following form: 
The players from different teams can have the same number. The players within one team have distinct numbers. The fouls go chronologically, no two fouls happened at the same minute.
For each event when a player received his first red card in a chronological order print a string containing the following information:
If no player received a card, then you do not need to print anything.
It is possible case that the program will not print anything to the output (if there were no red cards)." "1300  x6125"
492E "Vanya and Field" math "Vanya decided to walk in the field of size n\xe2\x80\x89\xc3\x97\xe2\x80\x89n cells. The field contains m apple trees, the i-th apple tree is at the cell with coordinates (xi,\xe2\x80\x89yi). Vanya moves towards vector (dx,\xe2\x80\x89dy). That means that if Vanya is now at the cell (x,\xe2\x80\x89y), then in a second he will be at cell . The following condition is satisfied for the vector: , where  is the largest integer that divides both a and b. Vanya ends his path when he reaches the square he has already visited. 
Vanya wonders, from what square of the field he should start his path to see as many apple trees as possible.
The first line contains integers n,\xe2\x80\x89m,\xe2\x80\x89dx,\xe2\x80\x89dy(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89dx,\xe2\x80\x89dy\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the size of the field, the number of apple trees and the vector of Vanya\'s movement. Next m lines contain integers xi,\xe2\x80\x89yi (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891) \xe2\x80\x94 the coordinates of apples. One cell may contain multiple apple trees.
Print two space-separated numbers \xe2\x80\x94 the coordinates of the cell from which you should start your path. If there are several answers you are allowed to print any of them.
In the first sample Vanya\'s path will look like: (1,\xe2\x80\x893)\xe2\x80\x89-\xe2\x80\x89(3,\xe2\x80\x891)\xe2\x80\x89-\xe2\x80\x89(0,\xe2\x80\x894)\xe2\x80\x89-\xe2\x80\x89(2,\xe2\x80\x892)\xe2\x80\x89-\xe2\x80\x89(4,\xe2\x80\x890)\xe2\x80\x89-\xe2\x80\x89(1,\xe2\x80\x893)
In the second sample: (0,\xe2\x80\x890)\xe2\x80\x89-\xe2\x80\x89(1,\xe2\x80\x891)\xe2\x80\x89-\xe2\x80\x89(0,\xe2\x80\x890)" "2000  x1631"
492D "Vanya and Computer Game" "binary search, implementation, math, sortings" "Vanya and his friend Vova play a computer game where they need to destroy n monsters to pass a level. Vanya\'s character performs attack with frequency x hits per second and Vova\'s character performs attack with frequency y hits per second. Each character spends fixed time to raise a weapon and then he hits (the time to raise the weapon is 1\xe2\x80\x89/\xe2\x80\x89x seconds for the first character and 1\xe2\x80\x89/\xe2\x80\x89y seconds for the second one). The i-th monster dies after he receives ai hits. 
Vanya and Vova wonder who makes the last hit on each monster. If Vanya and Vova make the last hit at the same time, we assume that both of them have made the last hit.
The first line contains three integers n,x,y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x,\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the number of monsters, the frequency of Vanya\'s and Vova\'s attack, correspondingly.
Next n lines contain integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of hits needed do destroy the i-th monster.
Print n lines. In the i-th line print word ""Vanya"", if the last hit on the i-th monster was performed by Vanya, ""Vova"", if Vova performed the last hit, or ""Both"", if both boys performed it at the same time.
In the first sample Vanya makes the first hit at time 1\xe2\x80\x89/\xe2\x80\x893, Vova makes the second hit at time 1\xe2\x80\x89/\xe2\x80\x892, Vanya makes the third hit at time 2\xe2\x80\x89/\xe2\x80\x893, and both boys make the fourth and fifth hit simultaneously at the time 1.
In the second sample Vanya and Vova make the first and second hit simultaneously at time 1." "1800  x3159"
492C "Vanya and Exams" "greedy, sortings" "Vanya wants to pass n exams and get the academic scholarship. He will get the scholarship if the average grade mark for all the exams is at least avg. The exam grade cannot exceed r. Vanya has passed the exams and got grade ai for the i-th exam. To increase the grade for the i-th exam by 1 point, Vanya must write bi essays. He can raise the exam grade multiple times.
What is the minimum number of essays that Vanya needs to write to get scholarship?
The first line contains three integers n, r, avg (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89avg\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89min(r,\xe2\x80\x89106)) \xe2\x80\x94 the number of exams, the maximum grade and the required grade point average, respectively.
Each of the following n lines contains space-separated integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
In the first line print the minimum number of essays.
In the first sample Vanya can write 2 essays for the 3rd exam to raise his grade by 2 points and 2 essays for the 4th exam to raise his grade by 1 point.
In the second sample, Vanya doesn\'t need to write any essays as his general point average already is above average." "1400  x14142"
492B "Vanya and Lanterns" "binary search, implementation, math, sortings" "Vanya walks late at night along a straight street of length l, lit by n lanterns. Consider the coordinate system with the beginning of the street corresponding to the point 0, and its end corresponding to the point l. Then the i-th lantern is at the point ai. The lantern lights all points of the street that are at the distance of at most d from it, where d is some positive number, common for all lanterns. 
Vanya wonders: what is the minimum light radius d should the lanterns have to light the whole street?
The first line contains two integers n, l (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of lanterns and the length of the street respectively. 
The next line contains n integers ai (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l). Multiple lanterns can be located at the same point. The lanterns may be located at the ends of the street.
Print the minimum light radius d, needed to light the whole street. The answer will be considered correct if its absolute or relative error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x899.
Consider the second sample. At d\xe2\x80\x89=\xe2\x80\x892 the first lantern will light the segment [0,\xe2\x80\x894] of the street, and the second lantern will light segment [3,\xe2\x80\x895]. Thus, the whole street will be lit." "1200  x76427"
492A "Vanya and Cubes" implementation "Vanya got n cubes. He decided to build a pyramid from them. Vanya wants to build the pyramid as follows: the top level of the pyramid must consist of 1 cube, the second level must consist of 1\xe2\x80\x89+\xe2\x80\x892\xe2\x80\x89=\xe2\x80\x893 cubes, the third level must have 1\xe2\x80\x89+\xe2\x80\x892\xe2\x80\x89+\xe2\x80\x893\xe2\x80\x89=\xe2\x80\x896 cubes, and so on. Thus, the i-th level of the pyramid must have 1\xe2\x80\x89+\xe2\x80\x892\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89(i\xe2\x80\x89-\xe2\x80\x891)\xe2\x80\x89+\xe2\x80\x89i cubes.
Vanya wants to know what is the maximum height of the pyramid that he can make using the given cubes.
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104) \xe2\x80\x94 the number of cubes given to Vanya.
Print the maximum possible height of the pyramid in the single line.
Illustration to the second sample: " "800  x51165"
491C Deciphering "flows, graph matchings" "One day Maria Ivanovna found a Sasha\'s piece of paper with a message dedicated to Olya. Maria Ivanovna wants to know what is there in a message, but unfortunately the message is ciphered. Maria Ivanovna knows that her students usually cipher their messages by replacing each letter of an original message by some another letter. Replacement works in such way that same letters are always replaced with some fixed letter, and different letters are always replaced by different letters. 
Maria Ivanovna supposed that the message contains answers to the final exam (since its length is equal to the number of final exam questions). On the other hand she knows that Sasha\'s answer are not necessary correct. There are K possible answers for each questions. Of course, Maria Ivanovna knows correct answers.
Maria Ivanovna decided to decipher message in such way that the number of Sasha\'s correct answers is maximum possible. She is very busy now, so your task is to help her.
First line contains length of both strings N (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89000\xe2\x80\x89000) and an integer K \xe2\x80\x94 number of possible answers for each of the questions (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89K\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8952). Answers to the questions are denoted as Latin letters abcde...xyzABCDE...XYZ in the order. For example for K\xe2\x80\x89=\xe2\x80\x896, possible answers are abcdef and for K\xe2\x80\x89=\xe2\x80\x8930 possible answers are abcde...xyzABCD.
Second line contains a ciphered message string consisting of Latin letters.
Third line contains a correct answers string consisting of Latin letters.
In the first line output maximum possible number of correct Sasha\'s answers.
In the second line output cipher rule as the string of length K where for each letter from the students\' cipher (starting from \'a\' as mentioned above) there is specified which answer does it correspond to.
If there are several ways to produce maximum answer, output any of them." "2300  x418"
491B "New York Hotel" "greedy, math" "Think of New York as a rectangular grid consisting of N vertical avenues numerated from 1 to N and M horizontal streets numerated 1 to M. C friends are staying at C hotels located at some street-avenue crossings. They are going to celebrate birthday of one of them in the one of H restaurants also located at some street-avenue crossings. They also want that the maximum distance covered by one of them while traveling to the restaurant to be minimum possible. Help friends choose optimal restaurant for a celebration.
Suppose that the distance between neighboring crossings are all the same equal to one kilometer.
The first line contains two integers N \xd0\xb8 M \xe2\x80\x94 size of the city (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N,\xe2\x80\x89M\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). In the next line there is a single integer C (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89C\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of hotels friends stayed at. Following C lines contain descriptions of hotels, each consisting of two coordinates x and y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89M). The next line contains an integer H \xe2\x80\x94 the number of restaurants (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89H\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105). Following H lines contain descriptions of restaurants in the same format.
Several restaurants and hotels may be located near the same crossing.
In the first line output the optimal distance. In the next line output index of a restaurant that produces this optimal distance. If there are several possibilities, you are allowed to output any of them." "2100  x568"
491A "Up the hill" "constructive algorithms, implementation" "Hiking club ""Up the hill"" just returned from a walk. Now they are trying to remember which hills they\'ve just walked through.
It is known that there were N stops, all on different integer heights between 1 and N kilometers (inclusive) above the sea level. On the first day they\'ve traveled from the first stop to the second stop, on the second day they\'ve traveled from the second to the third and so on, and on the last day they\'ve traveled from the stop N\xe2\x80\x89-\xe2\x80\x891 to the stop N and successfully finished their expedition.
They are trying to find out which heights were their stops located at. They have an entry in a travel journal specifying how many days did they travel up the hill, and how many days did they walk down the hill.
Help them by suggesting some possible stop heights satisfying numbers from the travel journal.
In the first line there is an integer non-negative number A denoting the number of days of climbing up the hill. Second line contains an integer non-negative number B \xe2\x80\x94 the number of days of walking down the hill (A\xe2\x80\x89+\xe2\x80\x89B\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89=\xe2\x80\x89N, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000).
Output N space-separated distinct integers from 1 to N inclusive, denoting possible heights of the stops in order of visiting." "1000  x2955"
490F "Treeland Tour" "data structures, dfs and similar, dp, trees" "The ""Road Accident"" band is planning an unprecedented tour around Treeland. The RA fans are looking forward to the event and making bets on how many concerts their favorite group will have.
Treeland consists of n cities, some pairs of cities are connected by bidirectional roads. Overall the country has n\xe2\x80\x89-\xe2\x80\x891 roads. We know that it is possible to get to any city from any other one. The cities are numbered by integers from 1 to n. For every city we know its value ri \xe2\x80\x94 the number of people in it.
We know that the band will travel along some path, having concerts in some cities along the path. The band\'s path will not pass one city twice, each time they move to the city that hasn\'t been previously visited. Thus, the musicians will travel along some path (without visiting any city twice) and in some (not necessarily all) cities along the way they will have concerts.
The band plans to gather all the big stadiums and concert halls during the tour, so every time they will perform in a city which population is larger than the population of the previously visited with concert city. In other words, the sequence of population in the cities where the concerts will be held is strictly increasing.
In a recent interview with the leader of the ""road accident"" band promised to the fans that the band will give concert in the largest possible number of cities! Thus the band will travel along some chain of cities of Treeland and have concerts in some of these cities, so that the population number will increase, and the number of concerts will be the largest possible.
The fans of Treeland are frantically trying to figure out how many concerts the group will have in Treeland. Looks like they can\'t manage without some help from a real programmer! Help the fans find the sought number of concerts.
The first line of the input contains integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x896000) \xe2\x80\x94 the number of cities in Treeland. The next line contains n integers r1,\xe2\x80\x89r2,\xe2\x80\x89...,\xe2\x80\x89rn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), where ri is the population of the i-th city. The next n\xe2\x80\x89-\xe2\x80\x891 lines contain the descriptions of the roads, one road per line. Each road is defined by a pair of integers aj, bj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89aj,\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the pair of the numbers of the cities that are connected by the j-th road. All numbers in the lines are separated by spaces.
Print the number of cities where the ""Road Accident"" band will have concerts." "2200  x1727"
490E "Restoring Increasing Sequence" "binary search, brute force, greedy, implementation" "Peter wrote on the board a strictly increasing sequence of positive integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an. Then Vasil replaced some digits in the numbers of this sequence by question marks. Thus, each question mark corresponds to exactly one lost digit.
Restore the the original sequence knowing digits remaining on the board.
The first line of the input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the length of the sequence. Next n lines contain one element of the sequence each. Each element consists only of digits and question marks. No element starts from digit 0. Each element has length from 1 to 8 characters, inclusive.
If the answer exists, print in the first line ""YES"" (without the quotes). Next n lines must contain the sequence of positive integers \xe2\x80\x94 a possible variant of Peter\'s sequence. The found sequence must be strictly increasing, it must be transformed from the given one by replacing each question mark by a single digit. All numbers on the resulting sequence must be written without leading zeroes. If there are multiple solutions, print any of them.
If there is no answer, print a single line ""NO"" (without the quotes)." "2000  x1603"
490D Chocolate "brute force, dfs and similar, math, meet-in-the-middle, number theory" "Polycarpus likes giving presents to Paraskevi. He has bought two chocolate bars, each of them has the shape of a segmented rectangle. The first bar is a1\xe2\x80\x89\xc3\x97\xe2\x80\x89b1 segments large and the second one is a2\xe2\x80\x89\xc3\x97\xe2\x80\x89b2 segments large.
Polycarpus wants to give Paraskevi one of the bars at the lunch break and eat the other one himself. Besides, he wants to show that Polycarpus\'s mind and Paraskevi\'s beauty are equally matched, so the two bars must have the same number of squares.
To make the bars have the same number of squares, Polycarpus eats a little piece of chocolate each minute. Each minute he does the following:
In the first case he is left with a half, of the bar and in the second case he is left with two thirds of the bar.
Both variants aren\'t always possible, and sometimes Polycarpus cannot chip off a half nor a third. For example, if the bar is 16\xe2\x80\x89\xc3\x97\xe2\x80\x8923, then Polycarpus can chip off a half, but not a third. If the bar is 20\xe2\x80\x89\xc3\x97\xe2\x80\x8918, then Polycarpus can chip off both a half and a third. If the bar is 5\xe2\x80\x89\xc3\x97\xe2\x80\x897, then Polycarpus cannot chip off a half nor a third.
What is the minimum number of minutes Polycarpus needs to make two bars consist of the same number of squares? Find not only the required minimum number of minutes, but also the possible sizes of the bars after the process.
The first line of the input contains integers a1,\xe2\x80\x89b1 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a1,\xe2\x80\x89b1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the initial sizes of the first chocolate bar. The second line of the input contains integers a2,\xe2\x80\x89b2 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a2,\xe2\x80\x89b2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the initial sizes of the second bar.
You can use the data of type int64 (in Pascal), long long (in \xd0\xa1++), long (in Java) to process large integers (exceeding 231\xe2\x80\x89-\xe2\x80\x891).
In the first line print m \xe2\x80\x94 the sought minimum number of minutes. In the second and third line print the possible sizes of the bars after they are leveled in m minutes. Print the sizes using the format identical to the input format. Print the sizes (the numbers in the printed pairs) in any order. The second line must correspond to the first bar and the third line must correspond to the second bar. If there are multiple solutions, print any of them.
If there is no solution, print a single line with integer -1." "1900  x2144"
490C "Hacking Cypher" "brute force, math, number theory, strings" "Polycarpus participates in a competition for hacking into a new secure messenger. He\'s almost won.
Having carefully studied the interaction protocol, Polycarpus came to the conclusion that the secret key can be obtained if he properly cuts the public key of the application into two parts. The public key is a long integer which may consist of even a million digits!
Polycarpus needs to find such a way to cut the public key into two nonempty parts, that the first (left) part is divisible by a as a separate number, and the second (right) part is divisible by b as a separate number. Both parts should be positive integers that have no leading zeros. Polycarpus knows values a and b.
Help Polycarpus and find any suitable method to cut the public key.
The first line of the input contains the public key of the messenger \xe2\x80\x94 an integer without leading zeroes, its length is in range from 1 to 106 digits. The second line contains a pair of space-separated positive integers a, b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108).
In the first line print ""YES"" (without the quotes), if the method satisfying conditions above exists. In this case, next print two lines \xe2\x80\x94 the left and right parts after the cut. These two parts, being concatenated, must be exactly identical to the public key. The left part must be divisible by a, and the right part must be divisible by b. The two parts must be positive integers having no leading zeros. If there are several answers, print any of them.
If there is no answer, print in a single line ""NO"" (without the quotes)." "1700  x9103"
490B Queue "dsu, implementation" "During the lunch break all n Berland State University students lined up in the food court. However, it turned out that the food court, too, has a lunch break and it temporarily stopped working.
Standing in a queue that isn\'t being served is so boring! So, each of the students wrote down the number of the student ID of the student that stands in line directly in front of him, and the student that stands in line directly behind him. If no one stands before or after a student (that is, he is the first one or the last one), then he writes down number 0 instead (in Berland State University student IDs are numerated from 1).
After that, all the students went about their business. When they returned, they found out that restoring the queue is not such an easy task.
Help the students to restore the state of the queue by the numbers of the student ID\'s of their neighbors in the queue.
The first line contains integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105) \xe2\x80\x94 the number of students in the queue. 
Then n lines follow, i-th line contains the pair of integers ai,\xe2\x80\x89bi (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), where ai is the ID number of a person in front of a student and bi is the ID number of a person behind a student. The lines are given in the arbitrary order. Value 0 is given instead of a neighbor\'s ID number if the neighbor doesn\'t exist.
The ID numbers of all students are distinct. It is guaranteed that the records correspond too the queue where all the students stand in some order.
Print a sequence of n integers x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn \xe2\x80\x94 the sequence of ID numbers of all the students in the order they go in the queue from the first student to the last one.
The picture illustrates the queue for the first sample." "1500  x6016"
490A "Team Olympiad" "greedy, implementation, sortings" "The School \xe2\x84\x960 of the capital of Berland has n children studying in it. All the children in this school are gifted: some of them are good at programming, some are good at maths, others are good at PE (Physical Education). Hence, for each child we know value ti:
Each child happens to be good at exactly one of these three subjects.
The Team Scientific Decathlon Olympias requires teams of three students. The school teachers decided that the teams will be composed of three children that are good at different subjects. That is, each team must have one mathematician, one programmer and one sportsman. Of course, each child can be a member of no more than one team.
What is the maximum number of teams that the school will be able to present at the Olympiad? How should the teams be formed for that?
The first line contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000) \xe2\x80\x94 the number of children in the school. The second line contains n integers t1,\xe2\x80\x89t2,\xe2\x80\x89...,\xe2\x80\x89tn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893), where ti describes the skill of the i-th child.
In the first line output integer w \xe2\x80\x94 the largest possible number of teams. 
Then print w lines, containing three numbers in each line. Each triple represents the indexes of the children forming the team. You can print both the teams, and the numbers in the triplets in any order. The children are numbered from 1 to n in the order of their appearance in the input. Each child must participate in no more than one team. If there are several solutions, print any of them.
If no teams can be compiled, print the only line with value w equal to 0." "800  x59949"
489F "Special Matrices" "combinatorics, dp" "An n\xe2\x80\x89\xc3\x97\xe2\x80\x89n square matrix is special, if:
You are given n and the first m rows of the matrix. Print the number of special n\xe2\x80\x89\xc3\x97\xe2\x80\x89n matrices, such that the first m rows coincide with the given ones.
As the required value can be rather large, print the remainder after dividing the value by the given number mod.
The first line of the input contains three integers n, m, mod (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89mod\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). Then m lines follow, each of them contains n characters \xe2\x80\x94 the first rows of the required special matrices. Each of these lines contains exactly two characters \'1\', the rest characters are \'0\'. Each column of the given m\xe2\x80\x89\xc3\x97\xe2\x80\x89n table contains at most two numbers one.
Print the remainder after dividing the required value by number mod.
For the first test the required matrices are: 
In the second test the required matrix is already fully given, so the answer is 1." "2100  x1673"
489E Hiking "binary search, dp" "A traveler is planning a water hike along the river. He noted the suitable rest points for the night and wrote out their distances from the starting point. Each of these locations is further characterized by its picturesqueness, so for the i-th rest point the distance from the start equals xi, and its picturesqueness equals bi. The traveler will move down the river in one direction, we can assume that he will start from point 0 on the coordinate axis and rest points are points with coordinates xi.
Every day the traveler wants to cover the distance l. In practice, it turns out that this is not always possible, because he needs to end each day at one of the resting points. In addition, the traveler is choosing between two desires: cover distance l every day and visit the most picturesque places.
Let\'s assume that if the traveler covers distance rj in a day, then he feels frustration , and his total frustration over the hike is calculated as the total frustration on all days.
Help him plan the route so as to minimize the relative total frustration: the total frustration divided by the total picturesqueness of all the rest points he used.
The traveler\'s path must end in the farthest rest point.
The first line of the input contains integers n,\xe2\x80\x89l (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of rest points and the optimal length of one day path.
Then n lines follow, each line describes one rest point as a pair of integers xi,\xe2\x80\x89bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106). No two rest points have the same xi, the lines are given in the order of strictly increasing xi.
Print the traveler\'s path as a sequence of the numbers of the resting points he used in the order he used them. Number the points from 1 to n in the order of increasing xi. The last printed number must be equal to n.
In the sample test the minimum value of relative total frustration approximately equals 0.097549. This value can be calculated as ." "2300  x1033"
489D "Unbearable Controversy of Being" "brute force, combinatorics, dfs and similar, graphs" "Tomash keeps wandering off and getting lost while he is walking along the streets of Berland. It\'s no surprise! In his home town, for any pair of intersections there is exactly one way to walk from one intersection to the other one. The capital of Berland is very different!
Tomash has noticed that even simple cases of ambiguity confuse him. So, when he sees a group of four distinct intersections a, b, c and d, such that there are two paths from a to c \xe2\x80\x94 one through b and the other one through d, he calls the group a ""damn rhombus"". Note that pairs (a,\xe2\x80\x89b), (b,\xe2\x80\x89c), (a,\xe2\x80\x89d), (d,\xe2\x80\x89c) should be directly connected by the roads. Schematically, a damn rhombus is shown on the figure below:
Other roads between any of the intersections don\'t make the rhombus any more appealing to Tomash, so the four intersections remain a ""damn rhombus"" for him.
Given that the capital of Berland has n intersections and m roads and all roads are unidirectional and are known in advance, find the number of ""damn rhombi"" in the city.
When rhombi are compared, the order of intersections b and d doesn\'t matter.
The first line of the input contains a pair of integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893000,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930000) \xe2\x80\x94 the number of intersections and roads, respectively. Next m lines list the roads, one per line. Each of the roads is given by a pair of integers ai,\xe2\x80\x89bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n;ai\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bi) \xe2\x80\x94 the number of the intersection it goes out from and the number of the intersection it leads to. Between a pair of intersections there is at most one road in each of the two directions.
It is not guaranteed that you can get from any intersection to any other one.
Print the required number of ""damn rhombi""." "1700  x6706"
489C "Given Length and Sum of Digits..." "dp, greedy, implementation" "You have a positive integer m and a non-negative integer s. Your task is to find the smallest and the largest of the numbers that have length m and sum of digits s. The required numbers should be non-negative integers written in the decimal base without leading zeroes.
The single line of the input contains a pair of integers m, s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89900) \xe2\x80\x94 the length and the sum of the digits of the required numbers.
In the output print the pair of the required non-negative integer numbers \xe2\x80\x94 first the minimum possible number, then \xe2\x80\x94 the maximum possible number. If no numbers satisfying conditions required exist, print the pair of numbers ""-1 -1"" (without the quotes)." "1400  x46539"
489B "BerSU Ball" "dfs and similar, dp, graph matchings, greedy, sortings, two pointers" "The Berland State University is hosting a ballroom dance in celebration of its 100500-th anniversary! n boys and m girls are already busy rehearsing waltz, minuet, polonaise and quadrille moves.
We know that several boy&girl pairs are going to be invited to the ball. However, the partners\' dancing skill in each pair must differ by at most one.
For each boy, we know his dancing skills. Similarly, for each girl we know her dancing skills. Write a code that can determine the largest possible number of pairs that can be formed from n boys and m girls.
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of boys. The second line contains sequence a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), where ai is the i-th boy\'s dancing skill.
Similarly, the third line contains an integer m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100) \xe2\x80\x94 the number of girls. The fourth line contains sequence b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bm (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), where bj is the j-th girl\'s dancing skill.
Print a single number \xe2\x80\x94 the required maximum possible number of pairs." "1200  x49407"
489A SwapSort "greedy, implementation, sortings" "In this problem your goal is to sort an array consisting of n integers in at most n swaps. For the given array find the sequence of swaps that makes the array sorted in the non-descending order. Swaps are performed consecutively, one after another.
Note that in this problem you do not have to minimize the number of swaps \xe2\x80\x94 your task is to find any sequence that is no longer than n.
The first line of the input contains integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893000) \xe2\x80\x94 the number of array elements. The second line contains elements of array: a0,\xe2\x80\x89a1,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891 (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), where ai is the i-th element of the array. The elements are numerated from 0 to n\xe2\x80\x89-\xe2\x80\x891 from left to right. Some integers may appear in the array more than once.
In the first line print k (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the number of swaps. Next k lines must contain the descriptions of the k swaps, one per line. Each swap should be printed as a pair of integers i, j (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891), representing the swap of elements ai and aj. You can print indices in the pairs in any order. The swaps are performed in the order they appear in the output, from the first to the last. It is allowed to print i\xe2\x80\x89=\xe2\x80\x89j and swap the same pair of elements multiple times.
If there are multiple answers, print any of them. It is guaranteed that at least one answer exists." "1200  x10091"
488B "Candy Boxes" "brute force, constructive algorithms, math" "There is an old tradition of keeping 4 boxes of candies in the house in Cyberland. The numbers of candies are special if their arithmetic mean, their median and their range are all equal. By definition, for a set {x1,\xe2\x80\x89x2,\xe2\x80\x89x3,\xe2\x80\x89x4} (x1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x3\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x4) arithmetic mean is , median is  and range is x4\xe2\x80\x89-\xe2\x80\x89x1. The arithmetic mean and median are not necessary integer. It is well-known that if those three numbers are same, boxes will create a ""debugging field"" and codes in the field will have no bugs.
For example, 1,\xe2\x80\x891,\xe2\x80\x893,\xe2\x80\x893 is the example of 4 numbers meeting the condition because their mean, median and range are all equal to 2.
Jeff has 4 special boxes of candies. However, something bad has happened! Some of the boxes could have been lost and now there are only n (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894) boxes remaining. The i-th remaining box contains ai candies.
Now Jeff wants to know: is there a possible way to find the number of candies of the 4\xe2\x80\x89-\xe2\x80\x89n missing boxes, meeting the condition above (the mean, median and range are equal)?
The first line of input contains an only integer n (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894).
The next n lines contain integers ai, denoting the number of candies in the i-th box (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500).
In the first output line, print ""YES"" if a solution exists, or print ""NO"" if there is no solution.
If a solution exists, you should output 4\xe2\x80\x89-\xe2\x80\x89n more lines, each line containing an integer b, denoting the number of candies in a missing box.
All your numbers b must satisfy inequality 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106. It is guaranteed that if there exists a positive integer solution, you can always find such b\'s meeting the condition. If there are multiple answers, you are allowed to print any of them.
Given numbers ai may follow in any order in the input, not necessary in non-decreasing.
ai may have stood at any positions in the original set, not necessary on lowest n first positions.
For the first sample, the numbers of candies in 4 boxes can be 1,\xe2\x80\x891,\xe2\x80\x893,\xe2\x80\x893. The arithmetic mean, the median and the range of them are all 2.
For the second sample, it\'s impossible to find the missing number of candies.
In the third example no box has been lost and numbers satisfy the condition.
You may output b in any order." "1900  x2126"
488A "Giga Tower" "brute force" "Giga Tower is the tallest and deepest building in Cyberland. There are 17\xe2\x80\x89777\xe2\x80\x89777\xe2\x80\x89777 floors, numbered from \xe2\x80\x89-\xe2\x80\x898\xe2\x80\x89888\xe2\x80\x89888\xe2\x80\x89888 to 8\xe2\x80\x89888\xe2\x80\x89888\xe2\x80\x89888. In particular, there is floor 0 between floor \xe2\x80\x89-\xe2\x80\x891 and floor 1. Every day, thousands of tourists come to this place to enjoy the wonderful view. 
In Cyberland, it is believed that the number ""8"" is a lucky number (that\'s why Giga Tower has 8\xe2\x80\x89888\xe2\x80\x89888\xe2\x80\x89888 floors above the ground), and, an integer is lucky, if and only if its decimal notation contains at least one digit ""8"". For example, 8,\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x89180,\xe2\x80\x89808 are all lucky while 42,\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x8910 are not. In the Giga Tower, if you write code at a floor with lucky floor number, good luck will always be with you (Well, this round is #278, also lucky, huh?).
Tourist Henry goes to the tower to seek good luck. Now he is at the floor numbered a. He wants to find the minimum positive integer b, such that, if he walks b floors higher, he will arrive at a floor with a lucky number. 
The only line of input contains an integer a (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the minimum b in a line.
For the first sample, he has to arrive at the floor numbered 180.
For the second sample, he will arrive at 8.
Note that b should be positive, so the answer for the third sample is 10, not 0." "1100  x14305"
487E Tourists "data structures, dfs and similar, graphs, trees" "There are n cities in Cyberland, numbered from 1 to n, connected by m bidirectional roads. The j-th road connects city aj and bj.
For tourists, souvenirs are sold in every city of Cyberland. In particular, city i sell it at a price of wi.
Now there are q queries for you to handle. There are two types of queries:
More formally, we can define routes as follow:
The first line of input contains three integers n,\xe2\x80\x89m,\xe2\x80\x89q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m,\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), separated by a single space.
Next n lines contain integers wi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Next m lines contain pairs of space-separated integers aj and bj (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89aj,\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89aj\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89bj).
It is guaranteed that there is at most one road connecting the same pair of cities. There is always at least one valid route between any two cities.
Next q lines each describe a query. The format is ""C a w"" or ""A a b"" (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
For each query of type ""A"", output the corresponding answer.
For the second sample, an optimal routes are:
From 2 to 3 it is [2,\xe2\x80\x893].
From 6 to 4 it is [6,\xe2\x80\x895,\xe2\x80\x891,\xe2\x80\x892,\xe2\x80\x894].
From 6 to 7 it is [6,\xe2\x80\x895,\xe2\x80\x897].
From 3 to 3 it is [3]." "3200  x2380"
487D "Conveyor Belts" "data structures" "Automatic Bakery of Cyberland (ABC) recently bought an n\xe2\x80\x89\xc3\x97\xe2\x80\x89m rectangle table. To serve the diners, ABC placed seats around the table. The size of each seat is equal to a unit square, so there are 2(n\xe2\x80\x89+\xe2\x80\x89m) seats in total.
ABC placed conveyor belts on each unit square on the table. There are three types of conveyor belts: ""^"", ""<"" and "">"". A ""^"" belt can bring things upwards. ""<"" can bring leftwards and "">"" can bring rightwards.
Let\'s number the rows with 1 to n from top to bottom, the columns with 1 to m from left to right. We consider the seats above and below the top of the table are rows 0 and n\xe2\x80\x89+\xe2\x80\x891 respectively. Also we define seats to the left of the table and to the right of the table to be column 0 and m\xe2\x80\x89+\xe2\x80\x891. Due to the conveyor belts direction restriction there are currently no way for a diner sitting in the row n\xe2\x80\x89+\xe2\x80\x891 to be served.
Given the initial table, there will be q events in order. There are two types of events:
Queries are performed separately meaning that even if the bread got stuck in an infinite loop, it won\'t affect further queries.
The first line of input contains three integers n, m and q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), separated by a space.
Next n lines, each line contains m characters, describing the table. The characters can only be one of ""<^>"".
Next q lines, each line describes an event. The format is ""C x y c"" or ""A x y"" (Consecutive elements are separated by a space). It\'s guaranteed that 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m. c is a character from the set ""<^>"".
There are at most 10000 queries of ""C"" type.
For each event of type ""A"", output two integers tx, ty in a line, separated by a space, denoting the destination of (x,\xe2\x80\x89y) is (tx,\xe2\x80\x89ty).
If there is an infinite loop, you should output tx\xe2\x80\x89=\xe2\x80\x89ty\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891.
For the first sample:
If the bread goes from (2,\xe2\x80\x891), it will go out of the table at (1,\xe2\x80\x893).
After changing the conveyor belt of (1,\xe2\x80\x892) to ""<"", when the bread goes from (2,\xe2\x80\x891) again, it will get stuck at ""><"", so output is (\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891)." "2700  x901"
487C "Prefix Product Sequence" "constructive algorithms, math, number theory" "Consider a sequence [a1,\xe2\x80\x89a2,\xe2\x80\x89... ,\xe2\x80\x89an]. Define its prefix product sequence .
Now given n, find a permutation of [1,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89n], such that its prefix product sequence is a permutation of [0,\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89n\xe2\x80\x89-\xe2\x80\x891].
The only input line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
In the first output line, print ""YES"" if such sequence exists, or print ""NO"" if no such sequence exists.
If any solution exists, you should output n more lines. i-th line contains only an integer ai. The elements of the sequence should be different positive integers no larger than n.
If there are multiple solutions, you are allowed to print any of them.
For the second sample, there are no valid sequences." "2300  x2794"
487B Strip "binary search, data structures, dp, two pointers" "Alexandra has a paper strip with n numbers on it. Let\'s call them ai from left to right.
Now Alexandra wants to split it into some pieces (possibly 1). For each piece of strip, it must satisfy:
Please help Alexandra to find the minimal number of pieces meeting the condition above.
The first line contains three space-separated integers n,\xe2\x80\x89s,\xe2\x80\x89l (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89s\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
The second line contains n integers ai separated by spaces (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Output the minimal number of strip pieces.
If there are no ways to split the strip, output -1.
For the first sample, we can split the strip into 3 pieces: [1,\xe2\x80\x893,\xe2\x80\x891],\xe2\x80\x89[2,\xe2\x80\x894],\xe2\x80\x89[1,\xe2\x80\x892].
For the second sample, we can\'t let 1 and 100 be on the same piece, so no solution exists." "2000  x3543"
487A "Fight the Monster" "binary search, brute force, implementation" "A monster is attacking the Cyberland!
Master Yang, a braver, is going to beat the monster. Yang and the monster each have 3 attributes: hitpoints (HP), offensive power (ATK) and defensive power (DEF).
During the battle, every second the monster\'s HP decrease by max(0,\xe2\x80\x89ATKY\xe2\x80\x89-\xe2\x80\x89DEFM), while Yang\'s HP decreases by max(0,\xe2\x80\x89ATKM\xe2\x80\x89-\xe2\x80\x89DEFY), where index Y denotes Master Yang and index M denotes monster. Both decreases happen simultaneously Once monster\'s HP\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x890 and the same time Master Yang\'s HP\xe2\x80\x89>\xe2\x80\x890, Master Yang wins.
Master Yang can buy attributes from the magic shop of Cyberland: h bitcoins per HP, a bitcoins per ATK, and d bitcoins per DEF.
Now Master Yang wants to know the minimum number of bitcoins he can spend in order to win.
The first line contains three integers HPY,\xe2\x80\x89ATKY,\xe2\x80\x89DEFY, separated by a space, denoting the initial HP, ATK and DEF of Master Yang.
The second line contains three integers HPM,\xe2\x80\x89ATKM,\xe2\x80\x89DEFM, separated by a space, denoting the HP, ATK and DEF of the monster.
The third line contains three integers h,\xe2\x80\x89a,\xe2\x80\x89d, separated by a space, denoting the price of 1 HP, 1 ATK and 1 DEF.
All numbers in input are integer and lie between 1 and 100 inclusively.
The only output line should contain an integer, denoting the minimum bitcoins Master Yang should spend in order to win.
For the first sample, prices for ATK and DEF are extremely high. Master Yang can buy 99 HP, then he can beat the monster with 1 HP left.
For the second sample, Master Yang is strong enough to beat the monster, so he doesn\'t need to buy anything." "1800  x3772"
486E "LIS of Sequence" "data structures, dp, greedy, hashing, math" "The next ""Data Structures and Algorithms"" lesson will be about Longest Increasing Subsequence (LIS for short) of a sequence. For better understanding, Nam decided to learn it a few days before the lesson.
Nam created a sequence a consisting of n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) elements a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105). A subsequence ai1,\xe2\x80\x89ai2,\xe2\x80\x89...,\xe2\x80\x89aik where 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i1\xe2\x80\x89<\xe2\x80\x89i2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89ik\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n is called increasing if ai1\xe2\x80\x89<\xe2\x80\x89ai2\xe2\x80\x89<\xe2\x80\x89ai3\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89aik. An increasing subsequence is called longest if it has maximum length among all increasing subsequences. 
Nam realizes that a sequence may have several longest increasing subsequences. Hence, he divides all indexes i (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), into three groups:
Since the number of longest increasing subsequences of a may be very large, categorizing process is very difficult. Your task is to help him finish this job.
The first line contains the single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) denoting the number of elements of sequence a.
The second line contains n space-separated integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
Print a string consisting of n characters. i-th character should be \'1\', \'2\' or \'3\' depending on which group among listed above index i belongs to.
In the second sample, sequence a consists of 4 elements: {a1,\xe2\x80\x89a2,\xe2\x80\x89a3,\xe2\x80\x89a4} = {1,\xe2\x80\x893,\xe2\x80\x892,\xe2\x80\x895}. Sequence a has exactly 2 longest increasing subsequences of length 3, they are {a1,\xe2\x80\x89a2,\xe2\x80\x89a4} = {1,\xe2\x80\x893,\xe2\x80\x895} and {a1,\xe2\x80\x89a3,\xe2\x80\x89a4} = {1,\xe2\x80\x892,\xe2\x80\x895}.
In the third sample, sequence a consists of 4 elements: {a1,\xe2\x80\x89a2,\xe2\x80\x89a3,\xe2\x80\x89a4} = {1,\xe2\x80\x895,\xe2\x80\x892,\xe2\x80\x893}. Sequence a have exactly 1 longest increasing subsequence of length 3, that is {a1,\xe2\x80\x89a3,\xe2\x80\x89a4} = {1,\xe2\x80\x892,\xe2\x80\x893}." "2200  x2282"
486D "Valid Sets" "dfs and similar, dp, math, trees" "As you know, an undirected connected graph with n nodes and n\xe2\x80\x89-\xe2\x80\x891 edges is called a tree. You are given an integer d and a tree consisting of n nodes. Each node i has a value ai associated with it.
We call a set S of tree nodes valid if following conditions are satisfied:
Your task is to count the number of valid sets. Since the result can be very large, you must print its remainder modulo 1000000007 (109\xe2\x80\x89+\xe2\x80\x897).
The first line contains two space-separated integers d (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000) and n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000).
The second line contains n space-separated positive integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000).
Then the next n\xe2\x80\x89-\xe2\x80\x891 line each contain pair of integers u and v (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89u,\xe2\x80\x89v\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) denoting that there is an edge between u and v. It is guaranteed that these edges form a tree.
Print the number of valid sets modulo 1000000007.
In the first sample, there are exactly 8 valid sets: {1},\xe2\x80\x89{2},\xe2\x80\x89{3},\xe2\x80\x89{4},\xe2\x80\x89{1,\xe2\x80\x892},\xe2\x80\x89{1,\xe2\x80\x893},\xe2\x80\x89{3,\xe2\x80\x894} and {1,\xe2\x80\x893,\xe2\x80\x894}. Set {1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894} is not valid, because the third condition isn\'t satisfied. Set {1,\xe2\x80\x894} satisfies the third condition, but conflicts with the second condition." "2100  x4047"
486C "Palindrome Transformation" "brute force, greedy, implementation" "Nam is playing with a string on his computer. The string consists of n lowercase English letters. It is meaningless, so Nam decided to make the string more beautiful, that is to make it be a palindrome by using 4 arrow keys: left, right, up, down.
There is a cursor pointing at some symbol of the string. Suppose that cursor is at position i (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, the string uses 1-based indexing) now. Left and right arrow keys are used to move cursor around the string. The string is cyclic, that means that when Nam presses left arrow key, the cursor will move to position i\xe2\x80\x89-\xe2\x80\x891 if i\xe2\x80\x89>\xe2\x80\x891 or to the end of the string (i. e. position n) otherwise. The same holds when he presses the right arrow key (if i\xe2\x80\x89=\xe2\x80\x89n, the cursor appears at the beginning of the string).
When Nam presses up arrow key, the letter which the text cursor is pointing to will change to the next letter in English alphabet (assuming that alphabet is also cyclic, i. e. after \'z\' follows \'a\'). The same holds when he presses the down arrow key.
Initially, the text cursor is at position p. 
Because Nam has a lot homework to do, he wants to complete this as fast as possible. Can you help him by calculating the minimum number of arrow keys presses to make the string to be a palindrome?
The first line contains two space-separated integers n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) and p (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), the length of Nam\'s string and the initial position of the text cursor.
The next line contains n lowercase characters of Nam\'s string.
Print the minimum number of presses needed to change string into a palindrome.
A string is a palindrome if it reads the same forward or reversed.
In the sample test, initial Nam\'s string is:  (cursor position is shown bold).
In optimal solution, Nam may do 6 following steps:
The result, , is now a palindrome." "1700  x11770"
486B "OR in Matrix" "greedy, hashing, implementation" "Let\'s define logical OR as an operation on two logical values (i. e. values that belong to the set {0,\xe2\x80\x891}) that is equal to 1 if either or both of the logical values is set to 1, otherwise it is 0. We can define logical OR of three or more logical values in the same manner:
 where  is equal to 1 if some ai\xe2\x80\x89=\xe2\x80\x891, otherwise it is equal to 0.
Nam has a matrix A consisting of m rows and n columns. The rows are numbered from 1 to m, columns are numbered from 1 to n. Element at row i (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) and column j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) is denoted as Aij. All elements of A are either 0 or 1. From matrix A, Nam creates another matrix B of the same size using formula:
.
(Bij is OR of all elements in row i and column j of matrix A)
Nam gives you matrix B and challenges you to guess matrix A. Although Nam is smart, he could probably make a mistake while calculating matrix B, since size of A can be large.
The first line contains two integer m and n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m,\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), number of rows and number of columns of matrices respectively.
The next m lines each contain n integers separated by spaces describing rows of matrix B (each element of B is either 0 or 1).
In the first line, print ""NO"" if Nam has made a mistake when calculating B, otherwise print ""YES"". If the first line is ""YES"", then also print m rows consisting of n integers representing matrix A that can produce given matrix B. If there are several solutions print any one." "1300  x17833"
486A "Calculating Function" "implementation, math" "For a positive integer n let\'s define a function f:
f(n)\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x892\xe2\x80\x89-\xe2\x80\x893\xe2\x80\x89+\xe2\x80\x89..\xe2\x80\x89+\xe2\x80\x89(\xe2\x80\x89-\xe2\x80\x891)nn 
Your task is to calculate f(n) for a given integer n.
The single line contains the positive integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891015).
Print f(n) in a single line.
f(4)\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x892\xe2\x80\x89-\xe2\x80\x893\xe2\x80\x89+\xe2\x80\x894\xe2\x80\x89=\xe2\x80\x892
f(5)\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89+\xe2\x80\x892\xe2\x80\x89-\xe2\x80\x893\xe2\x80\x89+\xe2\x80\x894\xe2\x80\x89-\xe2\x80\x895\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x893" "800  x120545"
485B "Valuable Resources" "brute force, greedy" "Many computer strategy games require building cities, recruiting army, conquering tribes, collecting resources. Sometimes it leads to interesting problems. 
Let\'s suppose that your task is to build a square city. The world map uses the Cartesian coordinates. The sides of the city should be parallel to coordinate axes. The map contains mines with valuable resources, located at some points with integer coordinates. The sizes of mines are relatively small, i.e. they can be treated as points. The city should be built in such a way that all the mines are inside or on the border of the city square. 
Building a city takes large amount of money depending on the size of the city, so you have to build the city with the minimum area. Given the positions of the mines find the minimum possible area of the city.
The first line of the input contains number n \xe2\x80\x94 the number of mines on the map (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000). Each of the next n lines contains a pair of integers xi and yi \xe2\x80\x94 the coordinates of the corresponding mine (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). All points are pairwise distinct.
Print the minimum area of the city that can cover all the mines with valuable resources." "1300  x6539"
485A Factory "implementation, math, matrices" "One industrial factory is reforming working plan. The director suggested to set a mythical detail production norm. If at the beginning of the day there were x details in the factory storage, then by the end of the day the factory has to produce  (remainder after dividing x by m) more details. Unfortunately, no customer has ever bought any mythical detail, so all the details produced stay on the factory. 
The board of directors are worried that the production by the given plan may eventually stop (that means that there will be \xd0\xb0 moment when the current number of details on the factory is divisible by m). 
Given the number of details a on the first day and number m check if the production stops at some moment.
The first line contains two integers a and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
Print ""Yes"" (without quotes) if the production will eventually stop, otherwise print ""No""." "1400  x8304"
484E "Sign on Fence" "binary search, constructive algorithms, data structures" "Bizon the Champion has recently finished painting his wood fence. The fence consists of a sequence of n panels of 1 meter width and of arbitrary height. The i-th panel\'s height is hi meters. The adjacent planks follow without a gap between them.
After Bizon painted the fence he decided to put a ""for sale"" sign on it. The sign will be drawn on a rectangular piece of paper and placed on the fence so that the sides of the sign are parallel to the fence panels and are also aligned with the edges of some panels. Bizon the Champion introduced the following constraints for the sign position:
The sign will be really pretty, So Bizon the Champion wants the sign\'s height to be as large as possible.
You are given the description of the fence and several queries for placing sign. For each query print the maximum possible height of the sign that can be placed on the corresponding segment of the fence with the given fixed width of the sign.
The first line of the input contains integer n \xe2\x80\x94 the number of panels in the fence (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105). 
The second line contains n space-separated integers hi, \xe2\x80\x94 the heights of the panels (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). 
The third line contains an integer m \xe2\x80\x94 the number of the queries (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105). 
The next m lines contain the descriptions of the queries, each query is represented by three integers l, r and w (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89w\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89-\xe2\x80\x89l\xe2\x80\x89+\xe2\x80\x891) \xe2\x80\x94 the segment of the fence and the width of the sign respectively.
For each query print the answer on a separate line \xe2\x80\x94 the maximum height of the sign that can be put in the corresponding segment of the fence with all the conditions being satisfied.
The fence described in the sample looks as follows: 
The possible positions for the signs for all queries are given below." "2500  x2344"
484D Kindergarten "data structures, dp, greedy" "In a kindergarten, the children are being divided into groups. The teacher put the children in a line and associated each child with his or her integer charisma value. Each child should go to exactly one group. Each group should be a nonempty segment of consecutive children of a line. A group\'s sociability is the maximum difference of charisma of two children in the group (in particular, if the group consists of one child, its sociability equals a zero). 
The teacher wants to divide the children into some number of groups in such way that the total sociability of the groups is maximum. Help him find this value.
The first line contains integer n \xe2\x80\x94 the number of children in the line (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
The second line contains n integers ai \xe2\x80\x94 the charisma of the i-th child (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
Print the maximum possible total sociability of all groups.
In the first test sample one of the possible variants of an division is following: the first three children form a group with sociability 2, and the two remaining children form a group with sociability 1.
In the second test sample any division leads to the same result, the sociability will be equal to 0 in each group." "2400  x2635"
484C "Strange Sorting" "implementation, math" "How many specific orders do you know? Ascending order, descending order, order of ascending length, order of ascending polar angle... Let\'s have a look at another specific order: d-sorting. This sorting is applied to the strings of length at least d, where d is some positive integer. The characters of the string are sorted in following manner: first come all the 0-th characters of the initial string, then the 1-st ones, then the 2-nd ones and so on, in the end go all the (d\xe2\x80\x89-\xe2\x80\x891)-th characters of the initial string. By the i-th characters we mean all the character whose positions are exactly i modulo d. If two characters stand on the positions with the same remainder of integer division by d, their relative order after the sorting shouldn\'t be changed. The string is zero-indexed. For example, for string \'qwerty\':
Its 1-sorting is the string \'qwerty\' (all characters stand on 0 positions),
Its 2-sorting is the string \'qetwry\' (characters \'q\', \'e\' and \'t\' stand on 0 positions and characters \'w\', \'r\' and \'y\' are on 1 positions),
Its 3-sorting is the string \'qrwtey\' (characters \'q\' and \'r\' stand on 0 positions, characters \'w\' and \'t\' stand on 1 positions and characters \'e\' and \'y\' stand on 2 positions),
Its 4-sorting is the string \'qtwyer\',
Its 5-sorting is the string \'qywert\'.
You are given string S of length n and m shuffling operations of this string. Each shuffling operation accepts two integer arguments k and d and transforms string S as follows. For each i from 0 to n\xe2\x80\x89-\xe2\x80\x89k in the increasing order we apply the operation of d-sorting to the substring S[i..i\xe2\x80\x89+\xe2\x80\x89k\xe2\x80\x89-\xe2\x80\x891]. Here S[a..b] represents a substring that consists of characters on positions from a to b inclusive.
After each shuffling operation you need to print string S.
The first line of the input contains a non-empty string S of length n, consisting of lowercase and uppercase English letters and digits from 0 to 9. 
The second line of the input contains integer m \xe2\x80\x93 the number of shuffling operations (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xc2\xb7n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106). 
Following m lines contain the descriptions of the operations consisting of two integers k and d (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). 
After each operation print the current state of string S.
Here is detailed explanation of the sample. The first modification is executed with arguments k\xe2\x80\x89=\xe2\x80\x894, d\xe2\x80\x89=\xe2\x80\x892. That means that you need to apply 2-sorting for each substring of length 4 one by one moving from the left to the right. The string will transform in the following manner:
qwerty \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 qewrty \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 qerwty \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 qertwy
Thus, string S equals \'qertwy\' at the end of first query.
The second modification is executed with arguments k\xe2\x80\x89=\xe2\x80\x896, d\xe2\x80\x89=\xe2\x80\x893. As a result of this operation the whole string S is replaced by its 3-sorting: 
qertwy \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 qtewry
The third modification is executed with arguments k\xe2\x80\x89=\xe2\x80\x895, d\xe2\x80\x89=\xe2\x80\x892. 
qtewry \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 qertwy \xe2\x80\x89\xe2\x86\x92\xe2\x80\x89 qetyrw" "2600  x594"
484B "Maximum Value" "binary search, math, sortings, two pointers" "You are given a sequence a consisting of n integers. Find the maximum possible value of  (integer remainder of ai divided by aj), where 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and ai\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89aj.
The first line contains integer n \xe2\x80\x94 the length of the sequence (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105). 
The second line contains n space-separated integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106).
Print the answer to the problem." "2100  x7077"
484A Bits "bitmasks, constructive algorithms" "Let\'s denote as  the number of bits set (\'1\' bits) in the binary representation of the non-negative integer x.
You are given multiple queries consisting of pairs of integers l and r. For each query, find the x, such that l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r, and  is maximum possible. If there are multiple such numbers find the smallest of them.
The first line contains integer n \xe2\x80\x94 the number of queries (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910000).
Each of the following n lines contain two integers li,\xe2\x80\x89ri \xe2\x80\x94 the arguments for the corresponding query (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018).
For each query print the answer in a separate line.
The binary representations of numbers from 1 to 10 are listed below:
110\xe2\x80\x89=\xe2\x80\x8912
210\xe2\x80\x89=\xe2\x80\x89102
310\xe2\x80\x89=\xe2\x80\x89112
410\xe2\x80\x89=\xe2\x80\x891002
510\xe2\x80\x89=\xe2\x80\x891012
610\xe2\x80\x89=\xe2\x80\x891102
710\xe2\x80\x89=\xe2\x80\x891112
810\xe2\x80\x89=\xe2\x80\x8910002
910\xe2\x80\x89=\xe2\x80\x8910012
1010\xe2\x80\x89=\xe2\x80\x8910102" "1700  x11468"
483B "Friends and Presents" "binary search, math" "You have two friends. You want to present each of them several positive integers. You want to present cnt1 numbers to the first friend and cnt2 numbers to the second friend. Moreover, you want all presented numbers to be distinct, that also means that no number should be presented to both friends.
In addition, the first friend does not like the numbers that are divisible without remainder by prime number x. The second one does not like the numbers that are divisible without remainder by prime number y. Of course, you\'re not going to present your friends numbers they don\'t like.
Your task is to find such minimum number v, that you can form presents using numbers from a set 1,\xe2\x80\x892,\xe2\x80\x89...,\xe2\x80\x89v. Of course you may choose not to present some numbers at all.
A positive integer number greater than 1 is called prime if it has no positive divisors other than 1 and itself.
The only line contains four positive integers cnt1, cnt2, x, y (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89cnt1,\xe2\x80\x89cnt2\xe2\x80\x89<\xe2\x80\x89109; cnt1\xe2\x80\x89+\xe2\x80\x89cnt2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109; 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89<\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xc2\xb7104) \xe2\x80\x94 the numbers that are described in the statement. It is guaranteed that numbers x, y are prime.
Print a single integer \xe2\x80\x94 the answer to the problem.
In the first sample you give the set of numbers {1,\xe2\x80\x893,\xe2\x80\x895} to the first friend and the set of numbers {2} to the second friend. Note that if you give set {1,\xe2\x80\x893,\xe2\x80\x895} to the first friend, then we cannot give any of the numbers 1, 3, 5 to the second friend. 
In the second sample you give the set of numbers {3} to the first friend, and the set of numbers {1,\xe2\x80\x892,\xe2\x80\x894} to the second friend. Thus, the answer to the problem is 4." "1800  x4090"
483A Counterexample "brute force, implementation, math, number theory" "Your friend has recently learned about coprime numbers. A pair of numbers {a,\xe2\x80\x89b} is called coprime if the maximum number that divides both a and b is equal to one. 
Your friend often comes up with different statements. He has recently supposed that if the pair (a,\xe2\x80\x89b) is coprime and the pair (b,\xe2\x80\x89c) is coprime, then the pair (a,\xe2\x80\x89c) is coprime. 
You want to find a counterexample for your friend\'s statement. Therefore, your task is to find three distinct numbers (a,\xe2\x80\x89b,\xe2\x80\x89c), for which the statement is false, and the numbers meet the condition l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a\xe2\x80\x89<\xe2\x80\x89b\xe2\x80\x89<\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r. 
More specifically, you need to find three numbers (a,\xe2\x80\x89b,\xe2\x80\x89c), such that l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a\xe2\x80\x89<\xe2\x80\x89b\xe2\x80\x89<\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r, pairs (a,\xe2\x80\x89b) and (b,\xe2\x80\x89c) are coprime, and pair (a,\xe2\x80\x89c) is not coprime.
The single line contains two positive space-separated integers l, r (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018; r\xe2\x80\x89-\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950).
Print three positive space-separated integers a, b, c \xe2\x80\x94 three distinct numbers (a,\xe2\x80\x89b,\xe2\x80\x89c) that form the counterexample. If there are several solutions, you are allowed to print any of them. The numbers must be printed in ascending order. 
If the counterexample does not exist, print the single number -1.
In the first sample pair (2,\xe2\x80\x894) is not coprime and pairs (2,\xe2\x80\x893) and (3,\xe2\x80\x894) are. 
In the second sample you cannot form a group of three distinct integers, so the answer is -1. 
In the third sample it is easy to see that numbers 900000000000000009 and 900000000000000021 are divisible by three. " "1100  x23215"
482E ELCA "data structures, trees" "You have a root tree containing n vertexes. Let\'s number the tree vertexes with integers from 1 to n. The tree root is in the vertex 1.
Each vertex (except fot the tree root) v has a direct ancestor pv. Also each vertex v has its integer value sv. 
Your task is to perform following queries:
Your task is following. Before starting performing queries and after each query you have to calculate expected value written on the lowest common ancestor of two equiprobably selected vertices i and j. Here lowest common ancestor of i and j is the deepest vertex that lies on the both of the path from the root to vertex i and the path from the root to vertex j. Please note that the vertices i and j can be the same (in this case their lowest common ancestor coincides with them).
The first line of the input contains integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7104) \xe2\x80\x94 the number of the tree vertexes. 
The second line contains n\xe2\x80\x89-\xe2\x80\x891 integer p2,\xe2\x80\x89p3,\xe2\x80\x89...,\xe2\x80\x89pn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the description of the tree edges. It is guaranteed that those numbers form a tree.
The third line contains n integers \xe2\x80\x94 s1,\xe2\x80\x89s2,\xe2\x80\x89... sn (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89si\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the values written on each vertex of the tree.
The next line contains integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7104) \xe2\x80\x94 the number of queries. Each of the following q lines contains the description of the query in the format described in the statement. It is guaranteed that query arguments u and v lie between 1 and n. It is guaranteed that argument t in the queries of type V meets limits 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106.
Print q\xe2\x80\x89+\xe2\x80\x891 number \xe2\x80\x94 the corresponding expected values. Your answer will be considered correct if its absolute or relative error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x899.
Note that in the query P v u if u lies in subtree of v you must perform assignment pu\xe2\x80\x89=\xe2\x80\x89v. An example of such case is the last query in the sample." "3200  x177"
482D "Random Function and Tree" "combinatorics, dp, trees" "You have a rooted tree consisting of n vertices. Let\'s number them with integers from 1 to n inclusive. The root of the tree is the vertex 1. For each i\xe2\x80\x89>\xe2\x80\x891 direct parent of the vertex i is pi. We say that vertex i is child for its direct parent pi.
You have initially painted all the vertices with red color. You like to repaint some vertices of the tree. To perform painting you use the function paint that you call with the root of the tree as an argument. Here is the pseudocode of this function:
As a result of this function, some vertices may change their colors to white or black and some of them may remain red.
Your task is to determine the number of distinct possible colorings of the vertices of the tree. We will assume that the coloring is possible if there is a nonzero probability to get this coloring with a single call of paint(1). We assume that the colorings are different if there is a pair of vertices that are painted with different colors in these colorings. Since the required number may be very large, find its remainder of division by 1000000007 (109\xe2\x80\x89+\xe2\x80\x897).
The first line contains a single integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of vertexes in the tree.
The second line contains n\xe2\x80\x89-\xe2\x80\x891 integers p2,\xe2\x80\x89p3,\xe2\x80\x89...,\xe2\x80\x89pn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89<\xe2\x80\x89i). Number pi is the parent of vertex i.
Print a single integer \xe2\x80\x94 the answer to the problem modulo 1000000007 (109\xe2\x80\x89+\xe2\x80\x897)
All possible coloring patterns of the first sample are given below." "2700  x535"
482C "Game with Strings" "bitmasks, dp, probabilities" "You play the game with your friend. The description of this game is listed below. 
Your friend creates n distinct strings of the same length m and tells you all the strings. Then he randomly chooses one of them. He chooses strings equiprobably, i.e. the probability of choosing each of the n strings equals . You want to guess which string was chosen by your friend. 
In order to guess what string your friend has chosen, you are allowed to ask him questions. Each question has the following form: \xc2\xabWhat character stands on position pos in the string you have chosen?\xc2\xbb A string is considered guessed when the answers to the given questions uniquely identify the string. After the string is guessed, you stop asking questions. 
You do not have a particular strategy, so as each question you equiprobably ask about a position that hasn\'t been yet mentioned. Your task is to determine the expected number of questions needed to guess the string chosen by your friend.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) \xe2\x80\x94 the number of strings your friend came up with.
The next n lines contain the strings that your friend has created. It is guaranteed that all the strings are distinct and only consist of large and small English letters. Besides, the lengths of all strings are the same and are between 1 to 20 inclusive.
Print the single number \xe2\x80\x94 the expected value. Your answer will be considered correct if its absolute or relative error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x899.
In the first sample the strings only differ in the character in the third position. So only the following situations are possible: 
Thus, the expected value is equal to 
In the second sample we need at most two questions as any pair of questions uniquely identifies the string. So the expected number of questions is .
In the third sample whatever position we ask about in the first question, we immediately identify the string." "2600  x935"
482B "Interesting Array" "constructive algorithms, data structures, trees" "We\'ll call an array of n non-negative integers a[1],\xe2\x80\x89a[2],\xe2\x80\x89...,\xe2\x80\x89a[n] interesting, if it meets m constraints. The i-th of the m constraints consists of three integers li, ri, qi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) meaning that value  should be equal to qi. 
Your task is to find any interesting array of n elements or state that such array doesn\'t exist.
Expression x&y means the bitwise AND of numbers x and y. In programming languages C++, Java and Python this operation is represented as ""&"", in Pascal \xe2\x80\x94 as ""and"".
The first line contains two integers n, m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of elements in the array and the number of limits.
Each of the next m lines contains three integers li, ri, qi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89qi\xe2\x80\x89<\xe2\x80\x89230) describing the i-th limit.
If the interesting array exists, in the first line print ""YES"" (without the quotes) and in the second line print n integers a[1],\xe2\x80\x89a[2],\xe2\x80\x89...,\xe2\x80\x89a[n] (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a[i]\xe2\x80\x89<\xe2\x80\x89230) decribing the interesting array. If there are multiple answers, print any of them.
If the interesting array doesn\'t exist, print ""NO"" (without the quotes) in the single line." "1800  x6572"
482A "Diverse Permutation" "constructive algorithms, greedy" "Permutation p is an ordered set of integers p1,\xe2\x80\x89\xe2\x80\x89\xe2\x80\x89p2,\xe2\x80\x89\xe2\x80\x89\xe2\x80\x89...,\xe2\x80\x89\xe2\x80\x89\xe2\x80\x89pn, consisting of n distinct positive integers not larger than n. We\'ll denote as n the length of permutation p1,\xe2\x80\x89\xe2\x80\x89\xe2\x80\x89p2,\xe2\x80\x89\xe2\x80\x89\xe2\x80\x89...,\xe2\x80\x89\xe2\x80\x89\xe2\x80\x89pn.
Your task is to find such permutation p of length n, that the group of numbers |p1\xe2\x80\x89-\xe2\x80\x89p2|,\xe2\x80\x89|p2\xe2\x80\x89-\xe2\x80\x89p3|,\xe2\x80\x89...,\xe2\x80\x89|pn\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89-\xe2\x80\x89pn| has exactly k distinct elements.
The single line of the input contains two space-separated positive integers n, k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89<\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).
Print n integers forming the permutation. If there are multiple answers, print any of them.
By |x| we denote the absolute value of number x. " "1200  x9662"
480E "Parking Lot" "data structures, divide and conquer" "Petya\'s been bored at work and he is killing the time by watching the parking lot at the office. The parking lot looks from above like an n\xe2\x80\x89\xc3\x97\xe2\x80\x89m table (a cell of the table corresponds to a single parking spot). Some spots in the parking lot are taken, others are empty.
Petya watches cars riding into the parking lot one by one. After a car settles down at the parking spot, Petya amuzes himself by counting what maximum square of empty spots (i.e. a square subtable) can be seen on the parking lot if we look at it from above. Also, he takes notes of the square\'s size (side length) in his notebook. 
You task is: given the state of the parking lot at the initial moment of time and the information about where the arriving cars park, restore what Petya wrote in his notebook. It is midday, so nobody leaves the lot.
The first line contains three integers n, m and k \xe2\x80\x94 the sizes of the parking lot and the number of arriving cars after Petya started his watch (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000). Each of the following n lines contains m characters \'X\' and \'.\', where \'X\' means a taken spot and \'.\' means an empty spot. Each of the next k lines contains a pair of integers xi, yi \xe2\x80\x94 the number of row and column of the spot the corresponding car takes (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m). It is guaranteed that this place was empty. You can assume that a car enters a parking lot only after the previous car successfully finds a spot.
Print k integers \xe2\x80\x94 the length of the side of the maximum square of empty spots after the corresponding car has entered the parking lot." "2800  x569"
480D Parcels "dp, graphs" "Jaroslav owns a small courier service. He has recently got and introduced a new system of processing parcels. Each parcel is a box, the box has its weight and strength. The system works as follows. It originally has an empty platform where you can put boxes by the following rules: 
You can take only the topmost box from the platform.
The system receives n parcels, the i-th parcel arrives exactly at time ini, its weight and strength are equal to wi and si, respectively. Each parcel has a value of vi bourles. However, to obtain this value, the system needs to give the parcel exactly at time outi, otherwise Jaroslav will get 0 bourles for it. Thus, Jaroslav can skip any parcel and not put on the platform, formally deliver it at time ini and not get anything for it. 
Any operation in the problem is performed instantly. This means that it is possible to make several operations of receiving and delivering parcels at the same time and in any order. 
Please note that the parcel that is delivered at time outi, immediately gets outside of the system, and the following activities taking place at the same time are made \xe2\x80\x8b\xe2\x80\x8bwithout taking it into consideration. 
Since the system is very complex, and there are a lot of received parcels, Jaroslav asks you to say what maximum amount of money he can get using his system.
The first line of the input contains two space-separated integers n and S (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89S\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000). Then n lines follow, the i-th line contains five space-separated integers: ini, outi, wi, si and vi (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ini\xe2\x80\x89<\xe2\x80\x89outi\xe2\x80\x89<\xe2\x80\x892n, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89wi,\xe2\x80\x89si\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89vi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106). It is guaranteed that for any i and j (i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j) either ini\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89inj, or outi\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89outj.
Print a single number \xe2\x80\x94 the maximum sum in bourles that Jaroslav can get.
Note to the second sample (T is the moment in time): 
Note that you could have skipped the fourth parcel and got the fifth one instead, but in this case the final sum would be 4 bourles." "2600  x460"
479E "Riding in a Lift" "combinatorics, dp" "Imagine that you are in a building that has exactly n floors. You can move between the floors in a lift. Let\'s number the floors from bottom to top with integers from 1 to n. Now you\'re on the floor number a. You are very bored, so you want to take the lift. Floor number b has a secret lab, the entry is forbidden. However, you already are in the mood and decide to make k consecutive trips in the lift.
Let us suppose that at the moment you are on the floor number x (initially, you were on floor a). For another trip between floors you choose some floor with number y (y\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89x) and the lift travels to this floor. As you cannot visit floor b with the secret lab, you decided that the distance from the current floor x to the chosen y must be strictly less than the distance from the current floor x to floor b with the secret lab. Formally, it means that the following inequation must fulfill: |x\xe2\x80\x89-\xe2\x80\x89y|\xe2\x80\x89<\xe2\x80\x89|x\xe2\x80\x89-\xe2\x80\x89b|. After the lift successfully transports you to floor y, you write down number y in your notepad.
Your task is to find the number of distinct number sequences that you could have written in the notebook as the result of k trips in the lift. As the sought number of trips can be rather large, find the remainder after dividing the number by 1000000007 (109\xe2\x80\x89+\xe2\x80\x897).
The first line of the input contains four space-separated integers n, a, b, k (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, a\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89b).
Print a single integer \xe2\x80\x94 the remainder after dividing the sought number of sequences by 1000000007 (109\xe2\x80\x89+\xe2\x80\x897).
Two sequences p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pk and q1,\xe2\x80\x89q2,\xe2\x80\x89...,\xe2\x80\x89qk are distinct, if there is such integer j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k), that pj\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89qj.
Notes to the samples:" "1900  x5166"
479D "Long Jumps" "binary search, greedy, implementation" "Valery is a PE teacher at a school in Berland. Soon the students are going to take a test in long jumps, and Valery has lost his favorite ruler! 
However, there is no reason for disappointment, as Valery has found another ruler, its length is l centimeters. The ruler already has n marks, with which he can make measurements. We assume that the marks are numbered from 1 to n in the order they appear from the beginning of the ruler to its end. The first point coincides with the beginning of the ruler and represents the origin. The last mark coincides with the end of the ruler, at distance l from the origin. This ruler can be repesented by an increasing sequence a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an, where ai denotes the distance of the i-th mark from the origin (a1\xe2\x80\x89=\xe2\x80\x890, an\xe2\x80\x89=\xe2\x80\x89l).
Valery believes that with a ruler he can measure the distance of d centimeters, if there is a pair of integers i and j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), such that the distance between the i-th and the j-th mark is exactly equal to d (in other words, aj\xe2\x80\x89-\xe2\x80\x89ai\xe2\x80\x89=\xe2\x80\x89d). 
Under the rules, the girls should be able to jump at least x centimeters, and the boys should be able to jump at least y (x\xe2\x80\x89<\xe2\x80\x89y) centimeters. To test the children\'s abilities, Valery needs a ruler to measure each of the distances x and y. 
Your task is to determine what is the minimum number of additional marks you need to add on the ruler so that they can be used to measure the distances x and y. Valery can add the marks at any integer non-negative distance from the origin not exceeding the length of the ruler.
The first line contains four positive space-separated integers n, l, x, y (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89<\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l) \xe2\x80\x94 the number of marks, the length of the ruler and the jump norms for girls and boys, correspondingly.
The second line contains a sequence of n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (0\xe2\x80\x89=\xe2\x80\x89a1\xe2\x80\x89<\xe2\x80\x89a2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89an\xe2\x80\x89=\xe2\x80\x89l), where ai shows the distance from the i-th mark to the origin.
In the first line print a single non-negative integer v \xe2\x80\x94 the minimum number of marks that you need to add on the ruler.
In the second line print v space-separated integers p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pv (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l). Number pi means that the i-th mark should be at the distance of pi centimeters from the origin. Print the marks in any order. If there are multiple solutions, print any of them.
In the first sample it is impossible to initially measure the distance of 230 centimeters. For that it is enough to add a 20 centimeter mark or a 230 centimeter mark.
In the second sample you already can use the ruler to measure the distances of 185 and 230 centimeters, so you don\'t have to add new marks.
In the third sample the ruler only contains the initial and the final marks. We will need to add two marks to be able to test the children\'s skills." "1700  x4795"
479C Exams "greedy, sortings" "Student Valera is an undergraduate student at the University. His end of term exams are approaching and he is to pass exactly n exams. Valera is a smart guy, so he will be able to pass any exam he takes on his first try. Besides, he can take several exams on one day, and in any order.
According to the schedule, a student can take the exam for the i-th subject on the day number ai. However, Valera has made an arrangement with each teacher and the teacher of the i-th subject allowed him to take an exam before the schedule time on day bi (bi\xe2\x80\x89<\xe2\x80\x89ai). Thus, Valera can take an exam for the i-th subject either on day ai, or on day bi. All the teachers put the record of the exam in the student\'s record book on the day of the actual exam and write down the date of the mark as number ai.
Valera believes that it would be rather strange if the entries in the record book did not go in the order of non-decreasing date. Therefore Valera asks you to help him. Find the minimum possible value of the day when Valera can take the final exam if he takes exams so that all the records in his record book go in the order of non-decreasing date.
The first line contains a single positive integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000) \xe2\x80\x94 the number of exams Valera will take.
Each of the next n lines contains two positive space-separated integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89<\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the date of the exam in the schedule and the early date of passing the i-th exam, correspondingly.
Print a single integer \xe2\x80\x94 the minimum possible number of the day when Valera can take the last exam if he takes all the exams so that all the records in his record book go in the order of non-decreasing date.
In the first sample Valera first takes an exam in the second subject on the first day (the teacher writes down the schedule date that is 3). On the next day he takes an exam in the third subject (the teacher writes down the schedule date, 4), then he takes an exam in the first subject (the teacher writes down the mark with date 5). Thus, Valera takes the last exam on the second day and the dates will go in the non-decreasing order: 3, 4, 5.
In the second sample Valera first takes an exam in the third subject on the fourth day. Then he takes an exam in the second subject on the fifth day. After that on the sixth day Valera takes an exam in the first subject." "1400  x29846"
479B Towers "brute force, constructive algorithms, greedy, implementation, sortings" "As you know, all the kids in Berland love playing with cubes. Little Petya has n towers consisting of cubes of the same size. Tower with number i consists of ai cubes stacked one on top of the other. Petya defines the instability of a set of towers as a value equal to the difference between the heights of the highest and the lowest of the towers. For example, if Petya built five cube towers with heights (8, 3, 2, 6, 3), the instability of this set is equal to 6 (the highest tower has height 8, the lowest one has height 2). 
The boy wants the instability of his set of towers to be as low as possible. All he can do is to perform the following operation several times: take the top cube from some tower and put it on top of some other tower of his set. Please note that Petya would never put the cube on the same tower from which it was removed because he thinks it\'s a waste of time. 
Before going to school, the boy will have time to perform no more than k such operations. Petya does not want to be late for class, so you have to help him accomplish this task.
The first line contains two space-separated positive integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000) \xe2\x80\x94 the number of towers in the given set and the maximum number of operations Petya can perform. The second line contains n space-separated positive integers ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104) \xe2\x80\x94 the towers\' initial heights.
In the first line print two space-separated non-negative integers s and m (m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k). The first number is the value of the minimum possible instability that can be obtained after performing at most k operations, the second number is the number of operations needed for that.
In the next m lines print the description of each operation as two positive integers i and j, each of them lies within limits from 1 to n. They represent that Petya took the top cube from the i-th tower and put in on the j-th one (i\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89j). Note that in the process of performing operations the heights of some towers can become equal to zero.
If there are multiple correct sequences at which the minimum possible instability is achieved, you are allowed to print any of them.
In the first sample you need to move the cubes two times, from the second tower to the third one and from the second one to the first one. Then the heights of the towers are all the same and equal to 6." "1400  x7926"
479A Expression "brute force, math" "Petya studies in a school and he adores Maths. His class has been studying arithmetic expressions. On the last class the teacher wrote three positive integers a, b, c on the blackboard. The task was to insert signs of operations \'+\' and \'*\', and probably brackets between the numbers so that the value of the resulting expression is as large as possible. Let\'s consider an example: assume that the teacher wrote numbers 1, 2 and 3 on the blackboard. Here are some ways of placing signs and brackets:
Note that you can insert operation signs only between a and b, and between b and c, that is, you cannot swap integers. For instance, in the given sample you cannot get expression (1+3)*2.
It\'s easy to see that the maximum value that you can obtain is 9.
Your task is: given a, b and c print the maximum value that you can get.
The input contains three integers a, b and c, each on a single line (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b,\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910).
Print the maximum value of the expression that you can obtain." "1000  x95154"
478E "Wavy numbers" "brute force, dfs and similar, meet-in-the-middle, sortings" "A wavy number is such positive integer that for any digit of its decimal representation except for the first one and the last one following condition holds: the digit is either strictly larger than both its adjacent digits or strictly less than both its adjacent digits. For example, numbers 35270, 102, 747, 20 and 3 are wavy and numbers 123, 1000 and 2212 are not.
The task is to find the k-th smallest wavy number r that is divisible by n for the given integer values n and k.
You are to write a program that will find the value of r if it doesn\'t exceed 1014.
The only line of input contains two integers n and k, separated by a single space (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891014). 
Your task is to output the only integer r \xe2\x80\x94 the answer to the given problem. If such number does not exist or it is larger than 1014, then print ""-1"" (minus one without the quotes) instead.
The values of the first four wavy numbers that are divisible by n for the first sample are: 492, 615, 738 and 1845." "2900  x221"
478D "Red-Green Towers" dp "There are r red and g green blocks for construction of the red-green tower. Red-green tower can be built following next rules:
 
 
 
Let h be the maximum possible number of levels of red-green tower, that can be built out of r red and g green blocks meeting the rules above. The task is to determine how many different red-green towers having h levels can be built out of the available blocks.
Two red-green towers are considered different if there exists some level, that consists of red blocks in the one tower and consists of green blocks in the other tower.
You are to write a program that will find the number of different red-green towers of height h modulo 109\xe2\x80\x89+\xe2\x80\x897.
The only line of input contains two integers r and g, separated by a single space \xe2\x80\x94 the number of available red and green blocks respectively (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r,\xe2\x80\x89g\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105, r\xe2\x80\x89+\xe2\x80\x89g\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x891).
Output the only integer \xe2\x80\x94 the number of different possible red-green towers of height h modulo 109\xe2\x80\x89+\xe2\x80\x897.
The image in the problem statement shows all possible red-green towers for the first sample." "2000  x6047"
478C "Table Decorations" greedy "You have r red, g green and b blue balloons. To decorate a single table for the banquet you need exactly three balloons. Three balloons attached to some table shouldn\'t have the same color. What maximum number t of tables can be decorated if we know number of balloons of each color?
Your task is to write a program that for given values r, g and b will find the maximum number t of tables, that can be decorated in the required manner.
The single line contains three integers r, g and b (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r,\xe2\x80\x89g,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7109) \xe2\x80\x94 the number of red, green and blue baloons respectively. The numbers are separated by exactly one space.
Print a single integer t \xe2\x80\x94 the maximum number of tables that can be decorated in the required manner.
In the first sample you can decorate the tables with the following balloon sets: ""rgg"", ""gbb"", ""brr"", ""rrg"", where ""r"", ""g"" and ""b"" represent the red, green and blue balls, respectively." "1800  x18358"
478B "Random Teams" "combinatorics, constructive algorithms, greedy, math" "n participants of the competition were split into m teams in some manner so that each team has at least one participant. After the competition each pair of participants from the same team became friends.
Your task is to write a program that will find the minimum and the maximum number of pairs of friends that could have formed by the end of the competition.
The only line of input contains two integers n and m, separated by a single space (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the number of participants and the number of teams respectively. 
The only line of the output should contain two integers kmin and kmax \xe2\x80\x94 the minimum possible number of pairs of friends and the maximum possible number of pairs of friends respectively.
In the first sample all the participants get into one team, so there will be exactly ten pairs of friends.
In the second sample at any possible arrangement one team will always have two participants and the other team will always have one participant. Thus, the number of pairs of friends will always be equal to one.
In the third sample minimum number of newly formed friendships can be achieved if participants were split on teams consisting of 2 people, maximum number can be achieved if participants were split on teams of 1, 1 and 4 people." "1300  x36841"
478A "Initial Bet" implementation "There are five people playing a game called ""Generosity"". Each person gives some non-zero number of coins b as an initial bet. After all players make their bets of b coins, the following operation is repeated for several times: a coin is passed from one player to some other player.
Your task is to write a program that can, given the number of coins each player has at the end of the game, determine the size b of the initial bet or find out that such outcome of the game cannot be obtained for any positive number of coins b in the initial bet.
The input consists of a single line containing five integers c1,\xe2\x80\x89c2,\xe2\x80\x89c3,\xe2\x80\x89c4 and c5 \xe2\x80\x94 the number of coins that the first, second, third, fourth and fifth players respectively have at the end of the game (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c1,\xe2\x80\x89c2,\xe2\x80\x89c3,\xe2\x80\x89c4,\xe2\x80\x89c5\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100).
Print the only line containing a single positive integer b \xe2\x80\x94 the number of coins in the initial bet of each player. If there is no such value of b, then print the only value ""-1"" (quotes for clarity).
In the first sample the following sequence of operations is possible:" "1100  x25747"
477E "Dreamoon and Notepad" "data structures" "Dreamoon has just created a document of hard problems using notepad.exe. The document consists of n lines of text, ai denotes the length of the i-th line. He now wants to know what is the fastest way to move the cursor around because the document is really long.
Let (r,\xe2\x80\x89c) be a current cursor position, where r is row number and c is position of cursor in the row. We have 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ar.
We can use following six operations in notepad.exe to move our cursor assuming the current cursor position is at (r,\xe2\x80\x89c):
You\'re given the document description (n and sequence ai) and q queries from Dreamoon. Each query asks what minimal number of key presses is needed to move the cursor from (r1,\xe2\x80\x89c1) to (r2,\xe2\x80\x89c2).
The first line contains an integer n(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89400,\xe2\x80\x89000) \xe2\x80\x94 the number of lines of text. 
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89108).
The third line contains an integer q(1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89400,\xe2\x80\x89000). 
Each of the next q lines contains four integers r1,\xe2\x80\x89c1,\xe2\x80\x89r2,\xe2\x80\x89c2 representing a query (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r1,\xe2\x80\x89r2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ar1,\xe2\x80\x890\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89c2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ar2).
For each query print the result of the query.
In the first sample, the first query can be solved with keys: HOME, right.
The second query can be solved with keys: down, down, down, END, down.
The third query can be solved with keys: down, END, down.
The fourth query can be solved with keys: END, down." "3100  x135"
477D "Dreamoon and Binary" "dp, strings" "Dreamoon saw a large integer x written on the ground and wants to print its binary form out. Dreamoon has accomplished the part of turning x into its binary format. Now he is going to print it in the following manner.
He has an integer n\xe2\x80\x89=\xe2\x80\x890 and can only perform the following two operations in any order for unlimited times each:
Let\'s define an ideal sequence as a sequence of operations that can successfully print binary representation of x without leading zeros and ends with a print operation (i.e. operation 1). Dreamoon wants to know how many different ideal sequences are there and the length (in operations) of the shortest ideal sequence.
The answers might be large so please print them modulo 1000000007 (109\xe2\x80\x89+\xe2\x80\x897).
Let\'s define the string representation of an ideal sequence as a string of \'1\' and \'2\' where the i-th character in the string matches the i-th operation performed. Two ideal sequences are called different if their string representations are different.
The single line of the input contains a binary integer representing x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89<\xe2\x80\x8925000) without leading zeros.
The first line of the output should contain an integer representing the number of different ideal sequences modulo 1000000007 (109\xe2\x80\x89+\xe2\x80\x897).
The second line of the output contains an integer representing the minimal length of an ideal sequence modulo 1000000007 (109\xe2\x80\x89+\xe2\x80\x897).
For the first sample, the shortest and the only ideal sequence is \xc2\xab222221\xc2\xbb of length 6.
For the second sample, there are three ideal sequences \xc2\xab21211\xc2\xbb, \xc2\xab212222222221\xc2\xbb, \xc2\xab222222222222222222222222221\xc2\xbb. Among them the shortest one has length 5." "2700  x526"
476E "Dreamoon and Strings" "dp, strings" "Dreamoon has a string s and a pattern string p. He first removes exactly x characters from s obtaining string s\' as a result. Then he calculates  that is defined as the maximal number of non-overlapping substrings equal to p that can be found in s\'. He wants to make this number as big as possible.
More formally, let\'s define  as maximum value of  over all s\' that can be obtained by removing exactly x characters from s. Dreamoon wants to know  for all x from 0 to |s| where |s| denotes the length of string s.
The first line of the input contains the string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xe2\x80\x89000).
The second line of the input contains the string p (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|p|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500).
Both strings will only consist of lower case English letters.
Print |s|\xe2\x80\x89+\xe2\x80\x891 space-separated integers in a single line representing the  for all x from 0 to |s|.
For the first sample, the corresponding optimal values of s\' after removal 0 through |s|\xe2\x80\x89=\xe2\x80\x895 characters from s are {""aaaaa"", ""aaaa"", ""aaa"", ""aa"", ""a"", """"}. 
For the second sample, possible corresponding optimal values of s\' are {""axbaxxb"", ""abaxxb"", ""axbab"", ""abab"", ""aba"", ""ab"", ""a"", """"}." "2200  x1972"
476D "Dreamoon and Sets" "constructive algorithms, greedy, math" "Dreamoon likes to play with sets, integers and .  is defined as the largest positive integer that divides both a and b.
Let S be a set of exactly four distinct integers greater than 0. Define S to be of rank k if and only if for all pairs of distinct elements si, sj from S, .
Given k and n, Dreamoon wants to make up n sets of rank k using integers from 1 to m such that no integer is used in two different sets (of course you can leave some integers without use). Calculate the minimum m that makes it possible and print one possible solution.
The single line of the input contains two space separated integers n, k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910\xe2\x80\x89000,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100).
On the first line print a single integer \xe2\x80\x94 the minimal possible m. 
On each of the next n lines print four space separated integers representing the i-th set.
Neither the order of the sets nor the order of integers within a set is important. If there are multiple possible solutions with minimal m, print any one of them.
For the first example it\'s easy to see that set {1,\xe2\x80\x892,\xe2\x80\x893,\xe2\x80\x894} isn\'t a valid set of rank 1 since ." "1900  x4685"
476C "Dreamoon and Sums" math "Dreamoon loves summing up something for no reason. One day he obtains two integers a and b occasionally. He wants to calculate the sum of all nice integers. Positive integer x is called nice if  and , where k is some integer number in range [1,\xe2\x80\x89a].
By  we denote the quotient of integer division of x and y. By  we denote the remainder of integer division of x and y. You can read more about these operations here: http://goo.gl/AcsXhT.
The answer may be large, so please print its remainder modulo 1\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89007 (109\xe2\x80\x89+\xe2\x80\x897). Can you compute it faster than Dreamoon?
The single line of the input contains two integers a, b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89107).
Print a single integer representing the answer modulo 1\xe2\x80\x89000\xe2\x80\x89000\xe2\x80\x89007 (109\xe2\x80\x89+\xe2\x80\x897).
For the first sample, there are no nice integers because  is always zero.
For the second sample, the set of nice integers is {3,\xe2\x80\x895}." "1600  x5750"
476B "Dreamoon and WiFi" "bitmasks, brute force, combinatorics, dp, math, probabilities" "Dreamoon is standing at the position 0 on a number line. Drazil is sending a list of commands through Wi-Fi to Dreamoon\'s smartphone and Dreamoon follows them.
Each command is one of the following two types: 
But the Wi-Fi condition is so poor that Dreamoon\'s smartphone reports some of the commands can\'t be recognized and Dreamoon knows that some of them might even be wrong though successfully recognized. Dreamoon decides to follow every recognized command and toss a fair coin to decide those unrecognized ones (that means, he moves to the 1 unit to the negative or positive direction with the same probability 0.5). 
You are given an original list of commands sent by Drazil and list received by Dreamoon. What is the probability that Dreamoon ends in the position originally supposed to be final by Drazil\'s commands?
The first line contains a string s1 \xe2\x80\x94 the commands Drazil sends to Dreamoon, this string consists of only the characters in the set {\'+\', \'-\'}. 
The second line contains a string s2 \xe2\x80\x94 the commands Dreamoon\'s smartphone recognizes, this string consists of only the characters in the set {\'+\', \'-\', \'?\'}. \'?\' denotes an unrecognized command.
Lengths of two strings are equal and do not exceed 10.
Output a single real number corresponding to the probability. The answer will be considered correct if its relative or absolute error doesn\'t exceed 10\xe2\x80\x89-\xe2\x80\x899.
For the first sample, both s1 and s2 will lead Dreamoon to finish at the same position \xe2\x80\x89+\xe2\x80\x891. 
For the second sample, s1 will lead Dreamoon to finish at position 0, while there are four possibilites for s2: {""+-++"", ""+-+-"", ""+--+"", ""+---""} with ending position {+2, 0, 0, -2} respectively. So there are 2 correct cases out of 4, so the probability of finishing at the correct position is 0.5. 
For the third sample, s2 could only lead us to finish at positions {+1, -1, -3}, so the probability to finish at the correct position \xe2\x80\x89+\xe2\x80\x893 is 0." "1300  x31079"
476A "Dreamoon and Stairs" "implementation, math" "Dreamoon wants to climb up a stair of n steps. He can climb 1 or 2 steps at each move. Dreamoon wants the number of moves to be a multiple of an integer m. 
What is the minimal number of moves making him climb to the top of the stairs that satisfies his condition?
The single line contains two space separated integers n, m (0\xe2\x80\x89<\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910000,\xe2\x80\x891\xe2\x80\x89<\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910).
Print a single integer \xe2\x80\x94 the minimal number of moves being a multiple of m. If there is no way he can climb satisfying condition print \xe2\x80\x89-\xe2\x80\x891 instead.
For the first sample, Dreamoon could climb in 6 moves with following sequence of steps: {2, 2, 2, 2, 1, 1}.
For the second sample, there are only three valid sequence of steps {2, 1}, {1, 2}, {1, 1, 1} with 2, 2, and 3 steps respectively. All these numbers are not multiples of 5." "1000  x44309"
475F Meta-universe "data structures" "Consider infinite grid of unit cells. Some of those cells are planets. 
Meta-universe M\xe2\x80\x89=\xe2\x80\x89{p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pk} is a set of planets. Suppose there is an infinite row or column with following two properties: 1) it doesn\'t contain any planet pi of meta-universe M on it; 2) there are planets of M located on both sides from this row or column. In this case we can turn the meta-universe M into two non-empty meta-universes M1 and M2 containing planets that are located on respective sides of this row or column. 
A meta-universe which can\'t be split using operation above is called a universe. We perform such operations until all meta-universes turn to universes.
Given positions of the planets in the original meta-universe, find the number of universes that are result of described process. It can be proved that each universe is uniquely identified not depending from order of splitting.
The first line of input contains an integer n, (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), denoting the number of planets in the meta-universe.
The next n lines each contain integers xi and yi, (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), denoting the coordinates of the i-th planet. All planets are located in different cells.
Print the number of resulting universes.
The following figure describes the first test case:" "2900  x230"
475E "Strongly Connected City 2" "dfs and similar" "Imagine a city with n junctions and m streets. Junctions are numbered from 1 to n.
In order to increase the traffic flow, mayor of the city has decided to make each street one-way. This means in the street between junctions u and v, the traffic moves only from u to v or only from v to u. 
The problem is to direct the traffic flow of streets in a way that maximizes the number of pairs (u,\xe2\x80\x89v) where 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89u,\xe2\x80\x89v\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and it is possible to reach junction v from u by passing the streets in their specified direction. Your task is to find out maximal possible number of such pairs.
The first line of input contains integers n and m, (), denoting the number of junctions and streets of the city.
Each of the following m lines contains two integers u and v, (u\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89v), denoting endpoints of a street in the city.
Between every two junctions there will be at most one street. It is guaranteed that before mayor decision (when all streets were two-way) it was possible to reach each junction from any other junction.
Print the maximal number of pairs (u,\xe2\x80\x89v) such that that it is possible to reach junction v from u after directing the streets.
In the first sample, if the mayor makes first and second streets one-way towards the junction 1 and third and fourth streets in opposite direction, there would be 13 pairs of reachable junctions: {(1,\xe2\x80\x891),\xe2\x80\x89(2,\xe2\x80\x892),\xe2\x80\x89(3,\xe2\x80\x893),\xe2\x80\x89(4,\xe2\x80\x894),\xe2\x80\x89(5,\xe2\x80\x895),\xe2\x80\x89(2,\xe2\x80\x891),\xe2\x80\x89(3,\xe2\x80\x891),\xe2\x80\x89(1,\xe2\x80\x894),\xe2\x80\x89(1,\xe2\x80\x895),\xe2\x80\x89(2,\xe2\x80\x894),\xe2\x80\x89(2,\xe2\x80\x895),\xe2\x80\x89(3,\xe2\x80\x894),\xe2\x80\x89(3,\xe2\x80\x895)}" "2700  x412"
475D CGCDSSQ "brute force, data structures, math" "Given a sequence of integers a1,\xe2\x80\x89...,\xe2\x80\x89an and q queries x1,\xe2\x80\x89...,\xe2\x80\x89xq on it. For each query xi you have to count the number of pairs (l,\xe2\x80\x89r) such that 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and gcd(al,\xe2\x80\x89al\xe2\x80\x89+\xe2\x80\x891,\xe2\x80\x89...,\xe2\x80\x89ar)\xe2\x80\x89=\xe2\x80\x89xi.
 is a greatest common divisor of v1,\xe2\x80\x89v2,\xe2\x80\x89...,\xe2\x80\x89vn, that is equal to a largest positive integer that divides all vi.
The first line of the input contains integer n, (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), denoting the length of the sequence. The next line contains n space separated integers a1,\xe2\x80\x89...,\xe2\x80\x89an, (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
The third line of the input contains integer q, (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x893\xe2\x80\x89\xc3\x97\xe2\x80\x89105), denoting the number of queries. Then follows q lines, each contain an integer xi, (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
For each query print the result in a separate line." "2000  x4966"
475C "Kamal-ol-molk's Painting" "brute force, constructive algorithms, greedy" "Rumors say that one of Kamal-ol-molk\'s paintings has been altered. A rectangular brush has been moved right and down on the painting.
Consider the painting as a n\xe2\x80\x89\xc3\x97\xe2\x80\x89m rectangular grid. At the beginning an x\xe2\x80\x89\xc3\x97\xe2\x80\x89y rectangular brush is placed somewhere in the frame, with edges parallel to the frame, (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m). Then the brush is moved several times. Each time the brush is moved one unit right or down. The brush has been strictly inside the frame during the painting. The brush alters every cell it has covered at some moment.
You have found one of the old Kamal-ol-molk\'s paintings. You want to know if it\'s possible that it has been altered in described manner. If yes, you also want to know minimum possible area of the brush. 
The first line of input contains two integers n and m, (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000), denoting the height and width of the painting.
The next n lines contain the painting. Each line has m characters. Character \'X\' denotes an altered cell, otherwise it\'s showed by \'.\'. There will be at least one altered cell in the painting.
Print the minimum area of the brush in a line, if the painting is possibly altered, otherwise print \xe2\x80\x89-\xe2\x80\x891." "2100  x786"
475B "Strongly Connected City" "brute force, dfs and similar, graphs, implementation" "Imagine a city with n horizontal streets crossing m vertical streets, forming an (n\xe2\x80\x89-\xe2\x80\x891)\xe2\x80\x89\xc3\x97\xe2\x80\x89(m\xe2\x80\x89-\xe2\x80\x891) grid. In order to increase the traffic flow, mayor of the city has decided to make each street one way. This means in each horizontal street, the traffic moves only from west to east or only from east to west. Also, traffic moves only from north to south or only from south to north in each vertical street. It is possible to enter a horizontal street from a vertical street, or vice versa, at their intersection.
The mayor has received some street direction patterns. Your task is to check whether it is possible to reach any junction from any other junction in the proposed street direction pattern.
The first line of input contains two integers n and m, (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8920), denoting the number of horizontal streets and the number of vertical streets.
The second line contains a string of length n, made of characters \'<\' and \'>\', denoting direction of each horizontal street. If the i-th character is equal to \'<\', the street is directed from east to west otherwise, the street is directed from west to east. Streets are listed in order from north to south.
The third line contains a string of length m, made of characters \'^\' and \'v\', denoting direction of each vertical street. If the i-th character is equal to \'^\', the street is directed from south to north, otherwise the street is directed from north to south. Streets are listed in order from west to east.
If the given pattern meets the mayor\'s criteria, print a single line containing ""YES"", otherwise print a single line containing ""NO"".
The figure above shows street directions in the second sample test case." "1400  x8527"
475A "Bayan Bus" implementation "The final round of Bayan Programming Contest will be held in Tehran, and the participants will be carried around with a yellow bus. The bus has 34 passenger seats: 4 seats in the last row and 3 seats in remaining rows. 
The event coordinator has a list of k participants who should be picked up at the airport. When a participant gets on the bus, he will sit in the last row with an empty seat. If there is more than one empty seat in that row, he will take the leftmost one. 
In order to keep track of the people who are on the bus, the event coordinator needs a figure showing which seats are going to be taken by k participants. Your task is to draw the figure representing occupied seats.
The only line of input contains integer k, (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8934), denoting the number of participants.
Print the figure of a bus with k passengers as described in sample tests. Character \'#\' denotes an empty seat, while \'O\' denotes a taken seat. \'D\' is the bus driver and other characters in the output are for the purpose of beautifying the figure. Strictly follow the sample test cases output format. Print exactly six lines. Do not output extra space or other characters." "1100  x4773"
474F "Ant colony" "data structures, math, number theory" "Mole is hungry again. He found one ant colony, consisting of n ants, ordered in a row. Each ant i (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) has a strength si.
In order to make his dinner more interesting, Mole organizes a version of \xc2\xabHunger Games\xc2\xbb for the ants. He chooses two numbers l and r (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and each pair of ants with indices between l and r (inclusively) will fight. When two ants i and j fight, ant i gets one battle point only if si divides sj (also, ant j gets one battle point only if sj divides si). 
After all fights have been finished, Mole makes the ranking. An ant i, with vi battle points obtained, is going to be freed only if vi\xe2\x80\x89=\xe2\x80\x89r\xe2\x80\x89-\xe2\x80\x89l, or in other words only if it took a point in every fight it participated. After that, Mole eats the rest of the ants. Note that there can be many ants freed or even none.
In order to choose the best sequence, Mole gives you t segments [li,\xe2\x80\x89ri] and asks for each of them how many ants is he going to eat if those ants fight.
The first line contains one integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the size of the ant colony. 
The second line contains n integers s1,\xe2\x80\x89s2,\xe2\x80\x89...,\xe2\x80\x89sn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89si\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109), the strengths of the ants. 
The third line contains one integer t (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the number of test cases. 
Each of the next t lines contains two integers li and ri (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), describing one query.
Print to the standard output t lines. The i-th line contains number of ants that Mole eats from the segment [li,\xe2\x80\x89ri].
In the first test battle points for each ant are v\xe2\x80\x89=\xe2\x80\x89[4,\xe2\x80\x890,\xe2\x80\x892,\xe2\x80\x890,\xe2\x80\x892], so ant number 1 is freed. Mole eats the ants 2, 3, 4, 5.
In the second test case battle points are v\xe2\x80\x89=\xe2\x80\x89[0,\xe2\x80\x892,\xe2\x80\x890,\xe2\x80\x892], so no ant is freed and all of them are eaten by Mole.
In the third test case battle points are v\xe2\x80\x89=\xe2\x80\x89[2,\xe2\x80\x890,\xe2\x80\x892], so ants number 3 and 5 are freed. Mole eats only the ant 4.
In the fourth test case battle points are v\xe2\x80\x89=\xe2\x80\x89[0,\xe2\x80\x891], so ant number 5 is freed. Mole eats the ant 4." "2100  x8816"
474E Pillars "binary search, data structures, dp, sortings, trees" "Marmot found a row with n pillars. The i-th pillar has the height of hi meters. Starting from one pillar i1, Marmot wants to jump on the pillars i2, ..., ik. (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i1\xe2\x80\x89<\xe2\x80\x89i2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89ik\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n). From a pillar i Marmot can jump on a pillar j only if i\xe2\x80\x89<\xe2\x80\x89j and |hi\xe2\x80\x89-\xe2\x80\x89hj|\xe2\x80\x89\xe2\x89\xa5\xe2\x80\x89d, where |x| is the absolute value of the number x.
Now Marmot is asking you find out a jump sequence with maximal length and print it.
The first line contains two integers n and d (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105, 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
The second line contains n numbers h1,\xe2\x80\x89h2,\xe2\x80\x89...,\xe2\x80\x89hn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891015).
The first line should contain one integer k, the maximal length of a jump sequence.
The second line should contain k integers i1,\xe2\x80\x89i2,\xe2\x80\x89...,\xe2\x80\x89ik (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i1\xe2\x80\x89<\xe2\x80\x89i2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89ik\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), representing the pillars\' indices from the maximal length jump sequence.
If there is more than one maximal length jump sequence, print any.
In the first example Marmot chooses the pillars 1, 2, 3, 5 with the heights 1, 3, 6, 4. Another jump sequence of length 4 is 1, 2, 4, 5." "2000  x3391"
474D Flowers dp "We saw the little game Marmot made for Mole\'s lunch. Now it\'s Marmot\'s dinner time and, as we all know, Marmot eats flowers. At every dinner he eats some red and white flowers. Therefore a dinner can be represented as a sequence of several flowers, some of them white and some of them red.
But, for a dinner to be tasty, there is a rule: Marmot wants to eat white flowers only in groups of size k.
Now Marmot wonders in how many ways he can eat between a and b flowers. As the number of ways could be very large, print it modulo 1000000007 (109\xe2\x80\x89+\xe2\x80\x897).
Input contains several test cases.
The first line contains two integers t and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89t,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), where t represents the number of test cases.
The next t lines contain two integers ai and bi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), describing the i-th test.
Print t lines to the standard output. The i-th line should contain the number of ways in which Marmot can eat between ai and bi flowers at dinner modulo 1000000007 (109\xe2\x80\x89+\xe2\x80\x897)." "1700  x25527"
474C "Captain Marmot" "brute force, geometry" "Captain Marmot wants to prepare a huge and important battle against his enemy, Captain Snake. For this battle he has n regiments, each consisting of 4 moles.
Initially, each mole i (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x894n) is placed at some position (xi,\xe2\x80\x89yi) in the Cartesian plane. Captain Marmot wants to move some moles to make the regiments compact, if it\'s possible.
Each mole i has a home placed at the position (ai,\xe2\x80\x89bi). Moving this mole one time means rotating his position point (xi,\xe2\x80\x89yi) 90 degrees counter-clockwise around it\'s home point (ai,\xe2\x80\x89bi).
A regiment is compact only if the position points of the 4 moles form a square with non-zero area.
Help Captain Marmot to find out for each regiment the minimal number of moves required to make that regiment compact, if it\'s possible.
The first line contains one integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100), the number of regiments.
The next 4n lines contain 4 integers xi, yi, ai, bi (\xe2\x80\x89-\xe2\x80\x89104\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi,\xe2\x80\x89yi,\xe2\x80\x89ai,\xe2\x80\x89bi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89104).
Print n lines to the standard output. If the regiment i can be made compact, the i-th line should contain one integer, the minimal number of required moves. Otherwise, on the i-th line print ""-1"" (without quotes).
In the first regiment we can move once the second or the third mole.
We can\'t make the second regiment compact.
In the third regiment, from the last 3 moles we can move once one and twice another one.
In the fourth regiment, we can move twice the first mole and once the third mole." "2000  x3129"
474B Worms "binary search, implementation" "It is lunch time for Mole. His friend, Marmot, prepared him a nice game for lunch.
Marmot brought Mole n ordered piles of worms such that i-th pile contains ai worms. He labeled all these worms with consecutive integers: worms in first pile are labeled with numbers 1 to a1, worms in second pile are labeled with numbers a1\xe2\x80\x89+\xe2\x80\x891 to a1\xe2\x80\x89+\xe2\x80\x89a2 and so on. See the example for a better understanding.
Mole can\'t eat all the worms (Marmot brought a lot) and, as we all know, Mole is blind, so Marmot tells him the labels of the best juicy worms. Marmot will only give Mole a worm if Mole says correctly in which pile this worm is contained.
Poor Mole asks for your help. For all juicy worms said by Marmot, tell Mole the correct answers.
The first line contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the number of piles.
The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89103, a1\xe2\x80\x89+\xe2\x80\x89a2\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89an\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106), where ai is the number of worms in the i-th pile.
The third line contains single integer m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105), the number of juicy worms said by Marmot.
The fourth line contains m integers q1,\xe2\x80\x89q2,\xe2\x80\x89...,\xe2\x80\x89qm (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89qi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a1\xe2\x80\x89+\xe2\x80\x89a2\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89an), the labels of the juicy worms.
Print m lines to the standard output. The i-th line should contain an integer, representing the number of the pile where the worm labeled with the number qi is.
For the sample input:" "1200  x49106"
474A Keyboard implementation "Our good friend Mole is trying to code a big message. He is typing on an unusual keyboard with characters arranged in following way:
Unfortunately Mole is blind, so sometimes it is problem for him to put his hands accurately. He accidentally moved both his hands with one position to the left or to the right. That means that now he presses not a button he wants, but one neighboring button (left or right, as specified in input).
We have a sequence of characters he has typed and we want to find the original message.
First line of the input contains one letter describing direction of shifting (\'L\' or \'R\' respectively for left or right).
Second line contains a sequence of characters written by Mole. The size of this sequence will be no more than 100. Sequence contains only symbols that appear on Mole\'s keyboard. It doesn\'t contain spaces as there is no space on Mole\'s keyboard.
It is guaranteed that even though Mole hands are moved, he is still pressing buttons on keyboard and not hitting outside it.
Print a line that contains the original message." "900  x46025"
472G "Design Tutorial: Increase the Constraints" "bitmasks, data structures, fft" "There is a simple way to create hard tasks: take one simple problem as the query, and try to find an algorithm that can solve it faster than bruteforce. This kind of tasks usually appears in OI contest, and usually involves data structures.
Let\'s try to create a task, for example, we take the ""Hamming distance problem"": for two binary strings s and t with the same length, the Hamming distance between them is the number of positions at which the corresponding symbols are different. For example, the Hamming distance between ""00111"" and ""10101"" is 2 (the different symbols are marked with bold).
We use the Hamming distance problem as a query in the following way: you are given two strings a and b and several queries. Each query will be: what is the Hamming distance between two strings ap1ap1\xe2\x80\x89+\xe2\x80\x891...ap1\xe2\x80\x89+\xe2\x80\x89len\xe2\x80\x89-\xe2\x80\x891 and bp2bp2\xe2\x80\x89+\xe2\x80\x891...bp2\xe2\x80\x89+\xe2\x80\x89len\xe2\x80\x89-\xe2\x80\x891?
Note, that in this problem the strings are zero-based, that is s\xe2\x80\x89=\xe2\x80\x89s0s1... s|s|\xe2\x80\x89-\xe2\x80\x891.
The first line contains a string a (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|a|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200000). The second line contains a string b (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|b|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200000). Each character of both strings is either ""0"" or ""1"".
The third line contains an integer q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89400000) \xe2\x80\x94 the number of queries. Each of the following q lines contains three integers: p1, p2 and len (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|a|\xe2\x80\x89-\xe2\x80\x89len; 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89p2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|b|\xe2\x80\x89-\xe2\x80\x89len), these numbers denote the parameters of the current query.
Output q integers \xe2\x80\x94 the answers for the queries." "2800  x404"
472F "Design Tutorial: Change the Goal" "constructive algorithms, math, matrices" "There are some tasks which have the following structure: you are given a model, and you can do some operations, you should use these operations to achive the goal. One way to create a new task is to use the same model and same operations, but change the goal.
Let\'s have a try. I have created the following task for Topcoder SRM 557 Div1-Hard: you are given n integers x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn. You are allowed to perform the assignments (as many as you want) of the following form xi ^= xj (in the original task i and j must be different, but in this task we allow i to equal j). The goal is to maximize the sum of all xi.
Now we just change the goal. You are also given n integers y1,\xe2\x80\x89y2,\xe2\x80\x89...,\xe2\x80\x89yn. You should make x1,\xe2\x80\x89x2,\xe2\x80\x89...,\xe2\x80\x89xn exactly equal to y1,\xe2\x80\x89y2,\xe2\x80\x89...,\xe2\x80\x89yn. In other words, for each i number xi should be equal to yi.
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8910000). The second line contains n integers: x1 to xn (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109). The third line contains n integers: y1 to yn (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).
If there is no solution, output -1.
If there is a solution, then in the first line output an integer m (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000000) \xe2\x80\x93 the number of assignments you need to perform. Then print m lines, each line should contain two integers i and j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n), which denote assignment xi ^= xj.
If there are multiple solutions you can print any of them. We can prove that under these constraints if there exists a solution then there always exists a solution with no more than 106 operations.
Assignment a ^= b denotes assignment a = a ^ b, where operation ""^"" is bitwise XOR of two integers." "2700  x258"
472E "Design Tutorial: Learn from a Game" "constructive algorithms, implementation" "One way to create task is to learn from game. You should pick a game and focus on part of the mechanic of that game, then it might be a good task.
Let\'s have a try. Puzzle and Dragon was a popular game in Japan, we focus on the puzzle part of that game, it is a tile-matching puzzle.
There is an n\xe2\x80\x89\xc3\x97\xe2\x80\x89m board which consists of orbs. During the game you can do the following move. In the beginning of move you touch a cell of the board, then you can move your finger to one of the adjacent cells (a cell not on the boundary has 8 adjacent cells), then you can move your finger from the current cell to one of the adjacent cells one more time, and so on. Each time you move your finger from a cell to another cell, the orbs in these cells swap with each other. In other words whatever move you make, the orb in the cell you are touching never changes.
The goal is to achieve such kind of pattern that the orbs will be cancelled and your monster will attack the enemy, but we don\'t care about these details. Instead, we will give you the initial board as an input and the target board as an output. Your goal is to determine whether there is a way to reach the target in a single move. 
The first line contains two integers: n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930).
The next n lines each contains m integers \xe2\x80\x94 the description of the initial board. The j-th integer in the i-th line is si,\xe2\x80\x89j (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89si,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89900), where si,\xe2\x80\x89j denotes the type of the orb located in the i-th row and j-th column of the board.
The next n lines contain the target board in the same format. Note, that the initial board and the target board will be different.
If there is no solution, then output: -1.
If there is a solution, then in the first line output an integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the number of finger moves.
In the next line print two integers x0 and y0 (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n; 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) \xe2\x80\x94 the position of the cell you touch at the beginning. In each of the next k lines print two integers xi and yi (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89xi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n; 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89yi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m) \xe2\x80\x94 the position you move to. Note that this position must be adjacent to the previous position, that is max(|xi\xe2\x80\x89-\xe2\x80\x89xi\xe2\x80\x89-\xe2\x80\x891|,\xe2\x80\x89|yi\xe2\x80\x89-\xe2\x80\x89yi\xe2\x80\x89-\xe2\x80\x891|)\xe2\x80\x89=\xe2\x80\x891.
If there are multiple solutions, you can print any of them. We can prove that under these constraints if there exists a solution then there is a solution with no more than 106 operations." "2800  x131"
472D "Design Tutorial: Inverse the Problem" "dfs and similar, dsu, shortest paths, trees" "There is an easy way to obtain a new task from an old one called ""Inverse the problem"": we give an output of the original task, and ask to generate an input, such that solution to the original problem will produce the output we provided. The hard task of Topcoder Open 2014 Round 2C, InverseRMQ, is a good example.
Now let\'s create a task this way. We will use the task: you are given a tree, please calculate the distance between any pair of its nodes. Yes, it is very easy, but the inverse version is a bit harder: you are given an n\xe2\x80\x89\xc3\x97\xe2\x80\x89n distance matrix. Determine if it is the distance matrix of a weighted tree (all weights must be positive integers).
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000) \xe2\x80\x94 the number of nodes in that graph.
Then next n lines each contains n integers di,\xe2\x80\x89j (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89di,\xe2\x80\x89j\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109) \xe2\x80\x94 the distance between node i and node j.
If there exists such a tree, output ""YES"", otherwise output ""NO"".
In the first example, the required tree exists. It has one edge between nodes 1 and 2 with weight 2, another edge between nodes 1 and 3 with weight 7.
In the second example, it is impossible because d1,\xe2\x80\x891 should be 0, but it is 1.
In the third example, it is impossible because d1,\xe2\x80\x892 should equal d2,\xe2\x80\x891." "1900  x5443"
472C "Design Tutorial: Make It Nondeterministic" greedy "A way to make a new task is to make it nondeterministic or probabilistic. For example, the hard task of Topcoder SRM 595, Constellation, is the probabilistic version of a convex hull.
Let\'s try to make a new task. Firstly we will use the following task. There are n people, sort them by their name. It is just an ordinary sorting problem, but we can make it more interesting by adding nondeterministic element. There are n people, each person will use either his/her first name or last name as a handle. Can the lexicographical order of the handles be exactly equal to the given permutation p?
More formally, if we denote the handle of the i-th person as hi, then the following condition must hold: .
The first line contains an integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105) \xe2\x80\x94 the number of people.
The next n lines each contains two strings. The i-th line contains strings fi and si (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|fi|,\xe2\x80\x89|si|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8950) \xe2\x80\x94 the first name and last name of the i-th person. Each string consists only of lowercase English letters. All of the given 2n strings will be distinct.
The next line contains n distinct integers: p1,\xe2\x80\x89p2,\xe2\x80\x89...,\xe2\x80\x89pn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).
If it is possible, output ""YES"", otherwise output ""NO"".
In example 1 and 2, we have 3 people: tourist, Petr and me (cgy4ever). You can see that whatever handle is chosen, I must be the first, then tourist and Petr must be the last.
In example 3, if Copernicus uses ""copernicus"" as his handle, everything will be alright." "1400  x6366"
472B "Design Tutorial: Learn from Life" "1300  x7425" "One way to create a task is to learn from life. You can choose some experience in real life, formalize it and then you will get a new task.
Let\'s think about a scene in real life: there are lots of people waiting in front of the elevator, each person wants to go to a certain floor. We can formalize it in the following way. We have n people standing on the first floor, the i-th person wants to go to the fi-th floor. Unfortunately, there is only one elevator and its capacity equal to k (that is at most k people can use it simultaneously). Initially the elevator is located on the first floor. The elevator needs |a\xe2\x80\x89-\xe2\x80\x89b| seconds to move from the a-th floor to the b-th floor (we don\'t count the time the people need to get on and off the elevator).
What is the minimal number of seconds that is needed to transport all the people to the corresponding floors and then return the elevator to the first floor?
The first line contains two integers n and k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000) \xe2\x80\x94 the number of people and the maximal capacity of the elevator.
The next line contains n integers: f1,\xe2\x80\x89f2,\xe2\x80\x89...,\xe2\x80\x89fn (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89fi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892000), where fi denotes the target floor of the i-th person.
Output a single integer \xe2\x80\x94 the minimal time needed to achieve the goal.
In first sample, an optimal solution is: " 472A
